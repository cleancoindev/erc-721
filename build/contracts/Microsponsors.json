{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "auctionEndTime",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "auctionEndTime",
          "type": "uint32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        }
      ],
      "name": "tokenMinterPropertyNames",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "auctionEndTime",
          "type": "uint32"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "auctionEndTime",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "safeMintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "auctionEndTime",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"auctionEndTime\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"auctionEndTime\",\"type\":\"uint32\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"tokenMinterPropertyNames\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"auctionEndTime\",\"type\":\"uint32\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"auctionEndTime\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"auctionEndTime\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"isMinter(address)\":{\"details\":\"Checks if minter isWhitelisted()\"},\"isWhitelisted(address)\":{\"details\":\"Checks Registry contract for whitelisted status\",\"params\":{\"target\":\"The address to check\"}},\"mint(address,string,bytes32,uint32,uint32,uint32)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\"},\"return\":\"tokenId\"},\"mintWithTokenURI(address,string,bytes32,uint32,uint32,uint32,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause actions on this contract\"},\"safeMint(address,string,bytes32,uint32,uint32,uint32)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\"},\"return\":\"tokenId\"},\"safeMint(address,string,bytes32,uint32,uint32,uint32,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\",\"to\":\"The address that will receive the minted token.\"},\"return\":\"tokenId\"},\"safeMintWithTokenURI(address,string,bytes32,uint32,uint32,uint32,string)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots on      We're not grabbing this from the Registry in case the user has private\"},\"tokenMinterPropertyNames(address,string)\":{\"details\":\"Look up all Property Names a Minter has tokenized on a content ID\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls.\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause the smart contract.\"},\"updateRegistryAddress(address)\":{\"details\":\"Update address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}}}},\"userdoc\":{\"methods\":{\"burn(uint256)\":{\"notice\":\"Customized for Microsponsors\"},\"mintWithTokenURI(address,string,bytes32,uint32,uint32,uint32,string)\":{\"notice\":\"Customized for Microsponsors from: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol\"},\"safeMintWithTokenURI(address,string,bytes32,uint32,uint32,uint32,string)\":{\"notice\":\"Customized for Microsponsors from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol\"},\"unpause()\":{\"notice\":\"This is public rather than external so it can be called by  derived contracts.\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0x53fc38daae635b439ffec93a55a576797bcfb5e9e63f7da0902eb028a04663bb\",\"urls\":[\"bzz-raw://10ee4d07283ee4bb84096594105cde0881bb29cb22143835de4f183b0e86fb92\",\"dweb:/ipfs/QmeqzQuGEYPTtHCJKvimDkGk6EamX4ThpwDCvUL9Ann4jh\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0x3a7de85066f743d397f8b6f5a9a07ada0b0b60ac3b62441be14112a2c6b94306\",\"urls\":[\"bzz-raw://f4917a4e90595f44ce1e86179981e2532630452a9c4973ac06dfa154cd7966e6\",\"dweb:/ipfs/QmaFEK1GEV6hQN3WjDULRsDXQwJvDterEMJA6u5bjVHdhC\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637b1039991161011a578063b88d4fde116100ad578063da642eec1161007c578063da642eec146105fc578063e5c249241461062c578063e985e9c514610660578063f2fde38b14610690578063f3045080146106ac576101fb565b8063b88d4fde14610564578063c57a882514610580578063c87b56dd1461059c578063d8bf2c78146105cc576101fb565b806395d89b41116100e957806395d89b41146104ca578063a22cb465146104e8578063a4ede12814610504578063aa271e1a14610534576101fb565b80637b103999146104545780638456cb59146104725780638462151c1461047c5780638da5cb5b146104ac576101fb565b806342842e0e116101925780636352211e116101615780636352211e1461039457806370a08231146103c4578063769a9433146103f45780637affcb9a14610424576101fb565b806342842e0e1461030e57806342966c681461032a5780634569fd9f146103465780635c975abb14610376576101fb565b806318160ddd116101ce57806318160ddd1461029a57806323b872dd146102b85780633af32abf146102d45780633f4ba83a14610304576101fb565b806301ffc9a71461020057806306fdde0314610230578063081812fc1461024e578063095ea7b31461027e575b600080fd5b61021a60048036036102159190810190613d0b565b6106dc565b6040516102279190614a9d565b60405180910390f35b610238610743565b6040516102459190614ad3565b60405180910390f35b61026860048036036102639190810190613d5d565b6107e5565b6040516102759190614976565b60405180910390f35b61029860048036036102939190810190613ca6565b61086a565b005b6102a2610a8e565b6040516102af9190614df5565b60405180910390f35b6102d260048036036102cd919081019061390b565b610a9f565b005b6102ee60048036036102e991908101906138a6565b610ba9565b6040516102fb9190614a9d565b60405180910390f35b61030c610c5d565b005b6103286004803603610323919081019061390b565b610d2a565b005b610344600480360361033f9190810190613d5d565b610d4a565b005b610360600480360361035b9190810190613b0a565b610dc0565b60405161036d9190614df5565b60405180910390f35b61037e610ea0565b60405161038b9190614a9d565b60405180910390f35b6103ae60048036036103a99190810190613d5d565b610eb3565b6040516103bb9190614976565b60405180910390f35b6103de60048036036103d991908101906138a6565b610f65565b6040516103eb9190614df5565b60405180910390f35b61040e60048036036104099190810190613a69565b611024565b60405161041b9190614df5565b60405180910390f35b61043e60048036036104399190810190613a11565b611102565b60405161044b9190614a37565b60405180910390f35b61045c61124e565b6040516104699190614ab8565b60405180910390f35b61047a611274565b005b610496600480360361049191908101906138a6565b611342565b6040516104a39190614a7b565b60405180910390f35b6104b461148a565b6040516104c19190614976565b60405180910390f35b6104d26114b0565b6040516104df9190614ad3565b60405180910390f35b61050260048036036104fd91908101906139d5565b611552565b005b61051e600480360361051991908101906138a6565b61173c565b60405161052b9190614a59565b60405180910390f35b61054e600480360361054991908101906138a6565b611904565b60405161055b9190614a9d565b60405180910390f35b61057e6004803603610579919081019061395a565b611916565b005b61059a600480360361059591908101906138a6565b611a22565b005b6105b660048036036105b19190810190613d5d565b611afd565b6040516105c39190614ad3565b60405180910390f35b6105e660048036036105e19190810190613a69565b611bfa565b6040516105f39190614df5565b60405180910390f35b61061660048036036106119190810190613bd8565b611cd8565b6040516106239190614df5565b60405180910390f35b61064660048036036106419190810190613d5d565b611dc1565b6040516106579594939291906149dd565b60405180910390f35b61067a600480360361067591908101906138cf565b611f73565b6040516106879190614a9d565b60405180910390f35b6106aa60048036036106a591908101906138a6565b612007565b005b6106c660048036036106c19190810190613bd8565b612117565b6040516106d39190614df5565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600d8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107db5780601f106107b0576101008083540402835291602001916107db565b820191906000526020600020905b8154815290600101906020018083116107be57829003601f168201915b5050505050905090565b60006107f082612200565b61082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690614cb5565b60405180910390fd5b600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61087a610875612272565b610ba9565b6108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090614dd5565b60405180910390fd5b600c60009054906101000a900460ff16156108d357600080fd5b60006108de82610eb3565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561094f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094690614cf5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661096e612272565b73ffffffffffffffffffffffffffffffffffffffff16148061099d575061099c81610997612272565b611f73565b5b6109dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d390614c55565b60405180910390fd5b82600a600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610a9a600361227a565b905090565b600c60009054906101000a900460ff1615610ab957600080fd5b610aca610ac4612272565b82612288565b610b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0090614d15565b60405180910390fd5b610b1283610ba9565b610b51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4890614bb5565b60405180910390fd5b610b5a82610ba9565b610b99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9090614bb5565b60405180910390fd5b610ba4838383612366565b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633af32abf836040518263ffffffff1660e01b8152600401610c069190614976565b60206040518083038186803b158015610c1e57600080fd5b505afa158015610c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c569190810190613ce2565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c9e612272565b73ffffffffffffffffffffffffffffffffffffffff1614610cf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ceb90614d75565b60405180910390fd5b600c60009054906101000a900460ff16610d0d57600080fd5b6000600c60006101000a81548160ff021916908315150217905550565b610d4583838360405180602001604052806000815250611916565b505050565b600c60009054906101000a900460ff1615610d6457600080fd5b610d75610d6f612272565b82612288565b610db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dab90614d95565b60405180910390fd5b610dbd81612595565b50565b6000610dd2610dcd612272565b611904565b610e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0890614b15565b60405180910390fd5b600c60009054906101000a900460ff1615610e2b57600080fd5b610e368786866125aa565b610e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6c90614bf5565b60405180910390fd5b6000610e8189846126ef565b9050610e91818989898989612753565b80915050979650505050505050565b600c60009054906101000a900460ff1681565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5390614c95565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcd90614c35565b60405180910390fd5b61101d600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061227a565b9050919050565b6000611036611031612272565b611904565b611075576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106c90614b15565b60405180910390fd5b600c60009054906101000a900460ff161561108f57600080fd5b61109a8685856125aa565b6110d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d090614bf5565b60405180910390fd5b60006110e488612a62565b90506110f4818888888888612753565b809150509695505050505050565b606080600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208484604051611154929190614946565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156111ba5783829060005260206000200160405180602001604052908160008201548152505081526020019060010190611182565b505050509050606081516040519080825280602002602001820160405280156111f25781602001602082028038833980820191505090505b50905060008090505b82518110156112415782818151811061121057fe5b60200260200101516000015182828151811061122857fe5b60200260200101818152505080806001019150506111fb565b5080925050509392505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112b5612272565b73ffffffffffffffffffffffffffffffffffffffff161461130b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130290614d75565b60405180910390fd5b600c60009054906101000a900460ff161561132557600080fd5b6001600c60006101000a81548160ff021916908315150217905550565b6060600061134f83610f65565b9050600081141561139357600060405190808252806020026020018201604052801561138a5781602001602082028038833980820191505090505b50915050611485565b6060816040519080825280602002602001820160405280156113c45781602001602082028038833980820191505090505b50905060006113d1610a8e565b905060008090506000600190505b82811161147c578673ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561146f578084838151811061145a57fe5b60200260200101818152505081806001019250505b80806001019150506113df565b83955050505050505b919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600e8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115485780601f1061151d57610100808354040283529160200191611548565b820191906000526020600020905b81548152906001019060200180831161152b57829003601f168201915b5050505050905090565b61156261155d612272565b610ba9565b6115a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159890614dd5565b60405180910390fd5b600c60009054906101000a900460ff16156115bb57600080fd5b6115c3612272565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611631576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162890614b75565b60405180910390fd5b80600b600061163e612272565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166116eb612272565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516117309190614a9d565b60405180910390a35050565b606080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561186e57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118565780601f1061182b57610100808354040283529160200191611856565b820191906000526020600020905b81548152906001019060200180831161183957829003601f168201915b5050505050815250508152602001906001019061179e565b505050509050606081516040519080825280602002602001820160405280156118ab57816020015b60608152602001906001900390816118965790505b50905060008090505b82518110156118f9578281815181106118c957fe5b6020026020010151600001518282815181106118e157fe5b602002602001018190525080806001019150506118b4565b508092505050919050565b600061190f82610ba9565b9050919050565b600c60009054906101000a900460ff161561193057600080fd5b61193984610ba9565b611978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196f90614bb5565b60405180910390fd5b61198183610ba9565b6119c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b790614bb5565b60405180910390fd5b6119d16119cb612272565b83612288565b611a10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0790614d15565b60405180910390fd5b611a1c84848484612be9565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a63612272565b73ffffffffffffffffffffffffffffffffffffffff1614611ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab090614d75565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060611b0882612200565b611b47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3e90614db5565b60405180910390fd5b600960008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611bee5780601f10611bc357610100808354040283529160200191611bee565b820191906000526020600020905b815481529060010190602001808311611bd157829003601f168201915b50505050509050919050565b6000611c0c611c07612272565b611904565b611c4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4290614b15565b60405180910390fd5b600c60009054906101000a900460ff1615611c6557600080fd5b611c708685856125aa565b611caf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ca690614bf5565b60405180910390fd5b6000611cba88612c45565b9050611cca818888888888612753565b809150509695505050505050565b6000611cea611ce5612272565b611904565b611d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2090614b15565b60405180910390fd5b600c60009054906101000a900460ff1615611d4357600080fd5b611d4e8786866125aa565b611d8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8490614bf5565b60405180910390fd5b6000611d9889612c45565b9050611da8818989898989612753565b611db28184612c6c565b80915050979650505050505050565b600060606000806000611dd386612200565b611e12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0990614bd5565b60405180910390fd5b6006600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660008881526020019081526020016000206001016006600089815260200190815260200160002060020154600660008a815260200190815260200160002060030160009054906101000a900463ffffffff16600660008b815260200190815260200160002060030160049054906101000a900463ffffffff16838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f595780601f10611f2e57610100808354040283529160200191611f59565b820191906000526020600020905b815481529060010190602001808311611f3c57829003601f168201915b505050505093509450945094509450945091939590929450565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612048612272565b73ffffffffffffffffffffffffffffffffffffffff161461209e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161209590614d75565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146121145780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000612129612124612272565b611904565b612168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215f90614b15565b60405180910390fd5b600c60009054906101000a900460ff161561218257600080fd5b61218d8786866125aa565b6121cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c390614bf5565b60405180910390fd5b60006121d789612a62565b90506121e7818989898989612753565b6121f18184612c6c565b80915050979650505050505050565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b600081600001549050919050565b600061229382612200565b6122d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122c990614b95565b60405180910390fd5b60006122dd83610eb3565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061234c57508373ffffffffffffffffffffffffffffffffffffffff16612334846107e5565b73ffffffffffffffffffffffffffffffffffffffff16145b8061235d575061235c8185611f73565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661238682610eb3565b73ffffffffffffffffffffffffffffffffffffffff16146123dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123d390614cd5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561244c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161244390614b55565b60405180910390fd5b61245581612ce0565b61249c600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612d9e565b6124e3600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612dc1565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6125a76125a182610eb3565b82612dd7565b50565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166347ba747a856040518263ffffffff1660e01b81526004016126079190614ad3565b60206040518083038186803b15801561261f57600080fd5b505afa158015612633573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126579190810190613ce2565b612696576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161268d90614c15565b60405180910390fd5b8263ffffffff168263ffffffff16116126e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126db90614b35565b60405180910390fd5b600190509392505050565b6000806126fb84612a62565b905061270a6000858386613039565b612749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161274090614af5565b60405180910390fd5b8091505092915050565b61275c86612200565b61279b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161279290614d55565b60405180910390fd5b6127a361353e565b6040518060c001604052806127b6612272565b73ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018563ffffffff1681526020018463ffffffff1681526020018363ffffffff168152509050806006600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061287892919061359f565b506040820151816002015560608201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555060808201518160030160046101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160030160086101000a81548163ffffffff021916908363ffffffff16021790555090505061290486613157565b6129a55760086000612914612272565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180602001604052808881525090806001815401808255809150509060018203906000526020600020016000909192909190915060008201518160000190805190602001906129a092919061359f565b505050505b6129af86866132e7565b612a5957600760006129bf612272565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002086604051612a07919061495f565b9081526020016040518091039020604051806020016040528087815250908060018154018082558091505090600182039060005260206000200160009091929091909150600082015181600001555050505b50505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aca90614c75565b60405180910390fd5b612add6003612dc1565b6000612ae9600361227a565b9050826004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612b84600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612dc1565b808373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480915050919050565b612bf4848484612366565b612c0084848484613039565b612c3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c3690614af5565b60405180910390fd5b50505050565b600080612c6183604051806020016040528060008152506126ef565b905080915050919050565b612c7582612200565b612cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cab90614d55565b60405180910390fd5b80600960008481526020019081526020016000209080519060200190612cdb92919061361f565b505050565b600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612d9b576000600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612db6600182600001546133f590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b8173ffffffffffffffffffffffffffffffffffffffff16612df782610eb3565b73ffffffffffffffffffffffffffffffffffffffff1614612e4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e4490614d35565b60405180910390fd5b612e5681612ce0565b612e9d600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612d9e565b60006004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006009600083815260200190815260200160002080546001816001161561010002031660029004905014612f3f57600960008281526020019081526020016000206000612f3e919061369f565b5b60066000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000612f8a919061369f565b60028201600090556003820160006101000a81549063ffffffff02191690556003820160046101000a81549063ffffffff02191690556003820160086101000a81549063ffffffff0219169055505080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600061305a8473ffffffffffffffffffffffffffffffffffffffff1661343f565b613067576001905061314f565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a0261308d612272565b8887876040518563ffffffff1660e01b81526004016130af9493929190614991565b602060405180830381600087803b1580156130c957600080fd5b505af11580156130dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506131019190810190613d34565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60006060600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561328a57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156132725780601f1061324757610100808354040283529160200191613272565b820191906000526020600020905b81548152906001019060200180831161325557829003601f168201915b505050505081525050815260200190600101906131ba565b505050509050600080905060008090505b82518110156132dc576132c5858483815181106132b457fe5b60200260200101516000015161348a565b156132cf57600191505b808060010191505061329b565b508092505050919050565b60006060600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084604051613338919061495f565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561339e5783829060005260206000200160405180602001604052908160008201548152505081526020019060010190613366565b505050509050600080905060008090505b82518110156133e9578281815181106133c457fe5b6020026020010151600001518514156133dc57600191505b80806001019150506133af565b50809250505092915050565b600061343783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506134e3565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156134815750808214155b92505050919050565b60008160405160200161349d919061495f565b60405160208183030381529060405280519060200120836040516020016134c4919061495f565b6040516020818303038152906040528051906020012014905092915050565b600083831115829061352b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135229190614ad3565b60405180910390fd5b5060008385039050809150509392505050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008019168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106135e057805160ff191683800117855561360e565b8280016001018555821561360e579182015b8281111561360d5782518255916020019190600101906135f2565b5b50905061361b91906136e7565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061366057805160ff191683800117855561368e565b8280016001018555821561368e579182015b8281111561368d578251825591602001919060010190613672565b5b50905061369b91906136e7565b5090565b50805460018160011615610100020316600290046000825580601f106136c557506136e4565b601f0160209004906000526020600020908101906136e391906136e7565b5b50565b61370991905b808211156137055760008160009055506001016136ed565b5090565b90565b60008135905061371b816150a4565b92915050565b600081359050613730816150bb565b92915050565b600081519050613745816150bb565b92915050565b60008135905061375a816150d2565b92915050565b60008135905061376f816150e9565b92915050565b600081519050613784816150e9565b92915050565b600082601f83011261379b57600080fd5b81356137ae6137a982614e3d565b614e10565b915080825260208301602083018583830111156137ca57600080fd5b6137d5838284615051565b50505092915050565b60008083601f8401126137f057600080fd5b8235905067ffffffffffffffff81111561380957600080fd5b60208301915083600182028301111561382157600080fd5b9250929050565b600082601f83011261383957600080fd5b813561384c61384782614e69565b614e10565b9150808252602083016020830185838301111561386857600080fd5b613873838284615051565b50505092915050565b60008135905061388b81615100565b92915050565b6000813590506138a081615117565b92915050565b6000602082840312156138b857600080fd5b60006138c68482850161370c565b91505092915050565b600080604083850312156138e257600080fd5b60006138f08582860161370c565b92505060206139018582860161370c565b9150509250929050565b60008060006060848603121561392057600080fd5b600061392e8682870161370c565b935050602061393f8682870161370c565b92505060406139508682870161387c565b9150509250925092565b6000806000806080858703121561397057600080fd5b600061397e8782880161370c565b945050602061398f8782880161370c565b93505060406139a08782880161387c565b925050606085013567ffffffffffffffff8111156139bd57600080fd5b6139c98782880161378a565b91505092959194509250565b600080604083850312156139e857600080fd5b60006139f68582860161370c565b9250506020613a0785828601613721565b9150509250929050565b600080600060408486031215613a2657600080fd5b6000613a348682870161370c565b935050602084013567ffffffffffffffff811115613a5157600080fd5b613a5d868287016137de565b92509250509250925092565b60008060008060008060c08789031215613a8257600080fd5b6000613a9089828a0161370c565b965050602087013567ffffffffffffffff811115613aad57600080fd5b613ab989828a01613828565b9550506040613aca89828a0161374b565b9450506060613adb89828a01613891565b9350506080613aec89828a01613891565b92505060a0613afd89828a01613891565b9150509295509295509295565b600080600080600080600060e0888a031215613b2557600080fd5b6000613b338a828b0161370c565b975050602088013567ffffffffffffffff811115613b5057600080fd5b613b5c8a828b01613828565b9650506040613b6d8a828b0161374b565b9550506060613b7e8a828b01613891565b9450506080613b8f8a828b01613891565b93505060a0613ba08a828b01613891565b92505060c088013567ffffffffffffffff811115613bbd57600080fd5b613bc98a828b0161378a565b91505092959891949750929550565b600080600080600080600060e0888a031215613bf357600080fd5b6000613c018a828b0161370c565b975050602088013567ffffffffffffffff811115613c1e57600080fd5b613c2a8a828b01613828565b9650506040613c3b8a828b0161374b565b9550506060613c4c8a828b01613891565b9450506080613c5d8a828b01613891565b93505060a0613c6e8a828b01613891565b92505060c088013567ffffffffffffffff811115613c8b57600080fd5b613c978a828b01613828565b91505092959891949750929550565b60008060408385031215613cb957600080fd5b6000613cc78582860161370c565b9250506020613cd88582860161387c565b9150509250929050565b600060208284031215613cf457600080fd5b6000613d0284828501613736565b91505092915050565b600060208284031215613d1d57600080fd5b6000613d2b84828501613760565b91505092915050565b600060208284031215613d4657600080fd5b6000613d5484828501613775565b91505092915050565b600060208284031215613d6f57600080fd5b6000613d7d8482850161387c565b91505092915050565b6000613d928383613f19565b60208301905092915050565b6000613daa838361400e565b905092915050565b6000613dbe8383614919565b60208301905092915050565b613dd381614f9f565b82525050565b6000613de482614ec5565b613dee8185614f2e565b9350613df983614e95565b8060005b83811015613e2a578151613e118882613d86565b9750613e1c83614f07565b925050600181019050613dfd565b5085935050505092915050565b6000613e4282614ed0565b613e4c8185614f3f565b935083602082028501613e5e85614ea5565b8060005b85811015613e9a5784840389528151613e7b8582613d9e565b9450613e8683614f14565b925060208a01995050600181019050613e62565b50829750879550505050505092915050565b6000613eb782614edb565b613ec18185614f50565b9350613ecc83614eb5565b8060005b83811015613efd578151613ee48882613db2565b9750613eef83614f21565b925050600181019050613ed0565b5085935050505092915050565b613f1381614fb1565b82525050565b613f2281614fbd565b82525050565b613f3181614fbd565b82525050565b6000613f4282614ee6565b613f4c8185614f61565b9350613f5c818560208601615060565b613f6581615093565b840191505092915050565b613f798161502d565b82525050565b6000613f8b8385614f94565b9350613f98838584615051565b82840190509392505050565b6000613faf82614efc565b613fb98185614f83565b9350613fc9818560208601615060565b613fd281615093565b840191505092915050565b6000613fe882614efc565b613ff28185614f94565b9350614002818560208601615060565b80840191505092915050565b600061401982614ef1565b6140238185614f72565b9350614033818560208601615060565b61403c81615093565b840191505092915050565b6000614054603283614f83565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006140ba603583614f83565b91507f4552433732313a2063616c6c6572206973206e6f742077686974656c6973746560008301527f6420666f7220746865204d696e74657220726f6c6500000000000000000000006020830152604082019050919050565b6000614120602a83614f83565b91507f4552433732313a2073746172742074696d65206d757374206265206265666f7260008301527f6520656e642074696d65000000000000000000000000000000000000000000006020830152604082019050919050565b6000614186602483614f83565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006141ec601983614f83565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b600061422c602c83614f83565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000614292603483614f83565b91507f4552433732313a207472616e73666572207265737472696374656420746f207760008301527f686974656c6973746564206164647265737365730000000000000000000000006020830152604082019050919050565b60006142f8603083614f83565b91507f4552433732313a2054696d6520736c6f7420717565727920666f72206e6f6e6560008301527f78697374656e7420746f6b656e206964000000000000000000000000000000006020830152604082019050919050565b600061435e601983614f83565b91507f4552433732313a20696e76616c69642074696d6520736c6f74000000000000006000830152602082019050919050565b600061439e602e83614f83565b91507f4552433732313a20636f6e74656e74206964206973206e6f742072656769737460008301527f6572656420746f2063616c6c65720000000000000000000000000000000000006020830152604082019050919050565b6000614404602a83614f83565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b600061446a603e83614f83565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008301527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006020830152604082019050919050565b60006144d0602083614f83565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000614510602f83614f83565b91507f4552433732313a20746f6b656e206f776e657220717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000614576602c83614f83565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006145dc602983614f83565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000614642601d83614f83565b91507f4552433732313a20617070726f76616c20697320726564756e64616e740000006000830152602082019050919050565b6000614682603183614f83565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b60006146e8602583614f83565b91507f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f60008301527f74206f776e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061474e602483614f83565b91507f4552433732313a2055524920736574206f66206e6f6e6578697374656e74207460008301527f6f6b656e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006147b4601b83614f83565b91507f4552433732313a2063616c6c6572206973206e6f74206f776e657200000000006000830152602082019050919050565b60006147f4602e83614f83565b91507f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008301527f72206e6f7220617070726f7665640000000000000000000000000000000000006020830152604082019050919050565b600061485a602783614f83565b91507f4552433732313a2055524920717565727920666f72206e6f6e6578697374656e60008301527f7420746f6b656e000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006148c0602183614f83565b91507f4552433732313a2063616c6c6572206973206e6f742077686974656c6973746560008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61492281615013565b82525050565b61493181615013565b82525050565b6149408161501d565b82525050565b6000614953828486613f7f565b91508190509392505050565b600061496b8284613fdd565b915081905092915050565b600060208201905061498b6000830184613dca565b92915050565b60006080820190506149a66000830187613dca565b6149b36020830186613dca565b6149c06040830185614928565b81810360608301526149d28184613f37565b905095945050505050565b600060a0820190506149f26000830188613dca565b8181036020830152614a048187613fa4565b9050614a136040830186613f28565b614a206060830185614937565b614a2d6080830184614937565b9695505050505050565b60006020820190508181036000830152614a518184613dd9565b905092915050565b60006020820190508181036000830152614a738184613e37565b905092915050565b60006020820190508181036000830152614a958184613eac565b905092915050565b6000602082019050614ab26000830184613f0a565b92915050565b6000602082019050614acd6000830184613f70565b92915050565b60006020820190508181036000830152614aed8184613fa4565b905092915050565b60006020820190508181036000830152614b0e81614047565b9050919050565b60006020820190508181036000830152614b2e816140ad565b9050919050565b60006020820190508181036000830152614b4e81614113565b9050919050565b60006020820190508181036000830152614b6e81614179565b9050919050565b60006020820190508181036000830152614b8e816141df565b9050919050565b60006020820190508181036000830152614bae8161421f565b9050919050565b60006020820190508181036000830152614bce81614285565b9050919050565b60006020820190508181036000830152614bee816142eb565b9050919050565b60006020820190508181036000830152614c0e81614351565b9050919050565b60006020820190508181036000830152614c2e81614391565b9050919050565b60006020820190508181036000830152614c4e816143f7565b9050919050565b60006020820190508181036000830152614c6e8161445d565b9050919050565b60006020820190508181036000830152614c8e816144c3565b9050919050565b60006020820190508181036000830152614cae81614503565b9050919050565b60006020820190508181036000830152614cce81614569565b9050919050565b60006020820190508181036000830152614cee816145cf565b9050919050565b60006020820190508181036000830152614d0e81614635565b9050919050565b60006020820190508181036000830152614d2e81614675565b9050919050565b60006020820190508181036000830152614d4e816146db565b9050919050565b60006020820190508181036000830152614d6e81614741565b9050919050565b60006020820190508181036000830152614d8e816147a7565b9050919050565b60006020820190508181036000830152614dae816147e7565b9050919050565b60006020820190508181036000830152614dce8161484d565b9050919050565b60006020820190508181036000830152614dee816148b3565b9050919050565b6000602082019050614e0a6000830184614928565b92915050565b6000604051905081810181811067ffffffffffffffff82111715614e3357600080fd5b8060405250919050565b600067ffffffffffffffff821115614e5457600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115614e8057600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614faa82614ff3565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60006150388261503f565b9050919050565b600061504a82614ff3565b9050919050565b82818337600083830152505050565b60005b8381101561507e578082015181840152602081019050615063565b8381111561508d576000848401525b50505050565b6000601f19601f8301169050919050565b6150ad81614f9f565b81146150b857600080fd5b50565b6150c481614fb1565b81146150cf57600080fd5b50565b6150db81614fbd565b81146150e657600080fd5b50565b6150f281614fc7565b81146150fd57600080fd5b50565b61510981615013565b811461511457600080fd5b50565b6151208161501d565b811461512b57600080fd5b5056fea365627a7a723158201dc711a4eb1267bfc88feadee0613831f2fd01b0948e02fdf23aa41ee65e0b3a6c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "285:1239:9:-;;;3315:5:3;3294:26;;;;;;;;;;;;;;;;;;;;801:336:9;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:336:9;;;;;;;;;;;;;;;;;;;;;;;;720:40:2;387:10;739:20;;720:18;;;:40;;:::i;:::-;4370::3;4242:10;4389:20;;4370:18;;;:40;;:::i;:::-;4463:12;:10;;;:12;;:::i;:::-;4455:5;;:20;;;;;;;;;;;;;;;;;;907:4:9;899:5;:12;;;;;;;;;;;;:::i;:::-;;931:6;921:7;:16;;;;;;;;;;;;:::i;:::-;;1025:49;735:10;1044:29;;1025:18;;;:49;;:::i;:::-;1085:44;1113:15;1085:27;;;;;:44;;:::i;:::-;801:336;;;285:1239;;1444:190:2;1534:10;1519:25;;:11;:25;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1623:4;1587:20;:33;1608:11;1587:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1444:190;:::o;4947:90:3:-;4992:7;5019:10;5012:17;;4947:90;:::o;5982:144::-;5589:5;;;;;;;;;;;5573:21;;:12;:10;;;:12;;:::i;:::-;:21;;;5552:95;;;;;;;;;;;;;;;;;;;;;;6108:10;6080:8;;:39;;;;;;;;;;;;;;;;;;5982:144;:::o;285:1239:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;840:1;829:9;825:17;819:24;863:18;855:6;852:30;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;1071:18;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1493:74;;1600:66;1596:1;1591:3;1587:11;1580:87;1695:2;1690:3;1686:12;1679:19;;1486:218;;;;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1866:74;;1973:66;1969:1;1964:3;1960:11;1953:87;2068:2;2063:3;2059:12;2052:19;;1859:218;;;;2085:407;;2276:2;2265:9;2261:18;2253:26;;2326:9;2320:4;2316:20;2312:1;2301:9;2297:17;2290:47;2351:131;2477:4;2351:131;;;2343:139;;2247:245;;;;2499:407;;2690:2;2679:9;2675:18;2667:26;;2740:9;2734:4;2730:20;2726:1;2715:9;2711:17;2704:47;2765:131;2891:4;2765:131;;;2757:139;;2661:245;;;;2913:256;;2975:2;2969:9;2959:19;;3013:4;3005:6;3001:17;3112:6;3100:10;3097:22;3076:18;3064:10;3061:34;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3153:10;3149:2;3142:22;2953:216;;;;;3176:322;;3320:18;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;3419:4;3415:9;3408:4;3400:6;3396:17;3392:33;3384:41;;3483:4;3477;3473:15;3465:23;;3243:255;;;;3506:163;;3621:6;3616:3;3609:19;3658:4;3653:3;3649:14;3634:29;;3602:67;;;;;3677:91;;3739:24;3757:5;3739:24;;;3728:35;;3722:46;;;;3775:121;;3848:42;3841:5;3837:54;3826:65;;3820:76;;;;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4066:1;4061:3;4057:11;4051:18;4047:1;4042:3;4038:11;4031:39;4012:2;4009:1;4005:10;4000:15;;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;285:1239:9;;;;;;;",
  "deployedSourceMap": "285:1239:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;285:1239:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1242:83:9;;;:::i;:::-;;;;;;;;;;;;;;;;22492:236:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;21657:550;;;;;;;;;;;;;;;;:::i;:::-;;18873:98;;;:::i;:::-;;;;;;;;;;;;;;;;24291:561;;;;;;;;;;;;;;;;:::i;:::-;;6294:120;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;33712:128;;;:::i;:::-;;25501:134;;;;;;;;;;;;;;;;:::i;:::-;;31638:230;;;;;;;;;;;;;;;;:::i;:::-;;9952:609;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3294:26;;;:::i;:::-;;;;;;;;;;;;;;;;19657:280;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;19180:258;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7351:568;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18334:406;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;925:32;;;:::i;:::-;;;;;;;;;;;;;;;;33454:80;;;:::i;:::-;;20340:867;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;856:20;;;:::i;:::-;;;;;;;;;;;;;;;;1434:87:9;;;:::i;:::-;;;;;;;;;;;;;;;;23021:309:3;;;;;;;;;;;;;;;;:::i;:::-;;17919:330;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6769:108;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;26357:594;;;;;;;;;;;;;;;;:::i;:::-;;5982:144;;;;;;;;;;;;;;;;:::i;:::-;;14396:231;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9150:576;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10991:661;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;17072:627;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;23669:185;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5671:167;;;;;;;;;;;;;;;;:::i;:::-;;8343:653;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;917:133:2;987:4;1010:20;:33;1031:11;1010:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1003:40;;917:133;;;:::o;1242:83:9:-;1281:13;1313:5;1306:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1242:83;:::o;22492:236:3:-;22551:7;22592:16;22600:7;22592;:16::i;:::-;22571:107;;;;;;;;;;;;;;;;;;;;;;22696:15;:24;22712:7;22696:24;;;;;;;;;;;;;;;;;;;;;22689:31;;22492:236;;;:::o;21657:550::-;6597:27;6611:12;:10;:12::i;:::-;6597:13;:27::i;:::-;6576:107;;;;;;;;;;;;;;;;;;;;;;33210:6;;;;;;;;;;;33209:7;33201:16;;;;;;21779:18;21800:16;21808:7;21800;:16::i;:::-;21779:37;;21854:10;21848:16;;:2;:16;;;;21827:92;;;;;;;;;;;;;;;;;;;;;;21967:10;21951:26;;:12;:10;:12::i;:::-;:26;;;:72;;;;21981:42;21998:10;22010:12;:10;:12::i;:::-;21981:16;:42::i;:::-;21951:72;21930:181;;;;;;;;;;;;;;;;;;;;;;22149:2;22122:15;:24;22138:7;22122:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;22191:7;22187:2;22166:33;;22175:10;22166:33;;;;;;;;;;;;33227:1;21657:550;;:::o;18873:98::-;18917:7;18944:19;:9;:17;:19::i;:::-;18937:26;;18873:98;:::o;24291:561::-;33210:6;;;;;;;;;;;33209:7;33201:16;;;;;;24429:41;24448:12;:10;:12::i;:::-;24462:7;24429:18;:41::i;:::-;24408:137;;;;;;;;;;;;;;;;;;;;;;24577:19;24591:4;24577:13;:19::i;:::-;24556:118;;;;;;;;;;;;;;;;;;;;;;24706:17;24720:2;24706:13;:17::i;:::-;24685:116;;;;;;;;;;;;;;;;;;;;;;24812:32;24826:4;24832:2;24836:7;24812:13;:32::i;:::-;24291:561;;;:::o;6294:120::-;6354:4;6377:8;;;;;;;;;;;:22;;;6400:6;6377:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6377:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6377:30:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6377:30:3;;;;;;;;;6370:37;;6294:120;;;:::o;33712:128::-;5589:5;;;;;;;;;;;5573:21;;:12;:10;:12::i;:::-;:21;;;5552:95;;;;;;;;;;;;;;;;;;;;;;33351:6;;;;;;;;;;;33343:15;;;;;;33828:5;33819:6;;:14;;;;;;;;;;;;;;;;;;33712:128::o;25501:134::-;25588:39;25605:4;25611:2;25615:7;25588:39;;;;;;;;;;;;:16;:39::i;:::-;25501:134;;;:::o;31638:230::-;33210:6;;;;;;;;;;;33209:7;33201:16;;;;;;31722:41;31741:12;:10;:12::i;:::-;31755:7;31722:18;:41::i;:::-;31701:134;;;;;;;;;;;;;;;;;;;;;;31846:14;31852:7;31846:5;:14::i;:::-;31638:230;:::o;9952:609::-;10240:7;7050:22;7059:12;:10;:12::i;:::-;7050:8;:22::i;:::-;7029:122;;;;;;;;;;;;;;;;;;;;;;33210:6;;;;;;;;;;;33209:7;33201:16;;;;;;10285:47;10302:9;10313;10324:7;10285:16;:47::i;:::-;10264:119;;;;;;;;;;;;;;;;;;;;;;10394:15;10412:19;10422:2;10426:4;10412:9;:19::i;:::-;10394:37;;10441:87;10459:7;10468:9;10479:12;10493:9;10504:7;10513:14;10441:17;:87::i;:::-;10546:7;10539:14;;;9952:609;;;;;;;;;:::o;3294:26::-;;;;;;;;;;;;;:::o;19657:280::-;19712:7;19732:18;19753:11;:20;19765:7;19753:20;;;;;;;;;;;;;;;;;;;;;19732:41;;19826:1;19804:24;;:10;:24;;;;19783:118;;;;;;;;;;;;;;;;;;;;;;19919:10;19912:17;;;19657:280;;;:::o;19180:258::-;19240:7;19303:1;19281:24;;:10;:24;;;;19260:113;;;;;;;;;;;;;;;;;;;;;;19391:39;:17;:29;19409:10;19391:29;;;;;;;;;;;;;;;:37;:39::i;:::-;19384:46;;19180:258;;;:::o;7351:568::-;7608:7;7050:22;7059:12;:10;:12::i;:::-;7050:8;:22::i;:::-;7029:122;;;;;;;;;;;;;;;;;;;;;;33210:6;;;;;;;;;;;33209:7;33201:16;;;;;;7653:47;7670:9;7681;7692:7;7653:16;:47::i;:::-;7632:119;;;;;;;;;;;;;;;;;;;;;;7762:15;7780:9;7786:2;7780:5;:9::i;:::-;7762:27;;7799:87;7817:7;7826:9;7837:12;7851:9;7862:7;7871:14;7799:17;:87::i;:::-;7904:7;7897:14;;;7351:568;;;;;;;;:::o;18334:406::-;18456:16;18485:29;18517:27;:35;18545:6;18517:35;;;;;;;;;;;;;;;18553:9;;18517:46;;;;;;;;;;;;;;;;;;;;;18485:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18573:18;18608:1;:8;18594:23;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18594:23:3;;;;18573:44;;18633:6;18642:1;18633:10;;18628:86;18649:1;:8;18645:1;:12;18628:86;;;18686:1;18688;18686:4;;;;;;;;;;;;;;:17;;;18678:1;18680;18678:4;;;;;;;;;;;;;:25;;;;;18659:3;;;;;;;18628:86;;;;18731:1;18724:8;;;;18334:406;;;;;:::o;925:32::-;;;;;;;;;;;;;:::o;33454:80::-;5589:5;;;;;;;;;;;5573:21;;:12;:10;:12::i;:::-;:21;;;5552:95;;;;;;;;;;;;;;;;;;;;;;33210:6;;;;;;;;;;;33209:7;33201:16;;;;;;33523:4;33514:6;;:13;;;;;;;;;;;;;;;;;;33454:80::o;20340:867::-;20405:16;20433:18;20454:21;20464:10;20454:9;:21::i;:::-;20433:42;;20504:1;20490:10;:15;20486:715;;;20579:1;20565:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20565:16:3;;;;20558:23;;;;;20486:715;20612:23;20652:10;20638:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20638:25:3;;;;20612:51;;20677:19;20699:13;:11;:13::i;:::-;20677:35;;20726:19;20748:1;20726:23;;20903:15;20948:1;20938:11;;20933:230;20962:11;20951:7;:22;20933:230;;21032:10;21008:34;;:11;:20;21020:7;21008:20;;;;;;;;;;;;;;;;;;;;;:34;;;21004:145;;;21088:7;21066:6;21073:11;21066:19;;;;;;;;;;;;;:29;;;;;21117:13;;;;;;;21004:145;20975:9;;;;;;;20933:230;;;21184:6;21177:13;;;;;;;20340:867;;;;:::o;856:20::-;;;;;;;;;;;;;:::o;1434:87:9:-;1475:13;1507:7;1500:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:87;:::o;23021:309:3:-;6597:27;6611:12;:10;:12::i;:::-;6597:13;:27::i;:::-;6576:107;;;;;;;;;;;;;;;;;;;;;;33210:6;;;;;;;;;;;33209:7;33201:16;;;;;;23165:12;:10;:12::i;:::-;23159:18;;:2;:18;;;;23151:56;;;;;;;;;;;;;;;;;;;;;;23257:8;23218:18;:32;23237:12;:10;:12::i;:::-;23218:32;;;;;;;;;;;;;;;:36;23251:2;23218:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;23309:2;23280:42;;23295:12;:10;:12::i;:::-;23280:42;;;23313:8;23280:42;;;;;;;;;;;;;;;23021:309;;:::o;17919:330::-;17989:15;18017:26;18046:24;:32;18071:6;18046:32;;;;;;;;;;;;;;;18017:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18088:17;18121:1;:8;18108:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18088:42;;18146:6;18155:1;18146:10;;18141:82;18162:1;:8;18158:1;:12;18141:82;;;18198:1;18200;18198:4;;;;;;;;;;;;;;:14;;;18191:1;18193;18191:4;;;;;;;;;;;;;:21;;;;18172:3;;;;;;;18141:82;;;;18240:1;18233:8;;;;17919:330;;;:::o;6769:108::-;6825:4;6848:22;6862:7;6848:13;:22::i;:::-;6841:29;;6769:108;;;:::o;26357:594::-;33210:6;;;;;;;;;;;33209:7;33201:16;;;;;;26518:19;26532:4;26518:13;:19::i;:::-;26497:118;;;;;;;;;;;;;;;;;;;;;;26647:17;26661:2;26647:13;:17::i;:::-;26626:116;;;;;;;;;;;;;;;;;;;;;;26774:41;26793:12;:10;:12::i;:::-;26807:7;26774:18;:41::i;:::-;26753:137;;;;;;;;;;;;;;;;;;;;;;26901:42;26919:4;26925:2;26929:7;26938:4;26901:17;:42::i;:::-;26357:594;;;;:::o;5982:144::-;5589:5;;;;;;;;;;;5573:21;;:12;:10;:12::i;:::-;:21;;;5552:95;;;;;;;;;;;;;;;;;;;;;;6108:10;6080:8;;:39;;;;;;;;;;;;;;;;;;5982:144;:::o;14396:231::-;14454:13;14501:16;14509:7;14501;:16::i;:::-;14480:102;;;;;;;;;;;;;;;;;;;;;;14600:10;:19;14611:7;14600:19;;;;;;;;;;;14593:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14396:231;;;:::o;9150:576::-;9411:7;7050:22;7059:12;:10;:12::i;:::-;7050:8;:22::i;:::-;7029:122;;;;;;;;;;;;;;;;;;;;;;33210:6;;;;;;;;;;;33209:7;33201:16;;;;;;9456:47;9473:9;9484;9495:7;9456:16;:47::i;:::-;9435:119;;;;;;;;;;;;;;;;;;;;;;9565:15;9583:13;9593:2;9583:9;:13::i;:::-;9565:31;;9606:87;9624:7;9633:9;9644:12;9658:9;9669:7;9678:14;9606:17;:87::i;:::-;9711:7;9704:14;;;9150:576;;;;;;;;:::o;10991:661::-;11296:7;7050:22;7059:12;:10;:12::i;:::-;7050:8;:22::i;:::-;7029:122;;;;;;;;;;;;;;;;;;;;;;33210:6;;;;;;;;;;;33209:7;33201:16;;;;;;11341:47;11358:9;11369;11380:7;11341:16;:47::i;:::-;11320:119;;;;;;;;;;;;;;;;;;;;;;11450:15;11468:13;11478:2;11468:9;:13::i;:::-;11450:31;;11491:87;11509:7;11518:9;11529:12;11543:9;11554:7;11563:14;11491:17;:87::i;:::-;11588:31;11601:7;11610:8;11588:12;:31::i;:::-;11637:7;11630:14;;;10991:661;;;;;;;;;:::o;17072:627::-;17148:14;17176:23;17213:20;17247:16;17277:14;17330:16;17338:7;17330;:16::i;:::-;17309:111;;;;;;;;;;;;;;;;;;;;;;17452:16;:25;17469:7;17452:25;;;;;;;;;;;:32;;;;;;;;;;;;17498:16;:25;17515:7;17498:25;;;;;;;;;;;:35;;17547:16;:25;17564:7;17547:25;;;;;;;;;;;:38;;;17599:16;:25;17616:7;17599:25;;;;;;;;;;;:35;;;;;;;;;;;;17648:16;:25;17665:7;17648:25;;;;;;;;;;;:33;;;;;;;;;;;;17431:260;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17072:627;;;;;;;:::o;23669:185::-;23778:4;23806:18;:30;23825:10;23806:30;;;;;;;;;;;;;;;:40;23837:8;23806:40;;;;;;;;;;;;;;;;;;;;;;;;;23799:47;;23669:185;;;;:::o;5671:167::-;5589:5;;;;;;;;;;;5573:21;;:12;:10;:12::i;:::-;:21;;;5552:95;;;;;;;;;;;;;;;;;;;;;;5787:1;5767:22;;:8;:22;;;5763:69;;5813:8;5805:5;;:16;;;;;;;;;;;;;;;;;;5763:69;5671:167;:::o;8343:653::-;8644:7;7050:22;7059:12;:10;:12::i;:::-;7050:8;:22::i;:::-;7029:122;;;;;;;;;;;;;;;;;;;;;;33210:6;;;;;;;;;;;33209:7;33201:16;;;;;;8689:47;8706:9;8717;8728:7;8689:16;:47::i;:::-;8668:119;;;;;;;;;;;;;;;;;;;;;;8798:15;8816:9;8822:2;8816:5;:9::i;:::-;8798:27;;8835:87;8853:7;8862:9;8873:12;8887:9;8898:7;8907:14;8835:17;:87::i;:::-;8932:31;8945:7;8954:8;8932:12;:31::i;:::-;8981:7;8974:14;;;8343:653;;;;;;;;;:::o;28166:165::-;28223:4;28240:18;28261:11;:20;28273:7;28261:20;;;;;;;;;;;;;;;;;;;;;28240:41;;28321:1;28299:24;;:10;:24;;;;28292:31;;;28166:165;;;:::o;4947:90::-;4992:7;5019:10;5012:17;;4947:90;:::o;1061:112:1:-;1126:7;1152;:14;;;1145:21;;1061:112;;;:::o;28692:411:3:-;28801:4;28843:16;28851:7;28843;:16::i;:::-;28822:107;;;;;;;;;;;;;;;;;;;;;;28940:18;28961:16;28969:7;28961;:16::i;:::-;28940:37;;29008:10;28997:21;;:7;:21;;;:56;;;;29046:7;29022:31;;:20;29034:7;29022:11;:20::i;:::-;:31;;;28997:56;:97;;;;29057:37;29074:10;29086:7;29057:16;:37::i;:::-;28997:97;28989:106;;;28692:411;;;;:::o;29480:518::-;29607:4;29587:24;;:16;29595:7;29587;:16::i;:::-;:24;;;29566:112;;;;;;;;;;;;;;;;;;;;;;29724:1;29710:16;;:2;:16;;;;29689:99;;;;;;;;;;;;;;;;;;;;;;29799:23;29814:7;29799:14;:23::i;:::-;29833:35;:17;:23;29851:4;29833:23;;;;;;;;;;;;;;;:33;:35::i;:::-;29878:33;:17;:21;29896:2;29878:21;;;;;;;;;;;;;;;:31;:33::i;:::-;29945:2;29922:11;:20;29934:7;29922:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;29982:7;29978:2;29963:27;;29972:4;29963:27;;;;;;;;;;;;29480:518;;;:::o;32920:92::-;32972:32;32978:16;32986:7;32978;:16::i;:::-;32996:7;32972:5;:32::i;:::-;32920:92;:::o;14685:446::-;14823:4;14861:8;;;;;;;;;;;:38;;;14900:9;14861:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14861:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14861:49:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14861:49:3;;;;;;;;;14840:142;;;;;;;;;;;;;;;;;;;;;;15024:9;15014:19;;:7;:19;;;14993:108;;;;;;;;;;;;;;;;;;;;;;15119:4;15112:11;;14685:446;;;;;:::o;12845:309::-;12913:7;12933:15;12951:9;12957:2;12951:5;:9::i;:::-;12933:27;;12992:53;13023:1;13027:2;13031:7;13040:4;12992:22;:53::i;:::-;12971:150;;;;;;;;;;;;;;;;;;;;;;13139:7;13132:14;;;12845:309;;;;:::o;16022:1043::-;16265:16;16273:7;16265;:16::i;:::-;16244:99;;;;;;;;;;;;;;;;;;;;;;16354:25;;:::i;:::-;16382:286;;;;;;;;16421:12;:10;:12::i;:::-;16382:286;;;;;;16466:9;16382:286;;;;16512:12;16382:286;;;;16557:9;16382:286;;;;;;16597:7;16382:286;;;;;;16642:14;16382:286;;;;;16354:314;;16707:9;16679:16;:25;16696:7;16679:25;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16732;16759:9;16732:26;:37::i;:::-;16727:142;;16785:24;:38;16810:12;:10;:12::i;:::-;16785:38;;;;;;;;;;;;;;;16830:26;;;;;;;;16846:9;16830:26;;;16785:73;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16785:73:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;16727:142;16884:54;16914:9;16925:12;16884:29;:54::i;:::-;16879:179;;16954:27;:41;16982:12;:10;:12::i;:::-;16954:41;;;;;;;;;;;;;;;16996:9;16954:52;;;;;;;;;;;;;;;;;;;;17013:32;;;;;;;;17032:12;17013:32;;;16954:93;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16954::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16879:179;16022:1043;;;;;;;:::o;13340:366::-;13385:7;13427:1;13413:16;;:2;:16;;;;13405:61;;;;;;;;;;;;;;;;;;;;;;13477:21;:9;:19;:21::i;:::-;13508:15;13526:19;:9;:17;:19::i;:::-;13508:37;;13579:2;13556:11;:20;13568:7;13556:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13591:33;:17;:21;13609:2;13591:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13665:7;13661:2;13640:33;;13657:1;13640:33;;;;;;;;;;;;13691:7;13684:14;;;13340:366;;;:::o;27655:316::-;27776:32;27790:4;27796:2;27800:7;27776:13;:32::i;:::-;27840:47;27863:4;27869:2;27873:7;27882:4;27840:22;:47::i;:::-;27819:144;;;;;;;;;;;;;;;;;;;;;;27655:316;;;;:::o;12145:136::-;12194:7;12214:15;12232:17;12242:2;12232:17;;;;;;;;;;;;:9;:17::i;:::-;12214:35;;12266:7;12259:14;;;12145:136;;;:::o;13975:221::-;14074:16;14082:7;14074;:16::i;:::-;14053:99;;;;;;;;;;;;;;;;;;;;;;14185:3;14163:10;:19;14174:7;14163:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;13975:221;;:::o;31105:173::-;31205:1;31169:38;;:15;:24;31185:7;31169:24;;;;;;;;;;;;;;;;;;;;;:38;;;31165:106;;31258:1;31223:15;:24;31239:7;31223:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;31165:106;31105:173;:::o;1274:108:1:-;1354:21;1373:1;1354:7;:14;;;:18;;:21;;;;:::i;:::-;1337:7;:14;;:38;;;;1274:108;:::o;1179:89::-;1260:1;1242:7;:14;;;:19;;;;;;;;;;;1179:89;:::o;32142:597:3:-;32255:10;32235:30;;:16;32243:7;32235;:16::i;:::-;:30;;;32214:114;;;;;;;;;;;;;;;;;;;;;;32339:23;32354:7;32339:14;:23::i;:::-;32373:41;:17;:29;32391:10;32373:29;;;;;;;;;;;;;;;:39;:41::i;:::-;32455:1;32424:11;:20;32436:7;32424:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;32546:1;32515:10;:19;32526:7;32515:19;;;;;;;;;;;32509:33;;;;;;;;;;;;;;;;:38;32505:95;;32570:10;:19;32581:7;32570:19;;;;;;;;;;;;32563:26;;;;:::i;:::-;32505:95;32649:16;:25;32666:7;32649:25;;;;;;;;;;;;32642:32;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32723:7;32719:1;32690:41;;32699:10;32690:41;;;;;;;;;;;;32142:597;;:::o;30586:357::-;30714:4;30740:15;:2;:13;;;:15::i;:::-;30735:58;;30778:4;30771:11;;;;30735:58;30803:13;30835:2;30819:36;;;30856:12;:10;:12::i;:::-;30870:4;30876:7;30885:4;30819:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30819:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30819:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;30819:71:3;;;;;;;;;30803:87;;1179:10;30918:16;;30908:26;;;:6;:26;;;;30900:35;;;30586:357;;;;;;;:::o;15138:413::-;15237:4;15254:26;15283:24;:36;15308:10;15283:36;;;;;;;;;;;;;;;15254:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15329:15;15347:5;15329:23;;15367:6;15376:1;15367:10;;15362:155;15383:1;:8;15379:1;:12;15362:155;;;15416:39;15429:9;15440:1;15442;15440:4;;;;;;;;;;;;;;:14;;;15416:12;:39::i;:::-;15412:95;;;15488:4;15475:17;;15412:95;15393:3;;;;;;;15362:155;;;;15534:10;15527:17;;;;15138:413;;;:::o;15558:457::-;15690:4;15707:29;15739:27;:39;15767:10;15739:39;;;;;;;;;;;;;;;15779:9;15739:50;;;;;;;;;;;;;;;;;;;;15707:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15799:15;15817:5;15799:23;;15837:6;15846:1;15837:10;;15832:149;15853:1;:8;15849:1;:12;15832:149;;;15902:1;15904;15902:4;;;;;;;;;;;;;;:17;;;15886:12;:33;15882:89;;;15952:4;15939:17;;15882:89;15863:3;;;;;;;15832:149;;;;15998:10;15991:17;;;;15558:457;;;;:::o;1276:134:11:-;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1353:50;;1276:134;;;;:::o;559:797:0:-;619:4;1064:16;1090:19;1112:66;1090:88;;;;1279:7;1267:20;1255:32;;1318:3;1306:15;;:8;:15;;:42;;;;;1337:11;1325:8;:23;;1306:42;1298:51;;;;559:797;;;:::o;33874:230:3:-;33999:4;34091:1;34073:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;34073:21:3;;;34063:32;;;;;;34055:1;34037:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;34037:21:3;;;34027:32;;;;;;:68;34019:78;;33874:230;;;;:::o;1846:187:11:-;1932:7;1964:1;1959;:6;;1967:12;1951:29;;;;;;;;;;;;;;;;;;;;;;;;;1990:9;2006:1;2002;:5;1990:17;;2025:1;2018:8;;;1846:187;;;;;:::o;285:1239:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:128;;354:6;348:13;339:22;;366:30;390:5;366:30;;;333:68;;;;;408:130;;488:6;475:20;466:29;;500:33;527:5;500:33;;;460:78;;;;;545:128;;624:6;611:20;602:29;;636:32;662:5;636:32;;;596:77;;;;;680:132;;763:6;757:13;748:22;;775:32;801:5;775:32;;;742:70;;;;;820:440;;921:3;914:4;906:6;902:17;898:27;888:2;;939:1;936;929:12;888:2;976:6;963:20;998:64;1013:48;1054:6;1013:48;;;998:64;;;989:73;;1082:6;1075:5;1068:21;1118:4;1110:6;1106:17;1151:4;1144:5;1140:16;1186:3;1177:6;1172:3;1168:16;1165:25;1162:2;;;1203:1;1200;1193:12;1162:2;1213:41;1247:6;1242:3;1237;1213:41;;;881:379;;;;;;;;1283:336;;;1398:3;1391:4;1383:6;1379:17;1375:27;1365:2;;1416:1;1413;1406:12;1365:2;1449:6;1436:20;1426:30;;1476:18;1468:6;1465:30;1462:2;;;1508:1;1505;1498:12;1462:2;1542:4;1534:6;1530:17;1518:29;;1592:3;1585;1577:6;1573:16;1563:8;1559:31;1556:40;1553:2;;;1609:1;1606;1599:12;1553:2;1358:261;;;;;;1628:442;;1730:3;1723:4;1715:6;1711:17;1707:27;1697:2;;1748:1;1745;1738:12;1697:2;1785:6;1772:20;1807:65;1822:49;1864:6;1822:49;;;1807:65;;;1798:74;;1892:6;1885:5;1878:21;1928:4;1920:6;1916:17;1961:4;1954:5;1950:16;1996:3;1987:6;1982:3;1978:16;1975:25;1972:2;;;2013:1;2010;2003:12;1972:2;2023:41;2057:6;2052:3;2047;2023:41;;;1690:380;;;;;;;;2078:130;;2158:6;2145:20;2136:29;;2170:33;2197:5;2170:33;;;2130:78;;;;;2215:128;;2294:6;2281:20;2272:29;;2306:32;2332:5;2306:32;;;2266:77;;;;;2350:241;;2454:2;2442:9;2433:7;2429:23;2425:32;2422:2;;;2470:1;2467;2460:12;2422:2;2505:1;2522:53;2567:7;2558:6;2547:9;2543:22;2522:53;;;2512:63;;2484:97;2416:175;;;;;2598:366;;;2719:2;2707:9;2698:7;2694:23;2690:32;2687:2;;;2735:1;2732;2725:12;2687:2;2770:1;2787:53;2832:7;2823:6;2812:9;2808:22;2787:53;;;2777:63;;2749:97;2877:2;2895:53;2940:7;2931:6;2920:9;2916:22;2895:53;;;2885:63;;2856:98;2681:283;;;;;;2971:491;;;;3109:2;3097:9;3088:7;3084:23;3080:32;3077:2;;;3125:1;3122;3115:12;3077:2;3160:1;3177:53;3222:7;3213:6;3202:9;3198:22;3177:53;;;3167:63;;3139:97;3267:2;3285:53;3330:7;3321:6;3310:9;3306:22;3285:53;;;3275:63;;3246:98;3375:2;3393:53;3438:7;3429:6;3418:9;3414:22;3393:53;;;3383:63;;3354:98;3071:391;;;;;;3469:721;;;;;3633:3;3621:9;3612:7;3608:23;3604:33;3601:2;;;3650:1;3647;3640:12;3601:2;3685:1;3702:53;3747:7;3738:6;3727:9;3723:22;3702:53;;;3692:63;;3664:97;3792:2;3810:53;3855:7;3846:6;3835:9;3831:22;3810:53;;;3800:63;;3771:98;3900:2;3918:53;3963:7;3954:6;3943:9;3939:22;3918:53;;;3908:63;;3879:98;4036:2;4025:9;4021:18;4008:32;4060:18;4052:6;4049:30;4046:2;;;4092:1;4089;4082:12;4046:2;4112:62;4166:7;4157:6;4146:9;4142:22;4112:62;;;4102:72;;3987:193;3595:595;;;;;;;;4197:360;;;4315:2;4303:9;4294:7;4290:23;4286:32;4283:2;;;4331:1;4328;4321:12;4283:2;4366:1;4383:53;4428:7;4419:6;4408:9;4404:22;4383:53;;;4373:63;;4345:97;4473:2;4491:50;4533:7;4524:6;4513:9;4509:22;4491:50;;;4481:60;;4452:95;4277:280;;;;;;4564:492;;;;4705:2;4693:9;4684:7;4680:23;4676:32;4673:2;;;4721:1;4718;4711:12;4673:2;4756:1;4773:53;4818:7;4809:6;4798:9;4794:22;4773:53;;;4763:63;;4735:97;4891:2;4880:9;4876:18;4863:32;4915:18;4907:6;4904:30;4901:2;;;4947:1;4944;4937:12;4901:2;4975:65;5032:7;5023:6;5012:9;5008:22;4975:65;;;4965:75;;;;4842:204;4667:389;;;;;;5063:969;;;;;;;5259:3;5247:9;5238:7;5234:23;5230:33;5227:2;;;5276:1;5273;5266:12;5227:2;5311:1;5328:53;5373:7;5364:6;5353:9;5349:22;5328:53;;;5318:63;;5290:97;5446:2;5435:9;5431:18;5418:32;5470:18;5462:6;5459:30;5456:2;;;5502:1;5499;5492:12;5456:2;5522:63;5577:7;5568:6;5557:9;5553:22;5522:63;;;5512:73;;5397:194;5622:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;;;5630:63;;5601:98;5730:2;5748:52;5792:7;5783:6;5772:9;5768:22;5748:52;;;5738:62;;5709:97;5837:3;5856:52;5900:7;5891:6;5880:9;5876:22;5856:52;;;5846:62;;5816:98;5945:3;5964:52;6008:7;5999:6;5988:9;5984:22;5964:52;;;5954:62;;5924:98;5221:811;;;;;;;;;6039:1199;;;;;;;;6261:3;6249:9;6240:7;6236:23;6232:33;6229:2;;;6278:1;6275;6268:12;6229:2;6313:1;6330:53;6375:7;6366:6;6355:9;6351:22;6330:53;;;6320:63;;6292:97;6448:2;6437:9;6433:18;6420:32;6472:18;6464:6;6461:30;6458:2;;;6504:1;6501;6494:12;6458:2;6524:63;6579:7;6570:6;6559:9;6555:22;6524:63;;;6514:73;;6399:194;6624:2;6642:53;6687:7;6678:6;6667:9;6663:22;6642:53;;;6632:63;;6603:98;6732:2;6750:52;6794:7;6785:6;6774:9;6770:22;6750:52;;;6740:62;;6711:97;6839:3;6858:52;6902:7;6893:6;6882:9;6878:22;6858:52;;;6848:62;;6818:98;6947:3;6966:52;7010:7;7001:6;6990:9;6986:22;6966:52;;;6956:62;;6926:98;7083:3;7072:9;7068:19;7055:33;7108:18;7100:6;7097:30;7094:2;;;7140:1;7137;7130:12;7094:2;7160:62;7214:7;7205:6;7194:9;7190:22;7160:62;;;7150:72;;7034:194;6223:1015;;;;;;;;;;;7245:1201;;;;;;;;7468:3;7456:9;7447:7;7443:23;7439:33;7436:2;;;7485:1;7482;7475:12;7436:2;7520:1;7537:53;7582:7;7573:6;7562:9;7558:22;7537:53;;;7527:63;;7499:97;7655:2;7644:9;7640:18;7627:32;7679:18;7671:6;7668:30;7665:2;;;7711:1;7708;7701:12;7665:2;7731:63;7786:7;7777:6;7766:9;7762:22;7731:63;;;7721:73;;7606:194;7831:2;7849:53;7894:7;7885:6;7874:9;7870:22;7849:53;;;7839:63;;7810:98;7939:2;7957:52;8001:7;7992:6;7981:9;7977:22;7957:52;;;7947:62;;7918:97;8046:3;8065:52;8109:7;8100:6;8089:9;8085:22;8065:52;;;8055:62;;8025:98;8154:3;8173:52;8217:7;8208:6;8197:9;8193:22;8173:52;;;8163:62;;8133:98;8290:3;8279:9;8275:19;8262:33;8315:18;8307:6;8304:30;8301:2;;;8347:1;8344;8337:12;8301:2;8367:63;8422:7;8413:6;8402:9;8398:22;8367:63;;;8357:73;;8241:195;7430:1016;;;;;;;;;;;8453:366;;;8574:2;8562:9;8553:7;8549:23;8545:32;8542:2;;;8590:1;8587;8580:12;8542:2;8625:1;8642:53;8687:7;8678:6;8667:9;8663:22;8642:53;;;8632:63;;8604:97;8732:2;8750:53;8795:7;8786:6;8775:9;8771:22;8750:53;;;8740:63;;8711:98;8536:283;;;;;;8826:257;;8938:2;8926:9;8917:7;8913:23;8909:32;8906:2;;;8954:1;8951;8944:12;8906:2;8989:1;9006:61;9059:7;9050:6;9039:9;9035:22;9006:61;;;8996:71;;8968:105;8900:183;;;;;9090:239;;9193:2;9181:9;9172:7;9168:23;9164:32;9161:2;;;9209:1;9206;9199:12;9161:2;9244:1;9261:52;9305:7;9296:6;9285:9;9281:22;9261:52;;;9251:62;;9223:96;9155:174;;;;;9336:261;;9450:2;9438:9;9429:7;9425:23;9421:32;9418:2;;;9466:1;9463;9456:12;9418:2;9501:1;9518:63;9573:7;9564:6;9553:9;9549:22;9518:63;;;9508:73;;9480:107;9412:185;;;;;9604:241;;9708:2;9696:9;9687:7;9683:23;9679:32;9676:2;;;9724:1;9721;9714:12;9676:2;9759:1;9776:53;9821:7;9812:6;9801:9;9797:22;9776:53;;;9766:63;;9738:97;9670:175;;;;;9853:173;;9940:46;9982:3;9974:6;9940:46;;;10015:4;10010:3;10006:14;9992:28;;9933:93;;;;;10035:181;;10148:62;10206:3;10198:6;10148:62;;;10134:76;;10127:89;;;;;10225:173;;10312:46;10354:3;10346:6;10312:46;;;10387:4;10382:3;10378:14;10364:28;;10305:93;;;;;10406:113;10489:24;10507:5;10489:24;;;10484:3;10477:37;10471:48;;;10557:690;;10702:54;10750:5;10702:54;;;10769:86;10848:6;10843:3;10769:86;;;10762:93;;10876:56;10926:5;10876:56;;;10952:7;10980:1;10965:260;10990:6;10987:1;10984:13;10965:260;;;11057:6;11051:13;11078:63;11137:3;11122:13;11078:63;;;11071:70;;11158:60;11211:6;11158:60;;;11148:70;;11022:203;11012:1;11009;11005:9;11000:14;;10965:260;;;10969:14;11238:3;11231:10;;10681:566;;;;;;;;11284:896;;11441:60;11495:5;11441:60;;;11514:92;11599:6;11594:3;11514:92;;;11507:99;;11629:3;11671:4;11663:6;11659:17;11654:3;11650:27;11698:62;11754:5;11698:62;;;11780:7;11808:1;11793:348;11818:6;11815:1;11812:13;11793:348;;;11880:9;11874:4;11870:20;11865:3;11858:33;11925:6;11919:13;11947:76;12018:4;12003:13;11947:76;;;11939:84;;12040:66;12099:6;12040:66;;;12030:76;;12129:4;12124:3;12120:14;12113:21;;11850:291;11840:1;11837;11833:9;11828:14;;11793:348;;;11797:14;12154:4;12147:11;;12171:3;12164:10;;11420:760;;;;;;;;;;12219:690;;12364:54;12412:5;12364:54;;;12431:86;12510:6;12505:3;12431:86;;;12424:93;;12538:56;12588:5;12538:56;;;12614:7;12642:1;12627:260;12652:6;12649:1;12646:13;12627:260;;;12719:6;12713:13;12740:63;12799:3;12784:13;12740:63;;;12733:70;;12820:60;12873:6;12820:60;;;12810:70;;12684:203;12674:1;12671;12667:9;12662:14;;12627:260;;;12631:14;12900:3;12893:10;;12343:566;;;;;;;;12917:104;12994:21;13009:5;12994:21;;;12989:3;12982:34;12976:45;;;13028:103;13101:24;13119:5;13101:24;;;13096:3;13089:37;13083:48;;;13138:113;13221:24;13239:5;13221:24;;;13216:3;13209:37;13203:48;;;13258:343;;13368:38;13400:5;13368:38;;;13418:70;13481:6;13476:3;13418:70;;;13411:77;;13493:52;13538:6;13533:3;13526:4;13519:5;13515:16;13493:52;;;13566:29;13588:6;13566:29;;;13561:3;13557:39;13550:46;;13348:253;;;;;;13608:174;13715:61;13770:5;13715:61;;;13710:3;13703:74;13697:85;;;13814:313;;13948:89;14030:6;14025:3;13948:89;;;13941:96;;14049:43;14085:6;14080:3;14073:5;14049:43;;;14114:6;14109:3;14105:16;14098:23;;13934:193;;;;;;14135:347;;14247:39;14280:5;14247:39;;;14298:71;14362:6;14357:3;14298:71;;;14291:78;;14374:52;14419:6;14414:3;14407:4;14400:5;14396:16;14374:52;;;14447:29;14469:6;14447:29;;;14442:3;14438:39;14431:46;;14227:255;;;;;;14489:360;;14619:39;14652:5;14619:39;;;14670:89;14752:6;14747:3;14670:89;;;14663:96;;14764:52;14809:6;14804:3;14797:4;14790:5;14786:16;14764:52;;;14837:6;14832:3;14828:16;14821:23;;14599:250;;;;;;14856:319;;14954:35;14983:5;14954:35;;;15001:61;15055:6;15050:3;15001:61;;;14994:68;;15067:52;15112:6;15107:3;15100:4;15093:5;15089:16;15067:52;;;15140:29;15162:6;15140:29;;;15135:3;15131:39;15124:46;;14934:241;;;;;;15183:465;;15343:67;15407:2;15402:3;15343:67;;;15336:74;;15443:66;15439:1;15434:3;15430:11;15423:87;15544:66;15539:2;15534:3;15530:12;15523:88;15639:2;15634:3;15630:12;15623:19;;15329:319;;;;15657:465;;15817:67;15881:2;15876:3;15817:67;;;15810:74;;15917:66;15913:1;15908:3;15904:11;15897:87;16018:66;16013:2;16008:3;16004:12;15997:88;16113:2;16108:3;16104:12;16097:19;;15803:319;;;;16131:465;;16291:67;16355:2;16350:3;16291:67;;;16284:74;;16391:66;16387:1;16382:3;16378:11;16371:87;16492:66;16487:2;16482:3;16478:12;16471:88;16587:2;16582:3;16578:12;16571:19;;16277:319;;;;16605:465;;16765:67;16829:2;16824:3;16765:67;;;16758:74;;16865:66;16861:1;16856:3;16852:11;16845:87;16966:66;16961:2;16956:3;16952:12;16945:88;17061:2;17056:3;17052:12;17045:19;;16751:319;;;;17079:364;;17239:67;17303:2;17298:3;17239:67;;;17232:74;;17339:66;17335:1;17330:3;17326:11;17319:87;17434:2;17429:3;17425:12;17418:19;;17225:218;;;;17452:465;;17612:67;17676:2;17671:3;17612:67;;;17605:74;;17712:66;17708:1;17703:3;17699:11;17692:87;17813:66;17808:2;17803:3;17799:12;17792:88;17908:2;17903:3;17899:12;17892:19;;17598:319;;;;17926:465;;18086:67;18150:2;18145:3;18086:67;;;18079:74;;18186:66;18182:1;18177:3;18173:11;18166:87;18287:66;18282:2;18277:3;18273:12;18266:88;18382:2;18377:3;18373:12;18366:19;;18072:319;;;;18400:465;;18560:67;18624:2;18619:3;18560:67;;;18553:74;;18660:66;18656:1;18651:3;18647:11;18640:87;18761:66;18756:2;18751:3;18747:12;18740:88;18856:2;18851:3;18847:12;18840:19;;18546:319;;;;18874:364;;19034:67;19098:2;19093:3;19034:67;;;19027:74;;19134:66;19130:1;19125:3;19121:11;19114:87;19229:2;19224:3;19220:12;19213:19;;19020:218;;;;19247:465;;19407:67;19471:2;19466:3;19407:67;;;19400:74;;19507:66;19503:1;19498:3;19494:11;19487:87;19608:66;19603:2;19598:3;19594:12;19587:88;19703:2;19698:3;19694:12;19687:19;;19393:319;;;;19721:465;;19881:67;19945:2;19940:3;19881:67;;;19874:74;;19981:66;19977:1;19972:3;19968:11;19961:87;20082:66;20077:2;20072:3;20068:12;20061:88;20177:2;20172:3;20168:12;20161:19;;19867:319;;;;20195:465;;20355:67;20419:2;20414:3;20355:67;;;20348:74;;20455:66;20451:1;20446:3;20442:11;20435:87;20556:66;20551:2;20546:3;20542:12;20535:88;20651:2;20646:3;20642:12;20635:19;;20341:319;;;;20669:364;;20829:67;20893:2;20888:3;20829:67;;;20822:74;;20929:66;20925:1;20920:3;20916:11;20909:87;21024:2;21019:3;21015:12;21008:19;;20815:218;;;;21042:465;;21202:67;21266:2;21261:3;21202:67;;;21195:74;;21302:66;21298:1;21293:3;21289:11;21282:87;21403:66;21398:2;21393:3;21389:12;21382:88;21498:2;21493:3;21489:12;21482:19;;21188:319;;;;21516:465;;21676:67;21740:2;21735:3;21676:67;;;21669:74;;21776:66;21772:1;21767:3;21763:11;21756:87;21877:66;21872:2;21867:3;21863:12;21856:88;21972:2;21967:3;21963:12;21956:19;;21662:319;;;;21990:465;;22150:67;22214:2;22209:3;22150:67;;;22143:74;;22250:66;22246:1;22241:3;22237:11;22230:87;22351:66;22346:2;22341:3;22337:12;22330:88;22446:2;22441:3;22437:12;22430:19;;22136:319;;;;22464:364;;22624:67;22688:2;22683:3;22624:67;;;22617:74;;22724:66;22720:1;22715:3;22711:11;22704:87;22819:2;22814:3;22810:12;22803:19;;22610:218;;;;22837:465;;22997:67;23061:2;23056:3;22997:67;;;22990:74;;23097:66;23093:1;23088:3;23084:11;23077:87;23198:66;23193:2;23188:3;23184:12;23177:88;23293:2;23288:3;23284:12;23277:19;;22983:319;;;;23311:465;;23471:67;23535:2;23530:3;23471:67;;;23464:74;;23571:66;23567:1;23562:3;23558:11;23551:87;23672:66;23667:2;23662:3;23658:12;23651:88;23767:2;23762:3;23758:12;23751:19;;23457:319;;;;23785:465;;23945:67;24009:2;24004:3;23945:67;;;23938:74;;24045:66;24041:1;24036:3;24032:11;24025:87;24146:66;24141:2;24136:3;24132:12;24125:88;24241:2;24236:3;24232:12;24225:19;;23931:319;;;;24259:364;;24419:67;24483:2;24478:3;24419:67;;;24412:74;;24519:66;24515:1;24510:3;24506:11;24499:87;24614:2;24609:3;24605:12;24598:19;;24405:218;;;;24632:465;;24792:67;24856:2;24851:3;24792:67;;;24785:74;;24892:66;24888:1;24883:3;24879:11;24872:87;24993:66;24988:2;24983:3;24979:12;24972:88;25088:2;25083:3;25079:12;25072:19;;24778:319;;;;25106:465;;25266:67;25330:2;25325:3;25266:67;;;25259:74;;25366:66;25362:1;25357:3;25353:11;25346:87;25467:66;25462:2;25457:3;25453:12;25446:88;25562:2;25557:3;25553:12;25546:19;;25252:319;;;;25580:465;;25740:67;25804:2;25799:3;25740:67;;;25733:74;;25840:66;25836:1;25831:3;25827:11;25820:87;25941:66;25936:2;25931:3;25927:12;25920:88;26036:2;26031:3;26027:12;26020:19;;25726:319;;;;26053:103;26126:24;26144:5;26126:24;;;26121:3;26114:37;26108:48;;;26163:113;26246:24;26264:5;26246:24;;;26241:3;26234:37;26228:48;;;26283:110;26364:23;26381:5;26364:23;;;26359:3;26352:36;26346:47;;;26400:286;;26556:105;26657:3;26648:6;26640;26556:105;;;26549:112;;26678:3;26671:10;;26537:149;;;;;;26693:266;;26839:95;26930:3;26921:6;26839:95;;;26832:102;;26951:3;26944:10;;26820:139;;;;;26966:213;;27084:2;27073:9;27069:18;27061:26;;27098:71;27166:1;27155:9;27151:17;27142:6;27098:71;;;27055:124;;;;;27186:631;;27406:3;27395:9;27391:19;27383:27;;27421:71;27489:1;27478:9;27474:17;27465:6;27421:71;;;27503:72;27571:2;27560:9;27556:18;27547:6;27503:72;;;27586;27654:2;27643:9;27639:18;27630:6;27586:72;;;27706:9;27700:4;27696:20;27691:2;27680:9;27676:18;27669:48;27731:76;27802:4;27793:6;27731:76;;;27723:84;;27377:440;;;;;;;;27824:739;;28070:3;28059:9;28055:19;28047:27;;28085:71;28153:1;28142:9;28138:17;28129:6;28085:71;;;28204:9;28198:4;28194:20;28189:2;28178:9;28174:18;28167:48;28229:78;28302:4;28293:6;28229:78;;;28221:86;;28318:72;28386:2;28375:9;28371:18;28362:6;28318:72;;;28401:70;28467:2;28456:9;28452:18;28443:6;28401:70;;;28482:71;28548:3;28537:9;28533:19;28524:6;28482:71;;;28041:522;;;;;;;;;28570:361;;28738:2;28727:9;28723:18;28715:26;;28788:9;28782:4;28778:20;28774:1;28763:9;28759:17;28752:47;28813:108;28916:4;28907:6;28813:108;;;28805:116;;28709:222;;;;;28938:385;;29118:2;29107:9;29103:18;29095:26;;29168:9;29162:4;29158:20;29154:1;29143:9;29139:17;29132:47;29193:120;29308:4;29299:6;29193:120;;;29185:128;;29089:234;;;;;29330:361;;29498:2;29487:9;29483:18;29475:26;;29548:9;29542:4;29538:20;29534:1;29523:9;29519:17;29512:47;29573:108;29676:4;29667:6;29573:108;;;29565:116;;29469:222;;;;;29698:201;;29810:2;29799:9;29795:18;29787:26;;29824:65;29886:1;29875:9;29871:17;29862:6;29824:65;;;29781:118;;;;;29906:261;;30048:2;30037:9;30033:18;30025:26;;30062:95;30154:1;30143:9;30139:17;30130:6;30062:95;;;30019:148;;;;;30174:301;;30312:2;30301:9;30297:18;30289:26;;30362:9;30356:4;30352:20;30348:1;30337:9;30333:17;30326:47;30387:78;30460:4;30451:6;30387:78;;;30379:86;;30283:192;;;;;30482:407;;30673:2;30662:9;30658:18;30650:26;;30723:9;30717:4;30713:20;30709:1;30698:9;30694:17;30687:47;30748:131;30874:4;30748:131;;;30740:139;;30644:245;;;;30896:407;;31087:2;31076:9;31072:18;31064:26;;31137:9;31131:4;31127:20;31123:1;31112:9;31108:17;31101:47;31162:131;31288:4;31162:131;;;31154:139;;31058:245;;;;31310:407;;31501:2;31490:9;31486:18;31478:26;;31551:9;31545:4;31541:20;31537:1;31526:9;31522:17;31515:47;31576:131;31702:4;31576:131;;;31568:139;;31472:245;;;;31724:407;;31915:2;31904:9;31900:18;31892:26;;31965:9;31959:4;31955:20;31951:1;31940:9;31936:17;31929:47;31990:131;32116:4;31990:131;;;31982:139;;31886:245;;;;32138:407;;32329:2;32318:9;32314:18;32306:26;;32379:9;32373:4;32369:20;32365:1;32354:9;32350:17;32343:47;32404:131;32530:4;32404:131;;;32396:139;;32300:245;;;;32552:407;;32743:2;32732:9;32728:18;32720:26;;32793:9;32787:4;32783:20;32779:1;32768:9;32764:17;32757:47;32818:131;32944:4;32818:131;;;32810:139;;32714:245;;;;32966:407;;33157:2;33146:9;33142:18;33134:26;;33207:9;33201:4;33197:20;33193:1;33182:9;33178:17;33171:47;33232:131;33358:4;33232:131;;;33224:139;;33128:245;;;;33380:407;;33571:2;33560:9;33556:18;33548:26;;33621:9;33615:4;33611:20;33607:1;33596:9;33592:17;33585:47;33646:131;33772:4;33646:131;;;33638:139;;33542:245;;;;33794:407;;33985:2;33974:9;33970:18;33962:26;;34035:9;34029:4;34025:20;34021:1;34010:9;34006:17;33999:47;34060:131;34186:4;34060:131;;;34052:139;;33956:245;;;;34208:407;;34399:2;34388:9;34384:18;34376:26;;34449:9;34443:4;34439:20;34435:1;34424:9;34420:17;34413:47;34474:131;34600:4;34474:131;;;34466:139;;34370:245;;;;34622:407;;34813:2;34802:9;34798:18;34790:26;;34863:9;34857:4;34853:20;34849:1;34838:9;34834:17;34827:47;34888:131;35014:4;34888:131;;;34880:139;;34784:245;;;;35036:407;;35227:2;35216:9;35212:18;35204:26;;35277:9;35271:4;35267:20;35263:1;35252:9;35248:17;35241:47;35302:131;35428:4;35302:131;;;35294:139;;35198:245;;;;35450:407;;35641:2;35630:9;35626:18;35618:26;;35691:9;35685:4;35681:20;35677:1;35666:9;35662:17;35655:47;35716:131;35842:4;35716:131;;;35708:139;;35612:245;;;;35864:407;;36055:2;36044:9;36040:18;36032:26;;36105:9;36099:4;36095:20;36091:1;36080:9;36076:17;36069:47;36130:131;36256:4;36130:131;;;36122:139;;36026:245;;;;36278:407;;36469:2;36458:9;36454:18;36446:26;;36519:9;36513:4;36509:20;36505:1;36494:9;36490:17;36483:47;36544:131;36670:4;36544:131;;;36536:139;;36440:245;;;;36692:407;;36883:2;36872:9;36868:18;36860:26;;36933:9;36927:4;36923:20;36919:1;36908:9;36904:17;36897:47;36958:131;37084:4;36958:131;;;36950:139;;36854:245;;;;37106:407;;37297:2;37286:9;37282:18;37274:26;;37347:9;37341:4;37337:20;37333:1;37322:9;37318:17;37311:47;37372:131;37498:4;37372:131;;;37364:139;;37268:245;;;;37520:407;;37711:2;37700:9;37696:18;37688:26;;37761:9;37755:4;37751:20;37747:1;37736:9;37732:17;37725:47;37786:131;37912:4;37786:131;;;37778:139;;37682:245;;;;37934:407;;38125:2;38114:9;38110:18;38102:26;;38175:9;38169:4;38165:20;38161:1;38150:9;38146:17;38139:47;38200:131;38326:4;38200:131;;;38192:139;;38096:245;;;;38348:407;;38539:2;38528:9;38524:18;38516:26;;38589:9;38583:4;38579:20;38575:1;38564:9;38560:17;38553:47;38614:131;38740:4;38614:131;;;38606:139;;38510:245;;;;38762:407;;38953:2;38942:9;38938:18;38930:26;;39003:9;38997:4;38993:20;38989:1;38978:9;38974:17;38967:47;39028:131;39154:4;39028:131;;;39020:139;;38924:245;;;;39176:407;;39367:2;39356:9;39352:18;39344:26;;39417:9;39411:4;39407:20;39403:1;39392:9;39388:17;39381:47;39442:131;39568:4;39442:131;;;39434:139;;39338:245;;;;39590:407;;39781:2;39770:9;39766:18;39758:26;;39831:9;39825:4;39821:20;39817:1;39806:9;39802:17;39795:47;39856:131;39982:4;39856:131;;;39848:139;;39752:245;;;;40004:407;;40195:2;40184:9;40180:18;40172:26;;40245:9;40239:4;40235:20;40231:1;40220:9;40216:17;40209:47;40270:131;40396:4;40270:131;;;40262:139;;40166:245;;;;40418:213;;40536:2;40525:9;40521:18;40513:26;;40550:71;40618:1;40607:9;40603:17;40594:6;40550:71;;;40507:124;;;;;40638:256;;40700:2;40694:9;40684:19;;40738:4;40730:6;40726:17;40837:6;40825:10;40822:22;40801:18;40789:10;40786:34;40783:62;40780:2;;;40858:1;40855;40848:12;40780:2;40878:10;40874:2;40867:22;40678:216;;;;;40901:321;;41044:18;41036:6;41033:30;41030:2;;;41076:1;41073;41066:12;41030:2;41143:4;41139:9;41132:4;41124:6;41120:17;41116:33;41108:41;;41207:4;41201;41197:15;41189:23;;40967:255;;;;41229:322;;41373:18;41365:6;41362:30;41359:2;;;41405:1;41402;41395:12;41359:2;41472:4;41468:9;41461:4;41453:6;41449:17;41445:33;41437:41;;41536:4;41530;41526:15;41518:23;;41296:255;;;;41558:151;;41644:3;41636:11;;41682:4;41677:3;41673:14;41665:22;;41630:79;;;;41716:157;;41808:3;41800:11;;41846:4;41841:3;41837:14;41829:22;;41794:79;;;;41880:151;;41966:3;41958:11;;42004:4;41999:3;41995:14;41987:22;;41952:79;;;;42038:137;;42147:5;42141:12;42131:22;;42112:63;;;;42182:143;;42297:5;42291:12;42281:22;;42262:63;;;;42332:137;;42441:5;42435:12;42425:22;;42406:63;;;;42476:121;;42569:5;42563:12;42553:22;;42534:63;;;;42604:118;;42694:5;42688:12;42678:22;;42659:63;;;;42729:122;;42823:5;42817:12;42807:22;;42788:63;;;;42858:108;;42956:4;42951:3;42947:14;42939:22;;42933:33;;;;42973:114;;43077:4;43072:3;43068:14;43060:22;;43054:33;;;;43094:108;;43192:4;43187:3;43183:14;43175:22;;43169:33;;;;43210:178;;43340:6;43335:3;43328:19;43377:4;43372:3;43368:14;43353:29;;43321:67;;;;;43397:184;;43533:6;43528:3;43521:19;43570:4;43565:3;43561:14;43546:29;;43514:67;;;;;43590:178;;43720:6;43715:3;43708:19;43757:4;43752:3;43748:14;43733:29;;43701:67;;;;;43777:162;;43891:6;43886:3;43879:19;43928:4;43923:3;43919:14;43904:29;;43872:67;;;;;43948:153;;44053:6;44048:3;44041:19;44090:4;44085:3;44081:14;44066:29;;44034:67;;;;;44110:163;;44225:6;44220:3;44213:19;44262:4;44257:3;44253:14;44238:29;;44206:67;;;;;44282:145;;44418:3;44403:18;;44396:31;;;;;44435:91;;44497:24;44515:5;44497:24;;;44486:35;;44480:46;;;;44533:85;;44606:5;44599:13;44592:21;44581:32;;44575:43;;;;44625:72;;44687:5;44676:16;;44670:27;;;;44704:144;;44776:66;44769:5;44765:78;44754:89;;44748:100;;;;44855:121;;44928:42;44921:5;44917:54;44906:65;;44900:76;;;;44983:72;;45045:5;45034:16;;45028:27;;;;45062:88;;45134:10;45127:5;45123:22;45112:33;;45106:44;;;;45157:169;;45260:61;45315:5;45260:61;;;45247:74;;45241:85;;;;45333:132;;45436:24;45454:5;45436:24;;;45423:37;;45417:48;;;;45473:145;45554:6;45549:3;45544;45531:30;45610:1;45601:6;45596:3;45592:16;45585:27;45524:94;;;;45627:268;45692:1;45699:101;45713:6;45710:1;45707:13;45699:101;;;45789:1;45784:3;45780:11;45774:18;45770:1;45765:3;45761:11;45754:39;45735:2;45732:1;45728:10;45723:15;;45699:101;;;45815:6;45812:1;45809:13;45806:2;;;45880:1;45871:6;45866:3;45862:16;45855:27;45806:2;45676:219;;;;;45903:97;;45991:2;45987:7;45982:2;45975:5;45971:14;45967:28;45957:38;;45951:49;;;;46008:117;46077:24;46095:5;46077:24;;;46070:5;46067:35;46057:2;;46116:1;46113;46106:12;46057:2;46051:74;;46132:111;46198:21;46213:5;46198:21;;;46191:5;46188:32;46178:2;;46234:1;46231;46224:12;46178:2;46172:71;;46250:117;46319:24;46337:5;46319:24;;;46312:5;46309:35;46299:2;;46358:1;46355;46348:12;46299:2;46293:74;;46374:115;46442:23;46459:5;46442:23;;;46435:5;46432:34;46422:2;;46480:1;46477;46470:12;46422:2;46416:73;;46496:117;46565:24;46583:5;46565:24;;;46558:5;46555:35;46545:2;;46604:1;46601;46594:12;46545:2;46539:74;;46620:115;46688:23;46705:5;46688:23;;;46681:5;46678:34;46668:2;;46726:1;46723;46716:12;46668:2;46662:73;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n */\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2091
      ]
    },
    "id": 2092,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2035,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "id": 2036,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:9"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2037,
        "nodeType": "ImportDirective",
        "scope": 2092,
        "sourceUnit": 1874,
        "src": "60:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2038,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1873,
              "src": "311:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1873",
                "typeString": "contract ERC721"
              }
            },
            "id": 2039,
            "nodeType": "InheritanceSpecifier",
            "src": "311:6:9"
          }
        ],
        "contractDependencies": [
          142,
          1873,
          1883,
          1986
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol",
        "fullyImplemented": true,
        "id": 2091,
        "linearizedBaseContracts": [
          2091,
          1873,
          1986,
          142,
          1883
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2041,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2091,
            "src": "343:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2040,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "343:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2043,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2091,
            "src": "390:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2042,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "390:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2046,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2091,
            "src": "679:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2044,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "679:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2045,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "735:10:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2073,
              "nodeType": "Block",
              "src": "888:249:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2055,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2041,
                      "src": "899:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2056,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "907:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "899:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2058,
                  "nodeType": "ExpressionStatement",
                  "src": "899:12:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2059,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2043,
                      "src": "921:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2060,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "931:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "921:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2062,
                  "nodeType": "ExpressionStatement",
                  "src": "921:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2064,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2046,
                        "src": "1044:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2063,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1025:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2066,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:49:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2070,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2052,
                        "src": "1113:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2067,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "1085:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2091",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 326,
                      "src": "1085:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2072,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:44:9"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2074,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2048,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2074,
                  "src": "814:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2050,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2074,
                  "src": "834:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2052,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2074,
                  "src": "856:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "813:67:9"
            },
            "returnParameters": {
              "id": 2054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:9"
            },
            "scope": 2091,
            "src": "801:336:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2081,
              "nodeType": "Block",
              "src": "1296:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2079,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2041,
                    "src": "1313:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2078,
                  "id": 2080,
                  "nodeType": "Return",
                  "src": "1306:12:9"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2082,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:9"
            },
            "returnParameters": {
              "id": 2078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2077,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2082,
                  "src": "1281:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2076,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1280:15:9"
            },
            "scope": 2091,
            "src": "1242:83:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2089,
              "nodeType": "Block",
              "src": "1490:31:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2087,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2043,
                    "src": "1507:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2086,
                  "id": 2088,
                  "nodeType": "Return",
                  "src": "1500:14:9"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:2:9"
            },
            "returnParameters": {
              "id": 2086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2085,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "1475:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2084,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:15:9"
            },
            "scope": 2091,
            "src": "1434:87:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2092,
        "src": "285:1239:9"
      }
    ],
    "src": "0:1525:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2091
      ]
    },
    "id": 2092,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2035,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "id": 2036,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:9"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2037,
        "nodeType": "ImportDirective",
        "scope": 2092,
        "sourceUnit": 1874,
        "src": "60:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2038,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1873,
              "src": "311:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1873",
                "typeString": "contract ERC721"
              }
            },
            "id": 2039,
            "nodeType": "InheritanceSpecifier",
            "src": "311:6:9"
          }
        ],
        "contractDependencies": [
          142,
          1873,
          1883,
          1986
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol",
        "fullyImplemented": true,
        "id": 2091,
        "linearizedBaseContracts": [
          2091,
          1873,
          1986,
          142,
          1883
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2041,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2091,
            "src": "343:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2040,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "343:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2043,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2091,
            "src": "390:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2042,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "390:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2046,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2091,
            "src": "679:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2044,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "679:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2045,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "735:10:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2073,
              "nodeType": "Block",
              "src": "888:249:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2055,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2041,
                      "src": "899:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2056,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "907:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "899:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2058,
                  "nodeType": "ExpressionStatement",
                  "src": "899:12:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2059,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2043,
                      "src": "921:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2060,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "931:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "921:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2062,
                  "nodeType": "ExpressionStatement",
                  "src": "921:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2064,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2046,
                        "src": "1044:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2063,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1025:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2066,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:49:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2070,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2052,
                        "src": "1113:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2067,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "1085:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2091",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 326,
                      "src": "1085:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2072,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:44:9"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2074,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2048,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2074,
                  "src": "814:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2050,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2074,
                  "src": "834:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2052,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2074,
                  "src": "856:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "813:67:9"
            },
            "returnParameters": {
              "id": 2054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:9"
            },
            "scope": 2091,
            "src": "801:336:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2081,
              "nodeType": "Block",
              "src": "1296:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2079,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2041,
                    "src": "1313:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2078,
                  "id": 2080,
                  "nodeType": "Return",
                  "src": "1306:12:9"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2082,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:9"
            },
            "returnParameters": {
              "id": 2078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2077,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2082,
                  "src": "1281:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2076,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1280:15:9"
            },
            "scope": 2091,
            "src": "1242:83:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2089,
              "nodeType": "Block",
              "src": "1490:31:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2087,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2043,
                    "src": "1507:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2086,
                  "id": 2088,
                  "nodeType": "Return",
                  "src": "1500:14:9"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:2:9"
            },
            "returnParameters": {
              "id": 2086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2085,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "1475:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2084,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:15:9"
            },
            "scope": 2091,
            "src": "1434:87:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2092,
        "src": "285:1239:9"
      }
    ],
    "src": "0:1525:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-09-12T10:44:22.476Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "isMinter(address)": {
        "details": "Checks if minter isWhitelisted()"
      },
      "isWhitelisted(address)": {
        "details": "Checks Registry contract for whitelisted status",
        "params": {
          "target": "The address to check"
        }
      },
      "mint(address,string,bytes32,uint32,uint32,uint32)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted token."
        },
        "return": "tokenId"
      },
      "mintWithTokenURI(address,string,bytes32,uint32,uint32,uint32,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause actions on this contract"
      },
      "safeMint(address,string,bytes32,uint32,uint32,uint32)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "to": "The address that will receive the minted token."
        },
        "return": "tokenId"
      },
      "safeMint(address,string,bytes32,uint32,uint32,uint32,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check.",
          "to": "The address that will receive the minted token."
        },
        "return": "tokenId"
      },
      "safeMintWithTokenURI(address,string,bytes32,uint32,uint32,uint32,string)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots on      We're not grabbing this from the Registry in case the user has private"
      },
      "tokenMinterPropertyNames(address,string)": {
        "details": "Look up all Property Names a Minter has tokenized on a content ID"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls.",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause the smart contract."
      },
      "updateRegistryAddress(address)": {
        "details": "Update address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(uint256)": {
        "notice": "Customized for Microsponsors"
      },
      "mintWithTokenURI(address,string,bytes32,uint32,uint32,uint32,string)": {
        "notice": "Customized for Microsponsors from: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol"
      },
      "safeMintWithTokenURI(address,string,bytes32,uint32,uint32,uint32,string)": {
        "notice": "Customized for Microsponsors from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol"
      },
      "unpause()": {
        "notice": "This is public rather than external so it can be called by  derived contracts."
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol"
  }
}