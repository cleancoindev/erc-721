{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenToFederationId",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokensMintedBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        }
      ],
      "name": "tokenMinterPropertyNames",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "updateMintFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "safeMintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenToFederationId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokensMintedBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"tokenMinterPropertyNames\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"updateMintFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Customized for MicrosponsorsBurns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"mint(string,string,uint48,uint48,uint48,uint16,uint32)\":{\"details\":\"Function to mint tokens.\",\"return\":\"tokenId\"},\"mintWithTokenURI(string,string,uint48,uint48,uint48,uint16,uint32,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause minting and transfers.\"},\"safeMint(string,string,uint48,uint48,uint48,uint16,uint32)\":{\"details\":\"Function to safely mint tokens.\",\"return\":\"tokenId\"},\"safeMint(string,string,uint48,uint48,uint48,uint16,uint32,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\"},\"return\":\"tokenId\"},\"safeMintWithTokenURI(string,string,uint48,uint48,uint48,uint16,uint32,string)\":{\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations.\"},\"tokenMinterPropertyNames(address,string)\":{\"details\":\"Look up all Property Names a Minter has created Time Slots for      with a particular Content ID\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"uint256 ID of the token to query\"},\"return\":\"URI for a given token ID.\"},\"tokensMintedBy(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\"},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership1(address)\":{\"details\":\"Transfer owner (admin) functions to another address\",\"params\":{\"newOwner\":\"Address of new owner/ admin of contract\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause minting and transfers.\"},\"updateMintFee(uint256)\":{\"details\":\"Update the fee (in wei) charged for minting a single token\"},\"updateRegistryAddress(address)\":{\"details\":\"Update contract address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}},\"withdrawBalance()\":{\"details\":\"Admin withdraws entire balance from contract.\"}}},\"userdoc\":{\"methods\":{\"tokenURI(uint256)\":{\"notice\":\"Throws if the token ID does not exist. May return an empty string.\"},\"tokensMintedBy(address)\":{\"notice\":\"Return all the Token IDs minted by a given account.\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Copyright 2020 Niche Networks, Inc. (owns & operates Microsponsors.io) Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0x4ccdf6611273b0cbd858ded6ed3af1da2a8d4e26241b7e2202de0f0a8c2073d0\",\"urls\":[\"bzz-raw://f476904ef7bb9ebd25deb3de44c5e4c4ab9ac40667b9a05c832f6a0fbed4de41\",\"dweb:/ipfs/Qmdmdju2jxjzF5fiYwyHMqSUriCxEHJ3XmKqpfW2k2rL9v\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0x1a017ef5e80bc16408e7e1fb7e25d7acaba18fb67edacf54e111fac987cd3bc8\",\"urls\":[\"bzz-raw://97e5aa2bff8bc111bc8ff4d2df17eb99a61cf09a2a27a2a3082f4c910f09e329\",\"dweb:/ipfs/QmbuNi56PTdAxcBr6YiQWzSrZM8mSqrD2YU5AeCkgmWPra\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "0x60806040526002805460ff60a01b19169055655af3107a40006003553480156200002857600080fd5b5060405162004586380380620045868339810160408190526200004b91620003ff565b6200007f7f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b036200018f16565b620000b37f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b036200018f16565b620000c66001600160e01b036200023416565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000f062000234565b600280546001600160a01b0319166001600160a01b0392909216919091179055825162000125906010906020860190620002ee565b5081516200013b906011906020850190620002ee565b50620001707f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b036200018f16565b62000186816200023960201b62001d201760201c565b505050620005d3565b7fffffffff000000000000000000000000000000000000000000000000000000008082161415620001f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ee90620004f8565b60405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b335b90565b6001546001600160a01b0316620002586001600160e01b036200023416565b6001600160a01b031614806200029357506002546001600160a01b0316620002886001600160e01b036200023416565b6001600160a01b0316145b620002cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ee906200050a565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033157805160ff191683800117855562000361565b8280016001018555821562000361579182015b828111156200036157825182559160200191906001019062000344565b506200036f92915062000373565b5090565b6200023691905b808211156200036f57600081556001016200037a565b80516200039d81620005b9565b92915050565b600082601f830112620003b557600080fd5b8151620003cc620003c68262000543565b6200051c565b91508082526020830160208301858383011115620003e957600080fd5b620003f683828462000586565b50505092915050565b6000806000606084860312156200041557600080fd5b83516001600160401b038111156200042c57600080fd5b6200043a86828701620003a3565b93505060208401516001600160401b038111156200045757600080fd5b6200046586828701620003a3565b9250506040620004788682870162000390565b9150509250925092565b600062000491601c836200056b565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000815260200192915050565b6000620004cc6013836200056b565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b602080825281016200039d8162000482565b602080825281016200039d81620004bd565b6040518181016001600160401b03811182821017156200053b57600080fd5b604052919050565b60006001600160401b038211156200055a57600080fd5b506020601f91909101601f19160190565b90815260200190565b60006001600160a01b0382166200039d565b60005b83811015620005a357818101518382015260200162000589565b83811115620005b3576000848401525b50505050565b620005c48162000574565b8114620005d057600080fd5b50565b613fa380620005e36000396000f3fe6080604052600436106102255760003560e01c806363e1a838116101235780639ce7dca3116100ab578063c87b56dd1161006f578063c87b56dd14610603578063e2b375a914610623578063e5c2492414610643578063e982d5a914610678578063e985e9c51461069857610225565b80639ce7dca314610570578063a22cb46514610583578063a4ede128146105a3578063b88d4fde146105c3578063c57a8825146105e357610225565b80637b103999116100f25780637b103999146104e457806384017e52146105065780638456cb59146105265780638462151c1461053b57806395d89b411461055b57610225565b806363e1a8381461046f57806370a082311461048257806373688914146104a25780637affcb9a146104b757610225565b80632a0c7799116101b157806344c140d01161017557806344c140d0146103fd57806352709725146104105780635c975abb146104255780635fd8c7101461043a5780636352211e1461044f57610225565b80632a0c7799146103685780633d857187146103955780633f4ba83a146103a857806342842e0e146103bd57806342966c68146103dd57610225565b806313966db5116101f857806313966db5146102d1578063180b9e3f146102f357806318160ddd146103205780631c7029811461033557806323b872dd1461034857610225565b806301ffc9a71461022a57806306fdde0314610260578063081812fc14610282578063095ea7b3146102af575b600080fd5b34801561023657600080fd5b5061024a6102453660046132e1565b6106b8565b6040516102579190613caa565b60405180910390f35b34801561026c57600080fd5b506102756106db565b6040516102579190613cc6565b34801561028e57600080fd5b506102a261029d3660046134df565b610772565b6040516102579190613b60565b3480156102bb57600080fd5b506102cf6102ca366004613293565b6107be565b005b3480156102dd57600080fd5b506102e661095b565b6040516102579190613e07565b3480156102ff57600080fd5b5061031361030e3660046134df565b610961565b6040516102579190613e15565b34801561032c57600080fd5b506102e6610979565b6102e661034336600461331d565b61098a565b34801561035457600080fd5b506102cf610363366004613147565b610af5565b34801561037457600080fd5b506103886103833660046130ef565b610c11565b6040516102579190613c99565b6102e66103a33660046133e8565b610d19565b3480156103b457600080fd5b506102cf610e8f565b3480156103c957600080fd5b506102cf6103d8366004613147565b610f13565b3480156103e957600080fd5b506102cf6103f83660046134df565b610f33565b6102e661040b3660046133e8565b611053565b34801561041c57600080fd5b506102a261118f565b34801561043157600080fd5b5061024a61119e565b34801561044657600080fd5b506102cf6111ae565b34801561045b57600080fd5b506102a261046a3660046134df565b61128a565b6102e661047d36600461331d565b6112a5565b34801561048e57600080fd5b506102e661049d3660046130ef565b6113ca565b3480156104ae57600080fd5b506102a2611419565b3480156104c357600080fd5b506104d76104d236600461323d565b611428565b6040516102579190613c88565b3480156104f057600080fd5b506104f96115c8565b6040516102579190613cb8565b34801561051257600080fd5b506102cf6105213660046134df565b6115d7565b34801561053257600080fd5b506102cf61163b565b34801561054757600080fd5b506103886105563660046130ef565b6116c6565b34801561056757600080fd5b50610275611780565b6102e661057e3660046133e8565b6117e1565b34801561058f57600080fd5b506102cf61059e36600461320d565b611906565b3480156105af57600080fd5b506104d76105be3660046130ef565b611a8c565b3480156105cf57600080fd5b506102cf6105de366004613194565b611c02565b3480156105ef57600080fd5b506102cf6105fe3660046130ef565b611d20565b34801561060f57600080fd5b5061027561061e3660046134df565b611da1565b34801561062f57600080fd5b506102cf61063e3660046130ef565b611e67565b34801561064f57600080fd5b5061066361065e3660046134df565b611ef4565b60405161025799989796959493929190613b6e565b34801561068457600080fd5b506102cf6106933660046130ef565b61213b565b3480156106a457600080fd5b5061024a6106b336600461310d565b6121c9565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107675780601f1061073c57610100808354040283529160200191610767565b820191906000526020600020905b81548152906001019060200180831161074a57829003601f168201915b505050505090505b90565b600061077d826121f7565b6107a25760405162461bcd60e51b815260040161079990613db7565b60405180910390fd5b506000908152600e60205260409020546001600160a01b031690565b6004546001600160a01b0316634039ad0d6107d7612214565b6040518263ffffffff1660e01b81526004016107f39190613b60565b60206040518083038186803b15801561080b57600080fd5b505afa15801561081f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061084391908101906132c3565b61085f5760405162461bcd60e51b815260040161079990613dc7565b600254600160a01b900460ff161561087657600080fd5b60006108818261128a565b9050806001600160a01b0316836001600160a01b031614156108b55760405162461bcd60e51b815260040161079990613d27565b806001600160a01b03166108c7612214565b6001600160a01b031614806108e357506108e3816106b3612214565b6108ff5760405162461bcd60e51b815260040161079990613df7565b6000828152600e602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b60006109856005612218565b905090565b6004546000906001600160a01b031663aa271e1a6109a6612214565b6040518263ffffffff1660e01b81526004016109c29190613b60565b60206040518083038186803b1580156109da57600080fd5b505afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a1291908101906132c3565b610a2e5760405162461bcd60e51b815260040161079990613dd7565b600254600160a01b900460ff1615610a4557600080fd5b600354341015610a5457600080fd5b60008263ffffffff1611610a7a5760405162461bcd60e51b815260040161079990613d67565b610a868887878761221c565b610aa25760405162461bcd60e51b815260040161079990613da7565b6000610ab4610aaf612214565b612324565b9050610ac5818a8a8a8a8a8a612347565b6000818152600960205260409020805463ffffffff851663ffffffff199091161790559050979650505050505050565b600254600160a01b900460ff1615610b0c57600080fd5b610b1d610b17612214565b826125dd565b610b395760405162461bcd60e51b815260040161079990613de7565b6000818152600a60205260408120546001600160a01b031690610b5b8361128a565b600480546040516354a58b9b60e11b81529293506001600160a01b03169163a94b173691610b93918991899189918991899101613c02565b60206040518083038186803b158015610bab57600080fd5b505afa158015610bbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610be391908101906132c3565b610bff5760405162461bcd60e51b815260040161079990613de7565b610c0a85858561265a565b5050505050565b60606001600160a01b038216610c395760405162461bcd60e51b815260040161079990613d07565b6001600160a01b0382166000908152600860205260408120610c5a90612218565b905080610c7c5760408051600080825260208201909252905b509150506106d6565b606081604051908082528060200260200182016040528015610ca8578160200160208202803883390190505b5090506000610cb5610979565b9050600060015b828111610d0c576000818152600a60205260409020546001600160a01b0388811691161415610d045780848381518110610cf257fe5b60209081029190910101526001909101905b600101610cbc565b83955050505050506106d6565b6004546000906001600160a01b031663aa271e1a610d35612214565b6040518263ffffffff1660e01b8152600401610d519190613b60565b60206040518083038186803b158015610d6957600080fd5b505afa158015610d7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610da191908101906132c3565b610dbd5760405162461bcd60e51b815260040161079990613dd7565b600254600160a01b900460ff1615610dd457600080fd5b600354341015610de357600080fd5b60008363ffffffff1611610e095760405162461bcd60e51b815260040161079990613d67565b610e158988888861221c565b610e315760405162461bcd60e51b815260040161079990613da7565b6000610e43610e3e612214565b612760565b9050610e54818b8b8b8b8b8b612347565b610e5e818461283f565b6000818152600960205260409020805463ffffffff861663ffffffff19909116179055905098975050505050505050565b6001546001600160a01b0316610ea3612214565b6001600160a01b03161480610ed257506002546001600160a01b0316610ec7612214565b6001600160a01b0316145b610eee5760405162461bcd60e51b815260040161079990613d77565b600254600160a01b900460ff16610f0457600080fd5b6002805460ff60a01b19169055565b610f2e83838360405180602001604052806000815250611c02565b505050565b600254600160a01b900460ff1615610f4a57600080fd5b6000610f558261128a565b6000838152600a60205260409020549091506001600160a01b0390811690821681141561101d576004546001600160a01b031663aa271e1a610f95612214565b6040518263ffffffff1660e01b8152600401610fb19190613b60565b60206040518083038186803b158015610fc957600080fd5b505afa158015610fdd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061100191908101906132c3565b61101d5760405162461bcd60e51b815260040161079990613d17565b61102e611028612214565b846125dd565b61104a5760405162461bcd60e51b815260040161079990613d17565b610f2e83612883565b6004546000906001600160a01b031663aa271e1a61106f612214565b6040518263ffffffff1660e01b815260040161108b9190613b60565b60206040518083038186803b1580156110a357600080fd5b505afa1580156110b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110db91908101906132c3565b6110f75760405162461bcd60e51b815260040161079990613dd7565b600254600160a01b900460ff161561110e57600080fd5b60035434101561111d57600080fd5b60008363ffffffff16116111435760405162461bcd60e51b815260040161079990613d67565b61114f8988888861221c565b61116b5760405162461bcd60e51b815260040161079990613da7565b600061117e611178612214565b84612895565b9050610e5e818b8b8b8b8b8b612347565b6002546001600160a01b031681565b600254600160a01b900460ff1681565b6001546001600160a01b03166111c2612214565b6001600160a01b031614806111f157506002546001600160a01b03166111e6612214565b6001600160a01b0316145b61120d5760405162461bcd60e51b815260040161079990613d77565b6040513031906000903390839061122390613b55565b60006040518083038185875af1925050503d8060008114611260576040519150601f19603f3d011682016040523d82523d6000602084013e611265565b606091505b50509050806112865760405162461bcd60e51b815260040161079990613d37565b5050565b6000908152600660205260409020546001600160a01b031690565b6004546000906001600160a01b031663aa271e1a6112c1612214565b6040518263ffffffff1660e01b81526004016112dd9190613b60565b60206040518083038186803b1580156112f557600080fd5b505afa158015611309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061132d91908101906132c3565b6113495760405162461bcd60e51b815260040161079990613dd7565b600254600160a01b900460ff161561136057600080fd5b60035434101561136f57600080fd5b60008263ffffffff16116113955760405162461bcd60e51b815260040161079990613d67565b6113a18887878761221c565b6113bd5760405162461bcd60e51b815260040161079990613da7565b6000610ab4610e3e612214565b60006001600160a01b0382166113f25760405162461bcd60e51b815260040161079990613d07565b6001600160a01b038216600090815260076020526040902061141390612218565b92915050565b6001546001600160a01b031681565b6001600160a01b0383166000908152600b602052604090819020905160609182916114569086908690613b3c565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561153b57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156115235780601f106114f857610100808354040283529160200191611523565b820191906000526020600020905b81548152906001019060200180831161150657829003601f168201915b50505050508152505081526020019060010190611484565b5050505090506060815160405190808252806020026020018201604052801561157857816020015b60608152602001906001900390816115635790505b50905060005b82518110156115be5782818151811061159357fe5b6020026020010151600001518282815181106115ab57fe5b602090810291909101015260010161157e565b5095945050505050565b6004546001600160a01b031681565b6001546001600160a01b03166115eb612214565b6001600160a01b0316148061161a57506002546001600160a01b031661160f612214565b6001600160a01b0316145b6116365760405162461bcd60e51b815260040161079990613d77565b600355565b6001546001600160a01b031661164f612214565b6001600160a01b0316148061167e57506002546001600160a01b0316611673612214565b6001600160a01b0316145b61169a5760405162461bcd60e51b815260040161079990613d77565b600254600160a01b900460ff16156116b157600080fd5b6002805460ff60a01b1916600160a01b179055565b606060006116d3836113ca565b9050806116f0576040805160008082526020820190925290610c73565b60608160405190808252806020026020018201604052801561171c578160200160208202803883390190505b5090506000611729610979565b9050600060015b828111610d0c576000818152600660205260409020546001600160a01b0388811691161415611778578084838151811061176657fe5b60209081029190910101526001909101905b600101611730565b60118054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107675780601f1061073c57610100808354040283529160200191610767565b6004546000906001600160a01b031663aa271e1a6117fd612214565b6040518263ffffffff1660e01b81526004016118199190613b60565b60206040518083038186803b15801561183157600080fd5b505afa158015611845573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061186991908101906132c3565b6118855760405162461bcd60e51b815260040161079990613dd7565b600254600160a01b900460ff161561189c57600080fd5b6003543410156118ab57600080fd5b60008363ffffffff16116118d15760405162461bcd60e51b815260040161079990613d67565b6118dd8988888861221c565b6118f95760405162461bcd60e51b815260040161079990613da7565b6000610e43610aaf612214565b6004546001600160a01b0316634039ad0d61191f612214565b6040518263ffffffff1660e01b815260040161193b9190613b60565b60206040518083038186803b15801561195357600080fd5b505afa158015611967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061198b91908101906132c3565b6119a75760405162461bcd60e51b815260040161079990613dc7565b600254600160a01b900460ff16156119be57600080fd5b6119c6612214565b6001600160a01b0316826001600160a01b031614156119f75760405162461bcd60e51b815260040161079990613d57565b80600f6000611a04612214565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611a48612214565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611a809190613caa565b60405180910390a35050565b6001600160a01b0381166000908152600c602090815260408083208054825181850281018501909352808352606094859484015b82821015611b7757600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015611b5f5780601f10611b3457610100808354040283529160200191611b5f565b820191906000526020600020905b815481529060010190602001808311611b4257829003601f168201915b50505050508152505081526020019060010190611ac0565b50505050905060608151604051908082528060200260200182016040528015611bb457816020015b6060815260200190600190039081611b9f5790505b50905060005b8251811015611bfa57828181518110611bcf57fe5b602002602001015160000151828281518110611be757fe5b6020908102919091010152600101611bba565b509392505050565b600254600160a01b900460ff1615611c1957600080fd5b611c2a611c24612214565b836125dd565b611c465760405162461bcd60e51b815260040161079990613de7565b6000828152600a60205260408120546001600160a01b031690611c688461128a565b600480546040516354a58b9b60e11b81529293506001600160a01b03169163a94b173691611ca0918a918a918a918991899101613c02565b60206040518083038186803b158015611cb857600080fd5b505afa158015611ccc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611cf091908101906132c3565b611d0c5760405162461bcd60e51b815260040161079990613de7565b611d18868686866128cc565b505050505050565b6001546001600160a01b0316611d34612214565b6001600160a01b03161480611d6357506002546001600160a01b0316611d58612214565b6001600160a01b0316145b611d7f5760405162461bcd60e51b815260040161079990613d77565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6060611dac826121f7565b611dc85760405162461bcd60e51b815260040161079990613db7565b6000828152600d602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015611e5b5780601f10611e3057610100808354040283529160200191611e5b565b820191906000526020600020905b815481529060010190602001808311611e3e57829003601f168201915b50505050509050919050565b6001546001600160a01b0316611e7b612214565b6001600160a01b03161480611eaa57506002546001600160a01b0316611e9f612214565b6001600160a01b0316145b611ec65760405162461bcd60e51b815260040161079990613d77565b6001600160a01b03811615611ef157600280546001600160a01b0319166001600160a01b0383161790555b50565b6000806060806000806000806000611f0b8a6121f7565b611f275760405162461bcd60e51b815260040161079990613db7565b611f2f612eda565b60008b8152600a6020908152604091829020825160e08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f8101869004860283018601909652858252919492938581019391929190830182828015611fe75780601f10611fbc57610100808354040283529160200191611fe7565b820191906000526020600020905b815481529060010190602001808311611fca57829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156120795780601f1061204e57610100808354040283529160200191612079565b820191906000526020600020905b81548152906001019060200180831161205c57829003601f168201915b50505091835250506003919091015465ffffffffffff808216602080850191909152660100000000000083048216604080860191909152600160601b84049092166060850152600160901b90920461ffff1660809093019290925260008e815260099091522054815191925063ffffffff16906120f58d61128a565b83602001518460400151856060015186608001518760a001518860c00151888696508595509a509a509a509a509a509a509a509a509a5050509193959799909294969850565b6001546001600160a01b031661214f612214565b6001600160a01b0316148061217e57506002546001600160a01b0316612173612214565b6001600160a01b0316145b61219a5760405162461bcd60e51b815260040161079990613d77565b6001600160a01b03811615611ef157600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600f6020908152604080832093909416825291909152205460ff1690565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b600480546040516323dd3a3d60e11b81526000926001600160a01b03909216916347ba747a9161224e91899101613cc6565b60206040518083038186803b15801561226657600080fd5b505afa15801561227a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061229e91908101906132c3565b6122ba5760405162461bcd60e51b815260040161079990613d47565b8165ffffffffffff168465ffffffffffff16116122e95760405162461bcd60e51b815260040161079990613d87565b8365ffffffffffff168365ffffffffffff16116123185760405162461bcd60e51b815260040161079990613d97565b5060015b949350505050565b6000806123408360405180602001604052806000815250612895565b9392505050565b612350876121f7565b61236c5760405162461bcd60e51b815260040161079990613db7565b612374612eda565b6040518060e00160405280612387612214565b6001600160a01b03908116825260208083018b905260408084018b905265ffffffffffff8a811660608601528981166080860152881660a085015261ffff871660c09094019390935260008c8152600a825292909220835181546001600160a01b03191692169190911781558282015180519394508493919261241292600185019290910190612f17565b506040820151805161242e916002840191602090910190612f17565b50606082015160039091018054608084015160a085015160c09095015161ffff16600160901b0273ffff0000000000000000000000000000000000001965ffffffffffff968716600160601b0271ffffffffffff000000000000000000000000199388166601000000000000026bffffffffffff000000000000199890971665ffffffffffff199095169490941796909616949094171617929092161790556124d687612905565b61253f57600c60006124e6612214565b6001600160a01b031681526020808201929092526040908101600090812082518085019093528a835280546001810180835591835291849020835180519295919093019261253a9284929190910190612f17565b505050505b6125498787612a30565b6125d357600b6000612559612214565b6001600160a01b03166001600160a01b03168152602001908152602001600020876040516125879190613b49565b9081526040805191829003602090810183208382019092528883528154600181018084556000938452928290208451805194959491909201926125ce928492910190612f17565b505050505b5050505050505050565b60006125e8826121f7565b6126045760405162461bcd60e51b815260040161079990613db7565b600061260f8361128a565b9050806001600160a01b0316846001600160a01b0316148061264a5750836001600160a01b031661263f84610772565b6001600160a01b0316145b8061231c575061231c81856121c9565b826001600160a01b031661266d8261128a565b6001600160a01b0316146126935760405162461bcd60e51b815260040161079990613de7565b6001600160a01b0382166126b95760405162461bcd60e51b815260040161079990613cf7565b6126c281612b77565b6001600160a01b03831660009081526007602052604090206126e390612bb2565b6001600160a01b038216600090815260076020526040902061270490612bc9565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006001600160a01b0382166127885760405162461bcd60e51b815260040161079990613cd7565b6127926005612bc9565b600061279e6005612218565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b0389169081179091558352600790915290209091506127e090612bc9565b6001600160a01b038316600090815260086020526040902061280190612bc9565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b612848826121f7565b6128645760405162461bcd60e51b815260040161079990613db7565b6000828152600d602090815260409091208251610f2e92840190612f17565b611ef161288f8261128a565b82612bd2565b6000806128a184612760565b90506128b06000858386612d11565b6123405760405162461bcd60e51b815260040161079990613ce7565b6128d784848461265a565b6128e384848484612d11565b6128ff5760405162461bcd60e51b815260040161079990613ce7565b50505050565b336000908152600c602090815260408083208054825181850281018501909352808352606093859084015b828210156129e757600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156129cf5780601f106129a4576101008083540402835291602001916129cf565b820191906000526020600020905b8154815290600101906020018083116129b257829003601f168201915b50505050508152505081526020019060010190612930565b5092935060009250829150505b8251811015611bfa57612a1e85848381518110612a0d57fe5b602002602001015160000151612ddc565b15612a2857600191505b6001016129f4565b336000908152600b6020526040808220905160609190612a51908690613b49565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015612b3657600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612b1e5780601f10612af357610100808354040283529160200191612b1e565b820191906000526020600020905b815481529060010190602001808311612b0157829003601f168201915b50505050508152505081526020019060010190612a7f565b5092935060009250829150505b8251811015612b6e57612b5c85848381518110612a0d57fe5b15612b6657600191505b600101612b43565b50949350505050565b6000818152600e60205260409020546001600160a01b031615611ef1576000908152600e6020526040902080546001600160a01b0319169055565b8054612bc590600163ffffffff612e3516565b9055565b80546001019055565b816001600160a01b0316612be58261128a565b6001600160a01b031614612c0b5760405162461bcd60e51b815260040161079990613d17565b612c1481612b77565b6001600160a01b0382166000908152600760205260409020612c3590612bb2565b600081815260066020908152604080832080546001600160a01b0319169055600d9091529020546002600019600183161561010002019091160415612c8b576000818152600d60205260408120612c8b91612f95565b6000818152600a6020526040812080546001600160a01b031916815590612cb56001830182612f95565b612cc3600283016000612f95565b5060030180546001600160a01b031916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000612d25846001600160a01b0316612e77565b612d315750600161231c565b6000846001600160a01b031663150b7a02612d4a612214565b8887876040518563ffffffff1660e01b8152600401612d6c9493929190613c4e565b602060405180830381600087803b158015612d8657600080fd5b505af1158015612d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612dbe91908101906132ff565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b600081604051602001612def9190613b49565b6040516020818303038152906040528051906020012083604051602001612e169190613b49565b6040516020818303038152906040528051906020012014905092915050565b600061234083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612eae565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470811580159061231c5750141592915050565b60008184841115612ed25760405162461bcd60e51b81526004016107999190613cc6565b505050900390565b6040805160e08101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612f5857805160ff1916838001178555612f85565b82800160010185558215612f85579182015b82811115612f85578251825591602001919060010190612f6a565b50612f91929150612fd5565b5090565b50805460018160011615610100020316600290046000825580601f10612fbb5750611ef1565b601f016020900490600052602060002090810190611ef191905b61076f91905b80821115612f915760008155600101612fdb565b803561141381613f16565b803561141381613f2a565b805161141381613f2a565b803561141381613f33565b805161141381613f33565b600082601f83011261303757600080fd5b813561304a61304582613e4a565b613e23565b9150808252602083016020830185838301111561306657600080fd5b613071838284613ed4565b50505092915050565b60008083601f84011261308c57600080fd5b50813567ffffffffffffffff8111156130a457600080fd5b6020830191508360018202830111156130bc57600080fd5b9250929050565b803561141381613f3c565b803561141381613f45565b803561141381613f4e565b803561141381613f57565b60006020828403121561310157600080fd5b600061231c8484612fef565b6000806040838503121561312057600080fd5b600061312c8585612fef565b925050602061313d85828601612fef565b9150509250929050565b60008060006060848603121561315c57600080fd5b60006131688686612fef565b935050602061317986828701612fef565b925050604061318a868287016130ce565b9150509250925092565b600080600080608085870312156131aa57600080fd5b60006131b68787612fef565b94505060206131c787828801612fef565b93505060406131d8878288016130ce565b925050606085013567ffffffffffffffff8111156131f557600080fd5b61320187828801613026565b91505092959194509250565b6000806040838503121561322057600080fd5b600061322c8585612fef565b925050602061313d85828601612ffa565b60008060006040848603121561325257600080fd5b600061325e8686612fef565b935050602084013567ffffffffffffffff81111561327b57600080fd5b6132878682870161307a565b92509250509250925092565b600080604083850312156132a657600080fd5b60006132b28585612fef565b925050602061313d858286016130ce565b6000602082840312156132d557600080fd5b600061231c8484613005565b6000602082840312156132f357600080fd5b600061231c8484613010565b60006020828403121561331157600080fd5b600061231c848461301b565b600080600080600080600060e0888a03121561333857600080fd5b873567ffffffffffffffff81111561334f57600080fd5b61335b8a828b01613026565b975050602088013567ffffffffffffffff81111561337857600080fd5b6133848a828b01613026565b96505060406133958a828b016130e4565b95505060606133a68a828b016130e4565b94505060806133b78a828b016130e4565b93505060a06133c88a828b016130c3565b92505060c06133d98a828b016130d9565b91505092959891949750929550565b600080600080600080600080610100898b03121561340557600080fd5b883567ffffffffffffffff81111561341c57600080fd5b6134288b828c01613026565b985050602089013567ffffffffffffffff81111561344557600080fd5b6134518b828c01613026565b97505060406134628b828c016130e4565b96505060606134738b828c016130e4565b95505060806134848b828c016130e4565b94505060a06134958b828c016130c3565b93505060c06134a68b828c016130d9565b92505060e089013567ffffffffffffffff8111156134c357600080fd5b6134cf8b828c01613026565b9150509295985092959890939650565b6000602082840312156134f157600080fd5b600061231c84846130ce565b600061234083836135fc565b60006135158383613b21565b505060200190565b61352681613e85565b82525050565b600061353782613e78565b6135418185613e7c565b93508360208202850161355385613e72565b8060005b8581101561358d578484038952815161357085826134fd565b945061357b83613e72565b60209a909a0199925050600101613557565b5091979650505050505050565b60006135a582613e78565b6135af8185613e7c565b93506135ba83613e72565b8060005b838110156135e85781516135d28882613509565b97506135dd83613e72565b9250506001016135be565b509495945050505050565b61352681613e90565b600061360782613e78565b6136118185613e7c565b9350613621818560208601613ee0565b61362a81613f0c565b9093019392505050565b61352681613ec9565b600061364983856106d6565b9350613656838584613ed4565b50500190565b600061366782613e78565b61367181856106d6565b9350613681818560208601613ee0565b9290920192915050565b6000613698601483613e7c565b7f4d494e545f544f5f5a45524f5f41444452455353000000000000000000000000815260200192915050565b60006136d1602a83613e7c565b7f5452414e534645525f544f5f4e4f4e5f45524337323152454345495645525f4981526926a82622a6a2a72a22a960b11b602082015260400192915050565b600061371d601883613e7c565b7f5452414e534645525f544f5f5a45524f5f414444524553530000000000000000815260200192915050565b6000613756601983613e7c565b7f43414e4e4f545f51554552595f5a45524f5f4144445245535300000000000000815260200192915050565b600061378f601183613e7c565b7f554e415554484f52495a45445f4255524e000000000000000000000000000000815260200192915050565b60006137c8601583613e7c565b7f415050524f56414c5f49535f524544554e44414e540000000000000000000000815260200192915050565b6000613801600f83613e7c565b7f57495448445241575f4641494c45440000000000000000000000000000000000815260200192915050565b600061383a602383613e7c565b7f434f4e54454e545f49445f4e4f545f524547495354455245445f544f5f43414c8152622622a960e91b602082015260400192915050565b600061387f601a83613e7c565b7f43414c4c45525f43414e4e4f545f415050524f56455f53454c46000000000000815260200192915050565b60006138b8601583613e7c565b7f494e56414c49445f46454445524154494f4e5f49440000000000000000000000815260200192915050565b60006138f1601383613e7c565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b600061392a602183613e7c565b7f53544152545f54494d455f41465445525f41554354494f4e5f454e445f54494d8152604560f81b602082015260400192915050565b600061396d601983613e7c565b7f53544152545f54494d455f41465445525f454e445f54494d4500000000000000815260200192915050565b60006114136000836106d6565b60006139b3601183613e7c565b7f494e56414c49445f54494d455f534c4f54000000000000000000000000000000815260200192915050565b60006139ec601283613e7c565b7f4e4f4e5f4558495354454e545f544f4b454e0000000000000000000000000000815260200192915050565b6000613a25602583613e7c565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f5452414445528152645f524f4c4560d81b602082015260400192915050565b6000613a6c602583613e7c565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f4d494e5445528152645f524f4c4560d81b602082015260400192915050565b6000613ab3601583613e7c565b7f554e415554484f52495a45445f5452414e534645520000000000000000000000815260200192915050565b6000613aec601583613e7c565b7f43414c4c45525f4e4f545f415554484f52495a45440000000000000000000000815260200192915050565b61352681613ea2565b6135268161076f565b61352681613eb5565b61352681613ebe565b600061231c82848661363d565b6000612340828461365c565b600061141382613999565b60208101611413828461351d565b6101208101613b7d828c61351d565b613b8a602083018b61351d565b8181036040830152613b9c818a6135fc565b90508181036060830152613bb081896135fc565b9050613bbf6080830188613b33565b613bcc60a0830187613b33565b613bd960c0830186613b33565b613be660e0830185613b18565b613bf4610100830184613b2a565b9a9950505050505050505050565b60a08101613c10828861351d565b613c1d602083018761351d565b613c2a6040830186613b21565b613c37606083018561351d565b613c44608083018461351d565b9695505050505050565b60808101613c5c828761351d565b613c69602083018661351d565b613c766040830185613b21565b8181036060830152613c4481846135fc565b60208082528101612340818461352c565b60208082528101612340818461359a565b6020810161141382846135f3565b602081016114138284613634565b6020808252810161234081846135fc565b602080825281016114138161368b565b60208082528101611413816136c4565b6020808252810161141381613710565b6020808252810161141381613749565b6020808252810161141381613782565b60208082528101611413816137bb565b60208082528101611413816137f4565b602080825281016114138161382d565b6020808252810161141381613872565b60208082528101611413816138ab565b60208082528101611413816138e4565b602080825281016114138161391d565b6020808252810161141381613960565b60208082528101611413816139a6565b60208082528101611413816139df565b6020808252810161141381613a18565b6020808252810161141381613a5f565b6020808252810161141381613aa6565b6020808252810161141381613adf565b602081016114138284613b21565b602081016114138284613b2a565b60405181810167ffffffffffffffff81118282101715613e4257600080fd5b604052919050565b600067ffffffffffffffff821115613e6157600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b600061141382613ea9565b151590565b6001600160e01b03191690565b61ffff1690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b600061141382613e85565b82818337506000910152565b60005b83811015613efb578181015183820152602001613ee3565b838111156128ff5750506000910152565b601f01601f191690565b613f1f81613e85565b8114611ef157600080fd5b613f1f81613e90565b613f1f81613e95565b613f1f81613ea2565b613f1f8161076f565b613f1f81613eb5565b613f1f81613ebe56fea365627a7a723158205c43843d0b715256557a339db906a41bbbd8ff026fbca0e715b2e0e7382758456c6578706572696d656e74616cf564736f6c634300050b0040",
  "deployedBytecode": "0x6080604052600436106102255760003560e01c806363e1a838116101235780639ce7dca3116100ab578063c87b56dd1161006f578063c87b56dd14610603578063e2b375a914610623578063e5c2492414610643578063e982d5a914610678578063e985e9c51461069857610225565b80639ce7dca314610570578063a22cb46514610583578063a4ede128146105a3578063b88d4fde146105c3578063c57a8825146105e357610225565b80637b103999116100f25780637b103999146104e457806384017e52146105065780638456cb59146105265780638462151c1461053b57806395d89b411461055b57610225565b806363e1a8381461046f57806370a082311461048257806373688914146104a25780637affcb9a146104b757610225565b80632a0c7799116101b157806344c140d01161017557806344c140d0146103fd57806352709725146104105780635c975abb146104255780635fd8c7101461043a5780636352211e1461044f57610225565b80632a0c7799146103685780633d857187146103955780633f4ba83a146103a857806342842e0e146103bd57806342966c68146103dd57610225565b806313966db5116101f857806313966db5146102d1578063180b9e3f146102f357806318160ddd146103205780631c7029811461033557806323b872dd1461034857610225565b806301ffc9a71461022a57806306fdde0314610260578063081812fc14610282578063095ea7b3146102af575b600080fd5b34801561023657600080fd5b5061024a6102453660046132e1565b6106b8565b6040516102579190613caa565b60405180910390f35b34801561026c57600080fd5b506102756106db565b6040516102579190613cc6565b34801561028e57600080fd5b506102a261029d3660046134df565b610772565b6040516102579190613b60565b3480156102bb57600080fd5b506102cf6102ca366004613293565b6107be565b005b3480156102dd57600080fd5b506102e661095b565b6040516102579190613e07565b3480156102ff57600080fd5b5061031361030e3660046134df565b610961565b6040516102579190613e15565b34801561032c57600080fd5b506102e6610979565b6102e661034336600461331d565b61098a565b34801561035457600080fd5b506102cf610363366004613147565b610af5565b34801561037457600080fd5b506103886103833660046130ef565b610c11565b6040516102579190613c99565b6102e66103a33660046133e8565b610d19565b3480156103b457600080fd5b506102cf610e8f565b3480156103c957600080fd5b506102cf6103d8366004613147565b610f13565b3480156103e957600080fd5b506102cf6103f83660046134df565b610f33565b6102e661040b3660046133e8565b611053565b34801561041c57600080fd5b506102a261118f565b34801561043157600080fd5b5061024a61119e565b34801561044657600080fd5b506102cf6111ae565b34801561045b57600080fd5b506102a261046a3660046134df565b61128a565b6102e661047d36600461331d565b6112a5565b34801561048e57600080fd5b506102e661049d3660046130ef565b6113ca565b3480156104ae57600080fd5b506102a2611419565b3480156104c357600080fd5b506104d76104d236600461323d565b611428565b6040516102579190613c88565b3480156104f057600080fd5b506104f96115c8565b6040516102579190613cb8565b34801561051257600080fd5b506102cf6105213660046134df565b6115d7565b34801561053257600080fd5b506102cf61163b565b34801561054757600080fd5b506103886105563660046130ef565b6116c6565b34801561056757600080fd5b50610275611780565b6102e661057e3660046133e8565b6117e1565b34801561058f57600080fd5b506102cf61059e36600461320d565b611906565b3480156105af57600080fd5b506104d76105be3660046130ef565b611a8c565b3480156105cf57600080fd5b506102cf6105de366004613194565b611c02565b3480156105ef57600080fd5b506102cf6105fe3660046130ef565b611d20565b34801561060f57600080fd5b5061027561061e3660046134df565b611da1565b34801561062f57600080fd5b506102cf61063e3660046130ef565b611e67565b34801561064f57600080fd5b5061066361065e3660046134df565b611ef4565b60405161025799989796959493929190613b6e565b34801561068457600080fd5b506102cf6106933660046130ef565b61213b565b3480156106a457600080fd5b5061024a6106b336600461310d565b6121c9565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107675780601f1061073c57610100808354040283529160200191610767565b820191906000526020600020905b81548152906001019060200180831161074a57829003601f168201915b505050505090505b90565b600061077d826121f7565b6107a25760405162461bcd60e51b815260040161079990613db7565b60405180910390fd5b506000908152600e60205260409020546001600160a01b031690565b6004546001600160a01b0316634039ad0d6107d7612214565b6040518263ffffffff1660e01b81526004016107f39190613b60565b60206040518083038186803b15801561080b57600080fd5b505afa15801561081f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061084391908101906132c3565b61085f5760405162461bcd60e51b815260040161079990613dc7565b600254600160a01b900460ff161561087657600080fd5b60006108818261128a565b9050806001600160a01b0316836001600160a01b031614156108b55760405162461bcd60e51b815260040161079990613d27565b806001600160a01b03166108c7612214565b6001600160a01b031614806108e357506108e3816106b3612214565b6108ff5760405162461bcd60e51b815260040161079990613df7565b6000828152600e602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b60006109856005612218565b905090565b6004546000906001600160a01b031663aa271e1a6109a6612214565b6040518263ffffffff1660e01b81526004016109c29190613b60565b60206040518083038186803b1580156109da57600080fd5b505afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a1291908101906132c3565b610a2e5760405162461bcd60e51b815260040161079990613dd7565b600254600160a01b900460ff1615610a4557600080fd5b600354341015610a5457600080fd5b60008263ffffffff1611610a7a5760405162461bcd60e51b815260040161079990613d67565b610a868887878761221c565b610aa25760405162461bcd60e51b815260040161079990613da7565b6000610ab4610aaf612214565b612324565b9050610ac5818a8a8a8a8a8a612347565b6000818152600960205260409020805463ffffffff851663ffffffff199091161790559050979650505050505050565b600254600160a01b900460ff1615610b0c57600080fd5b610b1d610b17612214565b826125dd565b610b395760405162461bcd60e51b815260040161079990613de7565b6000818152600a60205260408120546001600160a01b031690610b5b8361128a565b600480546040516354a58b9b60e11b81529293506001600160a01b03169163a94b173691610b93918991899189918991899101613c02565b60206040518083038186803b158015610bab57600080fd5b505afa158015610bbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610be391908101906132c3565b610bff5760405162461bcd60e51b815260040161079990613de7565b610c0a85858561265a565b5050505050565b60606001600160a01b038216610c395760405162461bcd60e51b815260040161079990613d07565b6001600160a01b0382166000908152600860205260408120610c5a90612218565b905080610c7c5760408051600080825260208201909252905b509150506106d6565b606081604051908082528060200260200182016040528015610ca8578160200160208202803883390190505b5090506000610cb5610979565b9050600060015b828111610d0c576000818152600a60205260409020546001600160a01b0388811691161415610d045780848381518110610cf257fe5b60209081029190910101526001909101905b600101610cbc565b83955050505050506106d6565b6004546000906001600160a01b031663aa271e1a610d35612214565b6040518263ffffffff1660e01b8152600401610d519190613b60565b60206040518083038186803b158015610d6957600080fd5b505afa158015610d7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610da191908101906132c3565b610dbd5760405162461bcd60e51b815260040161079990613dd7565b600254600160a01b900460ff1615610dd457600080fd5b600354341015610de357600080fd5b60008363ffffffff1611610e095760405162461bcd60e51b815260040161079990613d67565b610e158988888861221c565b610e315760405162461bcd60e51b815260040161079990613da7565b6000610e43610e3e612214565b612760565b9050610e54818b8b8b8b8b8b612347565b610e5e818461283f565b6000818152600960205260409020805463ffffffff861663ffffffff19909116179055905098975050505050505050565b6001546001600160a01b0316610ea3612214565b6001600160a01b03161480610ed257506002546001600160a01b0316610ec7612214565b6001600160a01b0316145b610eee5760405162461bcd60e51b815260040161079990613d77565b600254600160a01b900460ff16610f0457600080fd5b6002805460ff60a01b19169055565b610f2e83838360405180602001604052806000815250611c02565b505050565b600254600160a01b900460ff1615610f4a57600080fd5b6000610f558261128a565b6000838152600a60205260409020549091506001600160a01b0390811690821681141561101d576004546001600160a01b031663aa271e1a610f95612214565b6040518263ffffffff1660e01b8152600401610fb19190613b60565b60206040518083038186803b158015610fc957600080fd5b505afa158015610fdd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061100191908101906132c3565b61101d5760405162461bcd60e51b815260040161079990613d17565b61102e611028612214565b846125dd565b61104a5760405162461bcd60e51b815260040161079990613d17565b610f2e83612883565b6004546000906001600160a01b031663aa271e1a61106f612214565b6040518263ffffffff1660e01b815260040161108b9190613b60565b60206040518083038186803b1580156110a357600080fd5b505afa1580156110b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110db91908101906132c3565b6110f75760405162461bcd60e51b815260040161079990613dd7565b600254600160a01b900460ff161561110e57600080fd5b60035434101561111d57600080fd5b60008363ffffffff16116111435760405162461bcd60e51b815260040161079990613d67565b61114f8988888861221c565b61116b5760405162461bcd60e51b815260040161079990613da7565b600061117e611178612214565b84612895565b9050610e5e818b8b8b8b8b8b612347565b6002546001600160a01b031681565b600254600160a01b900460ff1681565b6001546001600160a01b03166111c2612214565b6001600160a01b031614806111f157506002546001600160a01b03166111e6612214565b6001600160a01b0316145b61120d5760405162461bcd60e51b815260040161079990613d77565b6040513031906000903390839061122390613b55565b60006040518083038185875af1925050503d8060008114611260576040519150601f19603f3d011682016040523d82523d6000602084013e611265565b606091505b50509050806112865760405162461bcd60e51b815260040161079990613d37565b5050565b6000908152600660205260409020546001600160a01b031690565b6004546000906001600160a01b031663aa271e1a6112c1612214565b6040518263ffffffff1660e01b81526004016112dd9190613b60565b60206040518083038186803b1580156112f557600080fd5b505afa158015611309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061132d91908101906132c3565b6113495760405162461bcd60e51b815260040161079990613dd7565b600254600160a01b900460ff161561136057600080fd5b60035434101561136f57600080fd5b60008263ffffffff16116113955760405162461bcd60e51b815260040161079990613d67565b6113a18887878761221c565b6113bd5760405162461bcd60e51b815260040161079990613da7565b6000610ab4610e3e612214565b60006001600160a01b0382166113f25760405162461bcd60e51b815260040161079990613d07565b6001600160a01b038216600090815260076020526040902061141390612218565b92915050565b6001546001600160a01b031681565b6001600160a01b0383166000908152600b602052604090819020905160609182916114569086908690613b3c565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561153b57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156115235780601f106114f857610100808354040283529160200191611523565b820191906000526020600020905b81548152906001019060200180831161150657829003601f168201915b50505050508152505081526020019060010190611484565b5050505090506060815160405190808252806020026020018201604052801561157857816020015b60608152602001906001900390816115635790505b50905060005b82518110156115be5782818151811061159357fe5b6020026020010151600001518282815181106115ab57fe5b602090810291909101015260010161157e565b5095945050505050565b6004546001600160a01b031681565b6001546001600160a01b03166115eb612214565b6001600160a01b0316148061161a57506002546001600160a01b031661160f612214565b6001600160a01b0316145b6116365760405162461bcd60e51b815260040161079990613d77565b600355565b6001546001600160a01b031661164f612214565b6001600160a01b0316148061167e57506002546001600160a01b0316611673612214565b6001600160a01b0316145b61169a5760405162461bcd60e51b815260040161079990613d77565b600254600160a01b900460ff16156116b157600080fd5b6002805460ff60a01b1916600160a01b179055565b606060006116d3836113ca565b9050806116f0576040805160008082526020820190925290610c73565b60608160405190808252806020026020018201604052801561171c578160200160208202803883390190505b5090506000611729610979565b9050600060015b828111610d0c576000818152600660205260409020546001600160a01b0388811691161415611778578084838151811061176657fe5b60209081029190910101526001909101905b600101611730565b60118054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107675780601f1061073c57610100808354040283529160200191610767565b6004546000906001600160a01b031663aa271e1a6117fd612214565b6040518263ffffffff1660e01b81526004016118199190613b60565b60206040518083038186803b15801561183157600080fd5b505afa158015611845573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061186991908101906132c3565b6118855760405162461bcd60e51b815260040161079990613dd7565b600254600160a01b900460ff161561189c57600080fd5b6003543410156118ab57600080fd5b60008363ffffffff16116118d15760405162461bcd60e51b815260040161079990613d67565b6118dd8988888861221c565b6118f95760405162461bcd60e51b815260040161079990613da7565b6000610e43610aaf612214565b6004546001600160a01b0316634039ad0d61191f612214565b6040518263ffffffff1660e01b815260040161193b9190613b60565b60206040518083038186803b15801561195357600080fd5b505afa158015611967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061198b91908101906132c3565b6119a75760405162461bcd60e51b815260040161079990613dc7565b600254600160a01b900460ff16156119be57600080fd5b6119c6612214565b6001600160a01b0316826001600160a01b031614156119f75760405162461bcd60e51b815260040161079990613d57565b80600f6000611a04612214565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611a48612214565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611a809190613caa565b60405180910390a35050565b6001600160a01b0381166000908152600c602090815260408083208054825181850281018501909352808352606094859484015b82821015611b7757600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015611b5f5780601f10611b3457610100808354040283529160200191611b5f565b820191906000526020600020905b815481529060010190602001808311611b4257829003601f168201915b50505050508152505081526020019060010190611ac0565b50505050905060608151604051908082528060200260200182016040528015611bb457816020015b6060815260200190600190039081611b9f5790505b50905060005b8251811015611bfa57828181518110611bcf57fe5b602002602001015160000151828281518110611be757fe5b6020908102919091010152600101611bba565b509392505050565b600254600160a01b900460ff1615611c1957600080fd5b611c2a611c24612214565b836125dd565b611c465760405162461bcd60e51b815260040161079990613de7565b6000828152600a60205260408120546001600160a01b031690611c688461128a565b600480546040516354a58b9b60e11b81529293506001600160a01b03169163a94b173691611ca0918a918a918a918991899101613c02565b60206040518083038186803b158015611cb857600080fd5b505afa158015611ccc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611cf091908101906132c3565b611d0c5760405162461bcd60e51b815260040161079990613de7565b611d18868686866128cc565b505050505050565b6001546001600160a01b0316611d34612214565b6001600160a01b03161480611d6357506002546001600160a01b0316611d58612214565b6001600160a01b0316145b611d7f5760405162461bcd60e51b815260040161079990613d77565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6060611dac826121f7565b611dc85760405162461bcd60e51b815260040161079990613db7565b6000828152600d602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015611e5b5780601f10611e3057610100808354040283529160200191611e5b565b820191906000526020600020905b815481529060010190602001808311611e3e57829003601f168201915b50505050509050919050565b6001546001600160a01b0316611e7b612214565b6001600160a01b03161480611eaa57506002546001600160a01b0316611e9f612214565b6001600160a01b0316145b611ec65760405162461bcd60e51b815260040161079990613d77565b6001600160a01b03811615611ef157600280546001600160a01b0319166001600160a01b0383161790555b50565b6000806060806000806000806000611f0b8a6121f7565b611f275760405162461bcd60e51b815260040161079990613db7565b611f2f612eda565b60008b8152600a6020908152604091829020825160e08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f8101869004860283018601909652858252919492938581019391929190830182828015611fe75780601f10611fbc57610100808354040283529160200191611fe7565b820191906000526020600020905b815481529060010190602001808311611fca57829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156120795780601f1061204e57610100808354040283529160200191612079565b820191906000526020600020905b81548152906001019060200180831161205c57829003601f168201915b50505091835250506003919091015465ffffffffffff808216602080850191909152660100000000000083048216604080860191909152600160601b84049092166060850152600160901b90920461ffff1660809093019290925260008e815260099091522054815191925063ffffffff16906120f58d61128a565b83602001518460400151856060015186608001518760a001518860c00151888696508595509a509a509a509a509a509a509a509a509a5050509193959799909294969850565b6001546001600160a01b031661214f612214565b6001600160a01b0316148061217e57506002546001600160a01b0316612173612214565b6001600160a01b0316145b61219a5760405162461bcd60e51b815260040161079990613d77565b6001600160a01b03811615611ef157600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600f6020908152604080832093909416825291909152205460ff1690565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b600480546040516323dd3a3d60e11b81526000926001600160a01b03909216916347ba747a9161224e91899101613cc6565b60206040518083038186803b15801561226657600080fd5b505afa15801561227a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061229e91908101906132c3565b6122ba5760405162461bcd60e51b815260040161079990613d47565b8165ffffffffffff168465ffffffffffff16116122e95760405162461bcd60e51b815260040161079990613d87565b8365ffffffffffff168365ffffffffffff16116123185760405162461bcd60e51b815260040161079990613d97565b5060015b949350505050565b6000806123408360405180602001604052806000815250612895565b9392505050565b612350876121f7565b61236c5760405162461bcd60e51b815260040161079990613db7565b612374612eda565b6040518060e00160405280612387612214565b6001600160a01b03908116825260208083018b905260408084018b905265ffffffffffff8a811660608601528981166080860152881660a085015261ffff871660c09094019390935260008c8152600a825292909220835181546001600160a01b03191692169190911781558282015180519394508493919261241292600185019290910190612f17565b506040820151805161242e916002840191602090910190612f17565b50606082015160039091018054608084015160a085015160c09095015161ffff16600160901b0273ffff0000000000000000000000000000000000001965ffffffffffff968716600160601b0271ffffffffffff000000000000000000000000199388166601000000000000026bffffffffffff000000000000199890971665ffffffffffff199095169490941796909616949094171617929092161790556124d687612905565b61253f57600c60006124e6612214565b6001600160a01b031681526020808201929092526040908101600090812082518085019093528a835280546001810180835591835291849020835180519295919093019261253a9284929190910190612f17565b505050505b6125498787612a30565b6125d357600b6000612559612214565b6001600160a01b03166001600160a01b03168152602001908152602001600020876040516125879190613b49565b9081526040805191829003602090810183208382019092528883528154600181018084556000938452928290208451805194959491909201926125ce928492910190612f17565b505050505b5050505050505050565b60006125e8826121f7565b6126045760405162461bcd60e51b815260040161079990613db7565b600061260f8361128a565b9050806001600160a01b0316846001600160a01b0316148061264a5750836001600160a01b031661263f84610772565b6001600160a01b0316145b8061231c575061231c81856121c9565b826001600160a01b031661266d8261128a565b6001600160a01b0316146126935760405162461bcd60e51b815260040161079990613de7565b6001600160a01b0382166126b95760405162461bcd60e51b815260040161079990613cf7565b6126c281612b77565b6001600160a01b03831660009081526007602052604090206126e390612bb2565b6001600160a01b038216600090815260076020526040902061270490612bc9565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006001600160a01b0382166127885760405162461bcd60e51b815260040161079990613cd7565b6127926005612bc9565b600061279e6005612218565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b0389169081179091558352600790915290209091506127e090612bc9565b6001600160a01b038316600090815260086020526040902061280190612bc9565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b612848826121f7565b6128645760405162461bcd60e51b815260040161079990613db7565b6000828152600d602090815260409091208251610f2e92840190612f17565b611ef161288f8261128a565b82612bd2565b6000806128a184612760565b90506128b06000858386612d11565b6123405760405162461bcd60e51b815260040161079990613ce7565b6128d784848461265a565b6128e384848484612d11565b6128ff5760405162461bcd60e51b815260040161079990613ce7565b50505050565b336000908152600c602090815260408083208054825181850281018501909352808352606093859084015b828210156129e757600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156129cf5780601f106129a4576101008083540402835291602001916129cf565b820191906000526020600020905b8154815290600101906020018083116129b257829003601f168201915b50505050508152505081526020019060010190612930565b5092935060009250829150505b8251811015611bfa57612a1e85848381518110612a0d57fe5b602002602001015160000151612ddc565b15612a2857600191505b6001016129f4565b336000908152600b6020526040808220905160609190612a51908690613b49565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015612b3657600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612b1e5780601f10612af357610100808354040283529160200191612b1e565b820191906000526020600020905b815481529060010190602001808311612b0157829003601f168201915b50505050508152505081526020019060010190612a7f565b5092935060009250829150505b8251811015612b6e57612b5c85848381518110612a0d57fe5b15612b6657600191505b600101612b43565b50949350505050565b6000818152600e60205260409020546001600160a01b031615611ef1576000908152600e6020526040902080546001600160a01b0319169055565b8054612bc590600163ffffffff612e3516565b9055565b80546001019055565b816001600160a01b0316612be58261128a565b6001600160a01b031614612c0b5760405162461bcd60e51b815260040161079990613d17565b612c1481612b77565b6001600160a01b0382166000908152600760205260409020612c3590612bb2565b600081815260066020908152604080832080546001600160a01b0319169055600d9091529020546002600019600183161561010002019091160415612c8b576000818152600d60205260408120612c8b91612f95565b6000818152600a6020526040812080546001600160a01b031916815590612cb56001830182612f95565b612cc3600283016000612f95565b5060030180546001600160a01b031916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000612d25846001600160a01b0316612e77565b612d315750600161231c565b6000846001600160a01b031663150b7a02612d4a612214565b8887876040518563ffffffff1660e01b8152600401612d6c9493929190613c4e565b602060405180830381600087803b158015612d8657600080fd5b505af1158015612d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612dbe91908101906132ff565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b600081604051602001612def9190613b49565b6040516020818303038152906040528051906020012083604051602001612e169190613b49565b6040516020818303038152906040528051906020012014905092915050565b600061234083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612eae565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470811580159061231c5750141592915050565b60008184841115612ed25760405162461bcd60e51b81526004016107999190613cc6565b505050900390565b6040805160e08101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612f5857805160ff1916838001178555612f85565b82800160010185558215612f85579182015b82811115612f85578251825591602001919060010190612f6a565b50612f91929150612fd5565b5090565b50805460018160011615610100020316600290046000825580601f10612fbb5750611ef1565b601f016020900490600052602060002090810190611ef191905b61076f91905b80821115612f915760008155600101612fdb565b803561141381613f16565b803561141381613f2a565b805161141381613f2a565b803561141381613f33565b805161141381613f33565b600082601f83011261303757600080fd5b813561304a61304582613e4a565b613e23565b9150808252602083016020830185838301111561306657600080fd5b613071838284613ed4565b50505092915050565b60008083601f84011261308c57600080fd5b50813567ffffffffffffffff8111156130a457600080fd5b6020830191508360018202830111156130bc57600080fd5b9250929050565b803561141381613f3c565b803561141381613f45565b803561141381613f4e565b803561141381613f57565b60006020828403121561310157600080fd5b600061231c8484612fef565b6000806040838503121561312057600080fd5b600061312c8585612fef565b925050602061313d85828601612fef565b9150509250929050565b60008060006060848603121561315c57600080fd5b60006131688686612fef565b935050602061317986828701612fef565b925050604061318a868287016130ce565b9150509250925092565b600080600080608085870312156131aa57600080fd5b60006131b68787612fef565b94505060206131c787828801612fef565b93505060406131d8878288016130ce565b925050606085013567ffffffffffffffff8111156131f557600080fd5b61320187828801613026565b91505092959194509250565b6000806040838503121561322057600080fd5b600061322c8585612fef565b925050602061313d85828601612ffa565b60008060006040848603121561325257600080fd5b600061325e8686612fef565b935050602084013567ffffffffffffffff81111561327b57600080fd5b6132878682870161307a565b92509250509250925092565b600080604083850312156132a657600080fd5b60006132b28585612fef565b925050602061313d858286016130ce565b6000602082840312156132d557600080fd5b600061231c8484613005565b6000602082840312156132f357600080fd5b600061231c8484613010565b60006020828403121561331157600080fd5b600061231c848461301b565b600080600080600080600060e0888a03121561333857600080fd5b873567ffffffffffffffff81111561334f57600080fd5b61335b8a828b01613026565b975050602088013567ffffffffffffffff81111561337857600080fd5b6133848a828b01613026565b96505060406133958a828b016130e4565b95505060606133a68a828b016130e4565b94505060806133b78a828b016130e4565b93505060a06133c88a828b016130c3565b92505060c06133d98a828b016130d9565b91505092959891949750929550565b600080600080600080600080610100898b03121561340557600080fd5b883567ffffffffffffffff81111561341c57600080fd5b6134288b828c01613026565b985050602089013567ffffffffffffffff81111561344557600080fd5b6134518b828c01613026565b97505060406134628b828c016130e4565b96505060606134738b828c016130e4565b95505060806134848b828c016130e4565b94505060a06134958b828c016130c3565b93505060c06134a68b828c016130d9565b92505060e089013567ffffffffffffffff8111156134c357600080fd5b6134cf8b828c01613026565b9150509295985092959890939650565b6000602082840312156134f157600080fd5b600061231c84846130ce565b600061234083836135fc565b60006135158383613b21565b505060200190565b61352681613e85565b82525050565b600061353782613e78565b6135418185613e7c565b93508360208202850161355385613e72565b8060005b8581101561358d578484038952815161357085826134fd565b945061357b83613e72565b60209a909a0199925050600101613557565b5091979650505050505050565b60006135a582613e78565b6135af8185613e7c565b93506135ba83613e72565b8060005b838110156135e85781516135d28882613509565b97506135dd83613e72565b9250506001016135be565b509495945050505050565b61352681613e90565b600061360782613e78565b6136118185613e7c565b9350613621818560208601613ee0565b61362a81613f0c565b9093019392505050565b61352681613ec9565b600061364983856106d6565b9350613656838584613ed4565b50500190565b600061366782613e78565b61367181856106d6565b9350613681818560208601613ee0565b9290920192915050565b6000613698601483613e7c565b7f4d494e545f544f5f5a45524f5f41444452455353000000000000000000000000815260200192915050565b60006136d1602a83613e7c565b7f5452414e534645525f544f5f4e4f4e5f45524337323152454345495645525f4981526926a82622a6a2a72a22a960b11b602082015260400192915050565b600061371d601883613e7c565b7f5452414e534645525f544f5f5a45524f5f414444524553530000000000000000815260200192915050565b6000613756601983613e7c565b7f43414e4e4f545f51554552595f5a45524f5f4144445245535300000000000000815260200192915050565b600061378f601183613e7c565b7f554e415554484f52495a45445f4255524e000000000000000000000000000000815260200192915050565b60006137c8601583613e7c565b7f415050524f56414c5f49535f524544554e44414e540000000000000000000000815260200192915050565b6000613801600f83613e7c565b7f57495448445241575f4641494c45440000000000000000000000000000000000815260200192915050565b600061383a602383613e7c565b7f434f4e54454e545f49445f4e4f545f524547495354455245445f544f5f43414c8152622622a960e91b602082015260400192915050565b600061387f601a83613e7c565b7f43414c4c45525f43414e4e4f545f415050524f56455f53454c46000000000000815260200192915050565b60006138b8601583613e7c565b7f494e56414c49445f46454445524154494f4e5f49440000000000000000000000815260200192915050565b60006138f1601383613e7c565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b600061392a602183613e7c565b7f53544152545f54494d455f41465445525f41554354494f4e5f454e445f54494d8152604560f81b602082015260400192915050565b600061396d601983613e7c565b7f53544152545f54494d455f41465445525f454e445f54494d4500000000000000815260200192915050565b60006114136000836106d6565b60006139b3601183613e7c565b7f494e56414c49445f54494d455f534c4f54000000000000000000000000000000815260200192915050565b60006139ec601283613e7c565b7f4e4f4e5f4558495354454e545f544f4b454e0000000000000000000000000000815260200192915050565b6000613a25602583613e7c565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f5452414445528152645f524f4c4560d81b602082015260400192915050565b6000613a6c602583613e7c565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f4d494e5445528152645f524f4c4560d81b602082015260400192915050565b6000613ab3601583613e7c565b7f554e415554484f52495a45445f5452414e534645520000000000000000000000815260200192915050565b6000613aec601583613e7c565b7f43414c4c45525f4e4f545f415554484f52495a45440000000000000000000000815260200192915050565b61352681613ea2565b6135268161076f565b61352681613eb5565b61352681613ebe565b600061231c82848661363d565b6000612340828461365c565b600061141382613999565b60208101611413828461351d565b6101208101613b7d828c61351d565b613b8a602083018b61351d565b8181036040830152613b9c818a6135fc565b90508181036060830152613bb081896135fc565b9050613bbf6080830188613b33565b613bcc60a0830187613b33565b613bd960c0830186613b33565b613be660e0830185613b18565b613bf4610100830184613b2a565b9a9950505050505050505050565b60a08101613c10828861351d565b613c1d602083018761351d565b613c2a6040830186613b21565b613c37606083018561351d565b613c44608083018461351d565b9695505050505050565b60808101613c5c828761351d565b613c69602083018661351d565b613c766040830185613b21565b8181036060830152613c4481846135fc565b60208082528101612340818461352c565b60208082528101612340818461359a565b6020810161141382846135f3565b602081016114138284613634565b6020808252810161234081846135fc565b602080825281016114138161368b565b60208082528101611413816136c4565b6020808252810161141381613710565b6020808252810161141381613749565b6020808252810161141381613782565b60208082528101611413816137bb565b60208082528101611413816137f4565b602080825281016114138161382d565b6020808252810161141381613872565b60208082528101611413816138ab565b60208082528101611413816138e4565b602080825281016114138161391d565b6020808252810161141381613960565b60208082528101611413816139a6565b60208082528101611413816139df565b6020808252810161141381613a18565b6020808252810161141381613a5f565b6020808252810161141381613aa6565b6020808252810161141381613adf565b602081016114138284613b21565b602081016114138284613b2a565b60405181810167ffffffffffffffff81118282101715613e4257600080fd5b604052919050565b600067ffffffffffffffff821115613e6157600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b600061141382613ea9565b151590565b6001600160e01b03191690565b61ffff1690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b600061141382613e85565b82818337506000910152565b60005b83811015613efb578181015183820152602001613ee3565b838111156128ff5750506000910152565b601f01601f191690565b613f1f81613e85565b8114611ef157600080fd5b613f1f81613e90565b613f1f81613e95565b613f1f81613ea2565b613f1f8161076f565b613f1f81613eb5565b613f1f81613ebe56fea365627a7a723158205c43843d0b715256557a339db906a41bbbd8ff026fbca0e715b2e0e7382758456c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "925:1239:8:-;;;1440:26:3;;;-1:-1:-1;;;;1440:26:3;;;1579:15;1554:40;;1441:336:8;5:2:-1;;;;30:1;27;20:12;5:2;1441:336:8;;;;;;;;;;;;;;;;;;;;;720:40:2;739:20;-1:-1:-1;;;;;720:18:2;:40;:::i;:::-;5989::3;6008:20;-1:-1:-1;;;;;5989:18:3;:40;:::i;:::-;6109:12;-1:-1:-1;;;;;6109:10:3;:12;:::i;:::-;6100:6;:21;;-1:-1:-1;;;;;;6100:21:3;-1:-1:-1;;;;;6100:21:3;;;;;;;;;;6140:12;:10;:12::i;:::-;6131:6;:21;;-1:-1:-1;;;;;;6131:21:3;-1:-1:-1;;;;;6131:21:3;;;;;;;;;;1539:12:8;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1561:16:8;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1665:49:8;1684:29;-1:-1:-1;;;;;1665:18:8;:49;:::i;:::-;1725:44;1753:15;1725:27;;;;;:44;;:::i;:::-;1441:336;;;925:1239;;1444:190:2;1519:25;;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1587:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1587:40:2;1623:4;1587:40;;;1444:190::o;6626:90:3:-;6698:10;6626:90;;:::o;7952:144::-;7207:6;;-1:-1:-1;;;;;7207:6:3;7191:12;-1:-1:-1;;;;;7191:10:3;:12;:::i;:::-;-1:-1:-1;;;;;7191:22:3;;7190:52;;;-1:-1:-1;7235:6:3;;-1:-1:-1;;;;;7235:6:3;7219:12;-1:-1:-1;;;;;7219:10:3;:12;:::i;:::-;-1:-1:-1;;;;;7219:22:3;;7190:52;7169:118;;;;;;;;;;;;;;8050:8;:39;;-1:-1:-1;;;;;;8050:39:3;-1:-1:-1;;;;;8050:39:3;;;;;;;;;;7952:144::o;925:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;925:1239:8;;;-1:-1:-1;925:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;819:24;;-1:-1;;;;;852:30;;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;-1:-1;;;;;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1600:66;1580:87;;1695:2;1686:12;;1486:218;-1:-1;;1486:218;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1973:66;1953:87;;2068:2;2059:12;;1859:218;-1:-1;;1859:218;2085:407;2276:2;2290:47;;;2261:18;;2351:131;2261:18;2351:131;;2499:407;2690:2;2704:47;;;2675:18;;2765:131;2675:18;2765:131;;2913:256;2975:2;2969:9;3001:17;;;-1:-1;;;;;3061:34;;3097:22;;;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3149;3142:22;2953:216;;-1:-1;2953:216;3176:322;;-1:-1;;;;;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;-1:-1;3483:4;3419;3396:17;;;;-1:-1;;3392:33;3473:15;;3243:255;3506:163;3609:19;;;3658:4;3649:14;;3602:67;3677:91;;-1:-1;;;;;3837:54;;3739:24;3820:76;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4057:11;;;4051:18;4038:11;;;4031:39;4012:2;4005:10;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;;925:1239:8;;;;;;",
  "deployedSourceMap": "925:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;917:133:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1882:83:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1882:83:8;;;:::i;:::-;;;;;;;;27498:210:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;27498:210:3;;;;;;;;:::i;:::-;;;;;;;;26717:496;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;26717:496:3;;;;;;;;:::i;:::-;;1554:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1554:40:3;;;:::i;:::-;;;;;;;;2432:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2432:54:3;;;;;;;;:::i;:::-;;;;;;;;24078:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24078:98:3;;;:::i;12010:814::-;;;;;;;;;:::i;29267:525::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;29267:525:3;;;;;;;;:::i;22971:973::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22971:973:3;;;;;;;;:::i;:::-;;;;;;;;11030:891;;;;;;;;;:::i;8886:78::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8886:78:3;;;:::i;30441:134::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;30441:134:3;;;;;;;;:::i;36488:476::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;36488:476:3;;;;;;;;:::i;12985:847::-;;;;;;;;;:::i;1329:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1329:21:3;;;:::i;1440:26::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1440:26:3;;;:::i;9029:305::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9029:305:3;;;:::i;24845:152::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;24845:152:3;;;;;;;;:::i;10084:806::-;;;;;;;;;:::i;24385:241::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;24385:241:3;;;;;;;;:::i;1302:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1302:21:3;;;:::i;22158:403::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22158:403:3;;;;;;;;:::i;:::-;;;;;;;;1772:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1772:32:3;;;:::i;:::-;;;;;;;;8189:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8189:105:3;;;;;;;;:::i;8730:78::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8730:78:3;;;:::i;25415:840::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25415:840:3;;;;;;;;:::i;2074:87:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2074:87:8;;;:::i;13935:899:3:-;;;;;;;;;:::i;28001:305::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28001:305:3;;;;;;;;:::i;21704:330::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;21704:330:3;;;;;;;;:::i;31297:558::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;31297:558:3;;;;;;;;:::i;7952:144::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7952:144:3;;;;;;;;:::i;17576:210::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;17576:210:3;;;;;;;;:::i;7630:169::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7630:169:3;;;;;;;;:::i;20421:863::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;20421:863:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7454:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7454:169:3;;;;;;;;:::i;28645:185::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28645:185:3;;;;;;;;:::i;917:133:2:-;-1:-1:-1;;;;;;1010:33:2;;987:4;1010:33;;;;;;;;;;;;;917:133;;;;:::o;1882:83:8:-;1953:5;1946:12;;;;;;;;-1:-1:-1;;1946:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1921:13;;1946:12;;1953:5;;1946:12;;1953:5;1946:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:83;;:::o;27498:210:3:-;27557:7;27598:16;27606:7;27598;:16::i;:::-;27577:81;;;;-1:-1:-1;;;27577:81:3;;;;;;;;;;;;;;;;;-1:-1:-1;27676:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;27676:24:3;;27498:210::o;26717:496::-;9855:8;;-1:-1:-1;;;;;9855:8:3;:17;9873:12;:10;:12::i;:::-;9855:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9855:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9855:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9855:31:3;;;;;;;;;9834:115;;;;-1:-1:-1;;;9834:115:3;;;;;;;;;8488:6;;-1:-1:-1;;;8488:6:3;;;;8487:7;8479:16;;;;;;26834:18;26855:16;26863:7;26855;:16::i;:::-;26834:37;;26909:10;-1:-1:-1;;;;;26903:16:3;:2;-1:-1:-1;;;;;26903:16:3;;;26882:84;;;;-1:-1:-1;;;26882:84:3;;;;;;;;;27014:10;-1:-1:-1;;;;;26998:26:3;:12;:10;:12::i;:::-;-1:-1:-1;;;;;26998:26:3;;:72;;;;27028:42;27045:10;27057:12;:10;:12::i;27028:42::-;26977:140;;;;-1:-1:-1;;;26977:140:3;;;;;;;;;27128:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;27128:29:3;-1:-1:-1;;;;;27128:29:3;;;;;;;;;27172:33;;27128:24;;27172:33;;;;;;;8505:1;26717:496;;:::o;1554:40::-;;;;:::o;2432:54::-;;;;;;;;;;;;;;;:::o;24078:98::-;24122:7;24149:19;:9;:17;:19::i;:::-;24142:26;;24078:98;:::o;12010:814::-;9565:8;;12327:7;;-1:-1:-1;;;;;9565:8:3;:17;9583:12;:10;:12::i;:::-;9565:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9565:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9565:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9565:31:3;;;;;;;;;9544:115;;;;-1:-1:-1;;;9544:115:3;;;;;;;;;8488:6;;-1:-1:-1;;;8488:6:3;;;;8487:7;8479:16;;;;;;12372:7;;12359:9;:20;;12351:29;;;;;;12414:1;12399:12;:16;;;12391:50;;;;-1:-1:-1;;;12391:50:3;;;;;;;;;12473:63;12490:9;12501;12512:7;12521:14;12473:16;:63::i;:::-;12452:127;;;;-1:-1:-1;;;12452:127:3;;;;;;;;;12590:15;12608:23;12618:12;:10;:12::i;:::-;12608:9;:23::i;:::-;12590:41;;12641:97;12659:7;12668:9;12679:12;12693:9;12704:7;12713:14;12729:8;12641:17;:97::i;:::-;12748:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;12748:43:3;;;;;;12768:7;-1:-1:-1;12010:814:3;;;;;;;;;:::o;29267:525::-;8488:6;;-1:-1:-1;;;8488:6:3;;;;8487:7;8479:16;;;;;;29405:41;29424:12;:10;:12::i;:::-;29438:7;29405:18;:41::i;:::-;29384:109;;;;-1:-1:-1;;;29384:109:3;;;;;;;;;29504:14;29521:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;29521:32:3;;29579:16;29538:7;29579;:16::i;:::-;29627:8;;;:67;;-1:-1:-1;;;29627:67:3;;29563:32;;-1:-1:-1;;;;;;29627:8:3;;:33;;:67;;29661:4;;29667:2;;29671:7;;29680:6;;29563:32;;29627:67;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29627:67:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29627:67:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;29627:67:3;;;;;;;;;29606:135;;;;-1:-1:-1;;;29606:135:3;;;;;;;;;29752:32;29766:4;29772:2;29776:7;29752:13;:32::i;:::-;8505:1;;29267:525;;;:::o;22971:973::-;23034:16;-1:-1:-1;;;;;23084:20:3;;23063:92;;;;-1:-1:-1;;;23063:92:3;;;;;;;;;-1:-1:-1;;;;;23187:26:3;;23166:18;23187:26;;;:18;:26;;;;;:36;;:34;:36::i;:::-;23166:57;-1:-1:-1;23237:15:3;23233:704;;23312:16;;;23326:1;23312:16;;;;;;;;;;;;23305:23;;;;;23233:704;23359:23;23399:10;23385:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;23385:25:3;;23359:51;;23424:19;23446:13;:11;:13::i;:::-;23424:35;-1:-1:-1;23473:19:3;23676:1;23661:238;23690:11;23679:7;:22;23661:238;;23736:25;;;;:16;:25;;;;;:32;-1:-1:-1;;;;;23736:42:3;;;:32;;:42;23732:153;;;23824:7;23802:6;23809:11;23802:19;;;;;;;;;;;;;;;;;:29;23853:13;;;;;23732:153;23703:9;;23661:238;;;23920:6;23913:13;;;;;;;;;11030:891;9565:8;;11387:7;;-1:-1:-1;;;;;9565:8:3;:17;9583:12;:10;:12::i;:::-;9565:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9565:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9565:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9565:31:3;;;;;;;;;9544:115;;;;-1:-1:-1;;;9544:115:3;;;;;;;;;8488:6;;-1:-1:-1;;;8488:6:3;;;;8487:7;8479:16;;;;;;11432:7;;11419:9;:20;;11411:29;;;;;;11474:1;11459:12;:16;;;11451:50;;;;-1:-1:-1;;;11451:50:3;;;;;;;;;11533:63;11550:9;11561;11572:7;11581:14;11533:16;:63::i;:::-;11512:127;;;;-1:-1:-1;;;11512:127:3;;;;;;;;;11650:15;11668:19;11674:12;:10;:12::i;:::-;11668:5;:19::i;:::-;11650:37;;11697:97;11715:7;11724:9;11735:12;11749:9;11760:7;11769:14;11785:8;11697:17;:97::i;:::-;11804:31;11817:7;11826:8;11804:12;:31::i;:::-;11845:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;11845:43:3;;;;;;11865:7;-1:-1:-1;11030:891:3;;;;;;;;;;:::o;8886:78::-;7207:6;;-1:-1:-1;;;;;7207:6:3;7191:12;:10;:12::i;:::-;-1:-1:-1;;;;;7191:22:3;;7190:52;;;-1:-1:-1;7235:6:3;;-1:-1:-1;;;;;7235:6:3;7219:12;:10;:12::i;:::-;-1:-1:-1;;;;;7219:22:3;;7190:52;7169:118;;;;-1:-1:-1;;;7169:118:3;;;;;;;;;8629:6;;-1:-1:-1;;;8629:6:3;;;;8621:15;;;;;;8943:6;:14;;-1:-1:-1;;;;8943:14:3;;;8886:78::o;30441:134::-;30528:39;30545:4;30551:2;30555:7;30528:39;;;;;;;;;;;;:16;:39::i;:::-;30441:134;;;:::o;36488:476::-;8488:6;;-1:-1:-1;;;8488:6:3;;;;8487:7;8479:16;;;;;;36551:18;36572:16;36580:7;36572;:16::i;:::-;36598:14;36615:25;;;:16;:25;;;;;:32;36551:37;;-1:-1:-1;;;;;;36615:32:3;;;;36662:20;;;;36658:158;;;36723:8;;-1:-1:-1;;;;;36723:8:3;:17;36741:12;:10;:12::i;:::-;36723:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36723:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36723:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;36723:31:3;;;;;;;;;36698:107;;;;-1:-1:-1;;;36698:107:3;;;;;;;;;36847:41;36866:12;:10;:12::i;:::-;36880:7;36847:18;:41::i;:::-;36826:105;;;;-1:-1:-1;;;36826:105:3;;;;;;;;;36942:14;36948:7;36942:5;:14::i;12985:847::-;9565:8;;13329:7;;-1:-1:-1;;;;;9565:8:3;:17;9583:12;:10;:12::i;:::-;9565:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9565:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9565:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9565:31:3;;;;;;;;;9544:115;;;;-1:-1:-1;;;9544:115:3;;;;;;;;;8488:6;;-1:-1:-1;;;8488:6:3;;;;8487:7;8479:16;;;;;;13374:7;;13361:9;:20;;13353:29;;;;;;13416:1;13401:12;:16;;;13393:50;;;;-1:-1:-1;;;13393:50:3;;;;;;;;;13475:63;13492:9;13503;13514:7;13523:14;13475:16;:63::i;:::-;13454:127;;;;-1:-1:-1;;;13454:127:3;;;;;;;;;13592:15;13610:29;13620:12;:10;:12::i;:::-;13634:4;13610:9;:29::i;:::-;13592:47;;13649:97;13667:7;13676:9;13687:12;13701:9;13712:7;13721:14;13737:8;13649:17;:97::i;1329:21::-;;;-1:-1:-1;;;;;1329:21:3;;:::o;1440:26::-;;;-1:-1:-1;;;1440:26:3;;;;;:::o;9029:305::-;7207:6;;-1:-1:-1;;;;;7207:6:3;7191:12;:10;:12::i;:::-;-1:-1:-1;;;;;7191:22:3;;7190:52;;;-1:-1:-1;7235:6:3;;-1:-1:-1;;;;;7235:6:3;7219:12;:10;:12::i;:::-;-1:-1:-1;;;;;7219:22:3;;7190:52;7169:118;;;;-1:-1:-1;;;7169:118:3;;;;;;;;;9247:34;;9205:4;9197:21;;9182:12;;9247:10;;9197:21;;9247:34;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;9228:53:3;;;9299:7;9291:35;;;;-1:-1:-1;;;9291:35:3;;;;;;;;;7297:1;;9029:305::o;24845:152::-;24900:7;24941:20;;;:11;:20;;;;;;-1:-1:-1;;;;;24941:20:3;;24845:152::o;10084:806::-;9565:8;;10397:7;;-1:-1:-1;;;;;9565:8:3;:17;9583:12;:10;:12::i;:::-;9565:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9565:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9565:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9565:31:3;;;;;;;;;9544:115;;;;-1:-1:-1;;;9544:115:3;;;;;;;;;8488:6;;-1:-1:-1;;;8488:6:3;;;;8487:7;8479:16;;;;;;10442:7;;10429:9;:20;;10421:29;;;;;;10484:1;10469:12;:16;;;10461:50;;;;-1:-1:-1;;;10461:50:3;;;;;;;;;10543:63;10560:9;10571;10582:7;10591:14;10543:16;:63::i;:::-;10522:127;;;;-1:-1:-1;;;10522:127:3;;;;;;;;;10660:15;10678:19;10684:12;:10;:12::i;24385:241::-;24445:7;-1:-1:-1;;;;;24486:24:3;;24465:96;;;;-1:-1:-1;;;24465:96:3;;;;;;;;;-1:-1:-1;;;;;24579:29:3;;;;;;:17;:29;;;;;:39;;:37;:39::i;:::-;24572:46;24385:241;-1:-1:-1;;24385:241:3:o;1302:21::-;;;-1:-1:-1;;;;;1302:21:3;;:::o;22158:403::-;-1:-1:-1;;;;;22340:35:3;;;;;;:27;:35;;;;;;;:46;;22280:15;;;;22340:46;;22376:9;;;;22340:46;;;;;;;;;;;;;;;22308:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22308:78:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22396:17;22429:1;:8;22416:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22396:42:3;-1:-1:-1;22454:6:3;22449:86;22470:1;:8;22466:1;:12;22449:86;;;22507:1;22509;22507:4;;;;;;;;;;;;;;:17;;;22499:1;22501;22499:4;;;;;;;;;;;;;;;;;:25;22480:3;;22449:86;;;-1:-1:-1;22552:1:3;22158:403;-1:-1:-1;;;;;22158:403:3:o;1772:32::-;;;-1:-1:-1;;;;;1772:32:3;;:::o;8189:105::-;7207:6;;-1:-1:-1;;;;;7207:6:3;7191:12;:10;:12::i;:::-;-1:-1:-1;;;;;7191:22:3;;7190:52;;;-1:-1:-1;7235:6:3;;-1:-1:-1;;;;;7235:6:3;7219:12;:10;:12::i;:::-;-1:-1:-1;;;;;7219:22:3;;7190:52;7169:118;;;;-1:-1:-1;;;7169:118:3;;;;;;;;;8273:7;:13;8189:105::o;8730:78::-;7207:6;;-1:-1:-1;;;;;7207:6:3;7191:12;:10;:12::i;:::-;-1:-1:-1;;;;;7191:22:3;;7190:52;;;-1:-1:-1;7235:6:3;;-1:-1:-1;;;;;7235:6:3;7219:12;:10;:12::i;:::-;-1:-1:-1;;;;;7219:22:3;;7190:52;7169:118;;;;-1:-1:-1;;;7169:118:3;;;;;;;;;8488:6;;-1:-1:-1;;;8488:6:3;;;;8487:7;8479:16;;;;;;8788:6;:13;;-1:-1:-1;;;;8788:13:3;-1:-1:-1;;;8788:13:3;;;8730:78::o;25415:840::-;25480:16;25508:18;25529:21;25539:10;25529:9;:21::i;:::-;25508:42;-1:-1:-1;25564:15:3;25560:689;;25639:16;;;25653:1;25639:16;;;;;;;;;;;;25560:689;25686:23;25726:10;25712:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;25712:25:3;;25686:51;;25751:19;25773:13;:11;:13::i;:::-;25751:35;-1:-1:-1;25800:19:3;25996:1;25981:230;26010:11;25999:7;:22;25981:230;;26056:20;;;;:11;:20;;;;;;-1:-1:-1;;;;;26056:34:3;;;:20;;:34;26052:145;;;26136:7;26114:6;26121:11;26114:19;;;;;;;;;;;;;;;;;:29;26165:13;;;;;26052:145;26023:9;;25981:230;;2074:87:8;2147:7;2140:14;;;;;;;;-1:-1:-1;;2140:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2115:13;;2140:14;;2147:7;;2140:14;;2147:7;2140:14;;;;;;;;;;;;;;;;;;;;;;;;13935:899:3;9565:8;;14296:7;;-1:-1:-1;;;;;9565:8:3;:17;9583:12;:10;:12::i;:::-;9565:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9565:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9565:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9565:31:3;;;;;;;;;9544:115;;;;-1:-1:-1;;;9544:115:3;;;;;;;;;8488:6;;-1:-1:-1;;;8488:6:3;;;;8487:7;8479:16;;;;;;14341:7;;14328:9;:20;;14320:29;;;;;;14383:1;14368:12;:16;;;14360:50;;;;-1:-1:-1;;;14360:50:3;;;;;;;;;14442:63;14459:9;14470;14481:7;14490:14;14442:16;:63::i;:::-;14421:127;;;;-1:-1:-1;;;14421:127:3;;;;;;;;;14559:15;14577:23;14587:12;:10;:12::i;28001:305::-;9855:8;;-1:-1:-1;;;;;9855:8:3;:17;9873:12;:10;:12::i;:::-;9855:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9855:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9855:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9855:31:3;;;;;;;;;9834:115;;;;-1:-1:-1;;;9834:115:3;;;;;;;;;8488:6;;-1:-1:-1;;;8488:6:3;;;;8487:7;8479:16;;;;;;28140:12;:10;:12::i;:::-;-1:-1:-1;;;;;28134:18:3;:2;-1:-1:-1;;;;;28134:18:3;;;28126:57;;;;-1:-1:-1;;;28126:57:3;;;;;;;;;28233:8;28194:18;:32;28213:12;:10;:12::i;:::-;-1:-1:-1;;;;;28194:32:3;;;;;;;;;;;;;;;;;-1:-1:-1;28194:32:3;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;28194:47:3;;;;;;;;;;;28271:12;:10;:12::i;:::-;-1:-1:-1;;;;;28256:42:3;;28289:8;28256:42;;;;;;;;;;;;;;;28001:305;;:::o;21704:330::-;-1:-1:-1;;;;;21831:32:3;;;;;;:24;:32;;;;;;;;21802:61;;;;;;;;;;;;;;;;;21774:15;;;;21802:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21802:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21873:17;21906:1;:8;21893:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21873:42:3;-1:-1:-1;21931:6:3;21926:82;21947:1;:8;21943:1;:12;21926:82;;;21983:1;21985;21983:4;;;;;;;;;;;;;;:14;;;21976:1;21978;21976:4;;;;;;;;;;;;;;;;;:21;21957:3;;21926:82;;;-1:-1:-1;22025:1:3;21704:330;-1:-1:-1;;;21704:330:3:o;31297:558::-;8488:6;;-1:-1:-1;;;8488:6:3;;;;8487:7;8479:16;;;;;;31458:41;31477:12;:10;:12::i;:::-;31491:7;31458:18;:41::i;:::-;31437:109;;;;-1:-1:-1;;;31437:109:3;;;;;;;;;31557:14;31574:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;31574:32:3;;31632:16;31591:7;31632;:16::i;:::-;31680:8;;;:67;;-1:-1:-1;;;31680:67:3;;31616:32;;-1:-1:-1;;;;;;31680:8:3;;:33;;:67;;31714:4;;31720:2;;31724:7;;31733:6;;31616:32;;31680:67;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31680:67:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31680:67:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;31680:67:3;;;;;;;;;31659:135;;;;-1:-1:-1;;;31659:135:3;;;;;;;;;31805:42;31823:4;31829:2;31833:7;31842:4;31805:17;:42::i;:::-;8505:1;;31297:558;;;;:::o;7952:144::-;7207:6;;-1:-1:-1;;;;;7207:6:3;7191:12;:10;:12::i;:::-;-1:-1:-1;;;;;7191:22:3;;7190:52;;;-1:-1:-1;7235:6:3;;-1:-1:-1;;;;;7235:6:3;7219:12;:10;:12::i;:::-;-1:-1:-1;;;;;7219:22:3;;7190:52;7169:118;;;;-1:-1:-1;;;7169:118:3;;;;;;;;;8050:8;:39;;-1:-1:-1;;;;;;8050:39:3;-1:-1:-1;;;;;8050:39:3;;;;;;;;;;7952:144::o;17576:210::-;17634:13;17681:16;17689:7;17681;:16::i;:::-;17660:81;;;;-1:-1:-1;;;17660:81:3;;;;;;;;;17759:19;;;;:10;:19;;;;;;;;;17752:26;;;;;;-1:-1:-1;;17752:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17759:19;;17752:26;;17759:19;17752:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17576:210;;;:::o;7630:169::-;7207:6;;-1:-1:-1;;;;;7207:6:3;7191:12;:10;:12::i;:::-;-1:-1:-1;;;;;7191:22:3;;7190:52;;;-1:-1:-1;7235:6:3;;-1:-1:-1;;;;;7235:6:3;7219:12;:10;:12::i;:::-;-1:-1:-1;;;;;7219:22:3;;7190:52;7169:118;;;;-1:-1:-1;;;7169:118:3;;;;;;;;;-1:-1:-1;;;;;7727:22:3;;;7723:70;;7765:6;:17;;-1:-1:-1;;;;;;7765:17:3;-1:-1:-1;;;;;7765:17:3;;;;;7723:70;7630:169;:::o;20421:863::-;20493:14;20517:13;20540:23;20573:26;20609:16;20635:14;20659:21;20690:15;20715:19;20773:16;20781:7;20773;:16::i;:::-;20752:81;;;;-1:-1:-1;;;20752:81:3;;;;;;;;;20844:25;;:::i;:::-;20872;;;;:16;:25;;;;;;;;;20844:53;;;;;;;;;-1:-1:-1;;;;;20844:53:3;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20844:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;20872:25;;20844:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20844:53:3;;;-1:-1:-1;;20844:53:3;;;;;;;;;;;;;;;;-1:-1:-1;;20844:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20844:53:3;;;-1:-1:-1;;20844:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20844:53:3;;;;;;;;;-1:-1:-1;;;20844:53:3;;;;;;;;;;;;;-1:-1:-1;20930:28:3;;;:19;:28;;;;;20990:16;;;;-1:-1:-1;20930:28:3;;;21020:16;20930:28;21020:7;:16::i;:::-;21050:9;:19;;;21083:9;:22;;;21119:9;:19;;;21152:9;:17;;;21183:9;:24;;;21221:9;:18;;;21253:13;20969:307;;;;;;;;;;;;;;;;;;;;;;;;;;20421:863;;;;;;;;;;;:::o;7454:169::-;7207:6;;-1:-1:-1;;;;;7207:6:3;7191:12;:10;:12::i;:::-;-1:-1:-1;;;;;7191:22:3;;7190:52;;;-1:-1:-1;7235:6:3;;-1:-1:-1;;;;;7235:6:3;7219:12;:10;:12::i;:::-;-1:-1:-1;;;;;7219:22:3;;7190:52;7169:118;;;;-1:-1:-1;;;7169:118:3;;;;;;;;;-1:-1:-1;;;;;7551:22:3;;;7547:70;;7589:6;:17;;-1:-1:-1;;;;;7589:17:3;;-1:-1:-1;;;;;;7589:17:3;;;;;;7454:169;:::o;28645:185::-;-1:-1:-1;;;;;28782:30:3;;;28754:4;28782:30;;;:18;:30;;;;;;;;:40;;;;;;;;;;;;;;;28645:185::o;33062:165::-;33119:4;33157:20;;;:11;:20;;;;;;-1:-1:-1;;;;;33157:20:3;33195:24;;;33062:165::o;6626:90::-;6698:10;6626:90;:::o;1061:112:1:-;1152:14;;1061:112::o;17844:566:3:-;18051:8;;;:49;;-1:-1:-1;;;18051:49:3;;18013:4;;-1:-1:-1;;;;;18051:8:3;;;;:38;;:49;;18090:9;;18051:49;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18051:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18051:49:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18051:49:3;;;;;;;;;18030:131;;;;-1:-1:-1;;;18030:131:3;;;;;;;;;18205:14;18193:26;;:9;:26;;;18172:106;;;;-1:-1:-1;;;18172:106:3;;;;;;;;;18320:9;18310:19;;:7;:19;;;18289:91;;;;-1:-1:-1;;;18289:91:3;;;;;;;;;-1:-1:-1;18398:4:3;17844:566;;;;;;;:::o;15327:136::-;15376:7;15396:15;15414:17;15424:2;15414:17;;;;;;;;;;;;:9;:17::i;:::-;15396:35;15327:136;-1:-1:-1;;;15327:136:3:o;19319:1095::-;19593:16;19601:7;19593;:16::i;:::-;19572:81;;;;-1:-1:-1;;;19572:81:3;;;;;;;;;19664:25;;:::i;:::-;19692:325;;;;;;;;19731:12;:10;:12::i;:::-;-1:-1:-1;;;;;19692:325:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20028:25:3;;;:16;:25;;;;;;:37;;;;-1:-1:-1;;;;;;20028:37:3;;;;;;;;;;;;;;;;;-1:-1:-1;20028:37:3;;:25;;:37;;-1:-1:-1;20028:37:3;;;;;;;;:::i;:::-;-1:-1:-1;20028:37:3;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20028:37:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20028:37:3;-1:-1:-1;;20028:37:3;;;;-1:-1:-1;;;20028:37:3;-1:-1:-1;;20028:37:3;;;;;-1:-1:-1;;20028:37:3;;;;-1:-1:-1;;20028:37:3;;;;;;;;;;;;;;;;;;;;;;;;20081;20108:9;20081:26;:37::i;:::-;20076:142;;20134:24;:38;20159:12;:10;:12::i;:::-;-1:-1:-1;;;;;20134:38:3;;;;;;;;;;;;;;;-1:-1:-1;20134:38:3;;;20179:26;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;20134:73:3;;;;;;;;;;;23:18:-1;;20134:73:3;;;;;;;;;;;;;;;:::i;:::-;;;;;20076:142;20233:54;20263:9;20274:12;20233:29;:54::i;:::-;20228:179;;20303:27;:41;20331:12;:10;:12::i;:::-;-1:-1:-1;;;;;20303:41:3;-1:-1:-1;;;;;20303:41:3;;;;;;;;;;;;20345:9;20303:52;;;;;;;;;;;;;;;;;;;;;;;;20362:32;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;-1:-1;20303:93:3;;;;;;;;;;;23:18:-1;;20303:52:3;:93;;;;;;;;;;;;;:::i;:::-;;;;;20228:179;19319:1095;;;;;;;;:::o;33588:384::-;33697:4;33739:16;33747:7;33739;:16::i;:::-;33718:81;;;;-1:-1:-1;;;33718:81:3;;;;;;;;;33810:18;33831:16;33839:7;33831;:16::i;:::-;33810:37;;33877:10;-1:-1:-1;;;;;33866:21:3;:7;-1:-1:-1;;;;;33866:21:3;;:56;;;;33915:7;-1:-1:-1;;;;;33891:31:3;:20;33903:7;33891:11;:20::i;:::-;-1:-1:-1;;;;;33891:31:3;;33866:56;:97;;;;33926:37;33943:10;33955:7;33926:16;:37::i;34353:486::-;34480:4;-1:-1:-1;;;;;34460:24:3;:16;34468:7;34460;:16::i;:::-;-1:-1:-1;;;;;34460:24:3;;34439:92;;;;-1:-1:-1;;;34439:92:3;;;;;;;;;-1:-1:-1;;;;;34563:16:3;;34542:87;;;;-1:-1:-1;;;34542:87:3;;;;;;;;;34640:23;34655:7;34640:14;:23::i;:::-;-1:-1:-1;;;;;34674:23:3;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;34719:21:3;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;34763:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;34763:25:3;-1:-1:-1;;;;;34763:25:3;;;;;;;;;34804:27;;34763:20;;34804:27;;;;;;;34353:486;;;:::o;16514:398::-;16559:7;-1:-1:-1;;;;;16587:16:3;;16579:49;;;;-1:-1:-1;;;16579:49:3;;;;;;;;;16639:21;:9;:19;:21::i;:::-;16670:15;16688:19;:9;:17;:19::i;:::-;16718:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;16718:25:3;-1:-1:-1;;;;;16718:25:3;;;;;;;;16753:21;;:17;:21;;;;;16718:20;;-1:-1:-1;16753:33:3;;:31;:33::i;:::-;-1:-1:-1;;;;;16796:22:3;;;;;;:18;:22;;;;;:34;;:32;:34::i;:::-;16846:33;;16871:7;;-1:-1:-1;;;;;16846:33:3;;;16863:1;;16846:33;;16863:1;;16846:33;16897:7;16514:398;-1:-1:-1;;16514:398:3:o;17181:203::-;17280:16;17288:7;17280;:16::i;:::-;17259:81;;;;-1:-1:-1;;;17259:81:3;;;;;;;;;17351:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;37996:92::-;38048:32;38054:16;38062:7;38054;:16::i;:::-;38072:7;38048:5;:32::i;16027:301::-;16095:7;16115:15;16133:9;16139:2;16133:5;:9::i;:::-;16115:27;;16174:53;16205:1;16209:2;16213:7;16222:4;16174:22;:53::i;:::-;16153:142;;;;-1:-1:-1;;;16153:142:3;;;;;;;;32559:308;32680:32;32694:4;32700:2;32704:7;32680:13;:32::i;:::-;32744:47;32767:4;32773:2;32777:7;32786:4;32744:22;:47::i;:::-;32723:136;;;;-1:-1:-1;;;32723:136:3;;;;;;;;;32559:308;;;;:::o;18417:413::-;18587:10;18516:4;18562:36;;;:24;:36;;;;;;;;18533:65;;;;;;;;;;;;;;;;;:26;;18516:4;;18533:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18533:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18533:65:3;;-1:-1:-1;18608:15:3;;-1:-1:-1;18608:15:3;;-1:-1:-1;;18641:155:3;18662:1;:8;18658:1;:12;18641:155;;;18695:39;18708:9;18719:1;18721;18719:4;;;;;;;;;;;;;;:14;;;18695:12;:39::i;:::-;18691:95;;;18767:4;18754:17;;18691:95;18672:3;;18641:155;;18837:475;19052:10;18975:4;19024:39;;;:27;:39;;;;;;:50;;18992:29;;19024:39;:50;;19064:9;;19024:50;;;;;;;;;;;;;;;18992:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18992:82:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18992:82:3;;-1:-1:-1;19084:15:3;;-1:-1:-1;19084:15:3;;-1:-1:-1;;19117:161:3;19138:1;:8;19134:1;:12;19117:161;;;19171:45;19184:12;19198:1;19200;19198:4;;;;;;;19171:45;19167:101;;;19249:4;19236:17;;19167:101;19148:3;;19117:161;;;-1:-1:-1;19295:10:3;18837:475;-1:-1:-1;;;;18837:475:3:o;35946:173::-;36046:1;36010:24;;;:15;:24;;;;;;-1:-1:-1;;;;;36010:24:3;:38;36006:106;;36099:1;36064:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;36064:37:3;;;35946:173::o;1274:108:1:-;1354:14;;:21;;1373:1;1354:21;:18;:21;:::i;:::-;1337:38;;1274:108::o;1179:89::-;1242:19;;1260:1;1242:19;;;1179:89::o;37238:577:3:-;37351:10;-1:-1:-1;;;;;37331:30:3;:16;37339:7;37331;:16::i;:::-;-1:-1:-1;;;;;37331:30:3;;37310:94;;;;-1:-1:-1;;;37310:94:3;;;;;;;;;37415:23;37430:7;37415:14;:23::i;:::-;-1:-1:-1;;;;;37449:29:3;;;;;;:17;:29;;;;;:41;;:39;:41::i;:::-;37531:1;37500:20;;;:11;:20;;;;;;;;:33;;-1:-1:-1;;;;;;37500:33:3;;;37591:10;:19;;;;;37585:33;;-1:-1:-1;;37500:33:3;37585;;;37500;37585;;;;;;:38;37581:95;;37646:19;;;;:10;:19;;;;;37639:26;;;:::i;:::-;37725:25;;;;:16;:25;;;;;37718:32;;-1:-1:-1;;;;;;37718:32:3;;;37725:25;37718:32;;;;37725:25;37718:32;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;37718:32:3;;;;-1:-1:-1;;;;;;37718:32:3;;;37766:41;;37799:7;;37718:32;;-1:-1:-1;;;;;37766:41:3;;;;;37718:32;;37766:41;37238:577;;:::o;35427:357::-;35555:4;35581:15;:2;-1:-1:-1;;;;;35581:13:3;;:15::i;:::-;35576:58;;-1:-1:-1;35619:4:3;35612:11;;35576:58;35644:13;35676:2;-1:-1:-1;;;;;35660:36:3;;35697:12;:10;:12::i;:::-;35711:4;35717:7;35726:4;35660:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35660:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;35660:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;35660:71:3;;;;;;;;;-1:-1:-1;;;;;;35749:26:3;-1:-1:-1;;;35749:26:3;;-1:-1:-1;;35427:357:3;;;;;;:::o;38122:230::-;38247:4;38339:1;38321:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;38321:21:3;;;38311:32;;;;;;38303:1;38285:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;38285:21:3;;;38275:32;;;;;;:68;38267:78;;38122:230;;;;:::o;1276:134:10:-;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;559:797:0:-;619:4;1267:20;;1112:66;1306:15;;;;;:42;;-1:-1:-1;1325:23:0;;;1298:51;-1:-1:-1;;559:797:0:o;1846:187:10:-;1932:7;1967:12;1959:6;;;;1951:29;;;;-1:-1:-1;;;1951:29:10;;;;;;;;;;-1:-1:-1;;;2002:5:10;;;1846:187::o;925:1239:8:-;;;;;;;;;-1:-1:-1;925:1239:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;925:1239:8;;;-1:-1:-1;925:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;348:13;;366:30;348:13;366:30;;408:128;474:20;;499:32;474:20;499:32;;543:132;620:13;;638:32;620:13;638:32;;683:440;;784:3;777:4;769:6;765:17;761:27;751:2;;802:1;799;792:12;751:2;839:6;826:20;861:64;876:48;917:6;876:48;;;861:64;;;852:73;;945:6;938:5;931:21;981:4;973:6;969:17;1014:4;1007:5;1003:16;1049:3;1040:6;1035:3;1031:16;1028:25;1025:2;;;1066:1;1063;1056:12;1025:2;1076:41;1110:6;1105:3;1100;1076:41;;;744:379;;;;;;;;1146:336;;;1261:3;1254:4;1246:6;1242:17;1238:27;1228:2;;1279:1;1276;1269:12;1228:2;-1:-1;1299:20;;1339:18;1328:30;;1325:2;;;1371:1;1368;1361:12;1325:2;1405:4;1397:6;1393:17;1381:29;;1455:3;1448;1440:6;1436:16;1426:8;1422:31;1419:40;1416:2;;;1472:1;1469;1462:12;1416:2;1221:261;;;;;;1941:128;2007:20;;2032:32;2007:20;2032:32;;2076:130;2143:20;;2168:33;2143:20;2168:33;;2213:128;2279:20;;2304:32;2279:20;2304:32;;2348:128;2414:20;;2439:32;2414:20;2439:32;;2483:241;;2587:2;2575:9;2566:7;2562:23;2558:32;2555:2;;;2603:1;2600;2593:12;2555:2;2638:1;2655:53;2700:7;2680:9;2655:53;;2731:366;;;2852:2;2840:9;2831:7;2827:23;2823:32;2820:2;;;2868:1;2865;2858:12;2820:2;2903:1;2920:53;2965:7;2945:9;2920:53;;;2910:63;;2882:97;3010:2;3028:53;3073:7;3064:6;3053:9;3049:22;3028:53;;;3018:63;;2989:98;2814:283;;;;;;3104:491;;;;3242:2;3230:9;3221:7;3217:23;3213:32;3210:2;;;3258:1;3255;3248:12;3210:2;3293:1;3310:53;3355:7;3335:9;3310:53;;;3300:63;;3272:97;3400:2;3418:53;3463:7;3454:6;3443:9;3439:22;3418:53;;;3408:63;;3379:98;3508:2;3526:53;3571:7;3562:6;3551:9;3547:22;3526:53;;;3516:63;;3487:98;3204:391;;;;;;3602:721;;;;;3766:3;3754:9;3745:7;3741:23;3737:33;3734:2;;;3783:1;3780;3773:12;3734:2;3818:1;3835:53;3880:7;3860:9;3835:53;;;3825:63;;3797:97;3925:2;3943:53;3988:7;3979:6;3968:9;3964:22;3943:53;;;3933:63;;3904:98;4033:2;4051:53;4096:7;4087:6;4076:9;4072:22;4051:53;;;4041:63;;4012:98;4169:2;4158:9;4154:18;4141:32;4193:18;4185:6;4182:30;4179:2;;;4225:1;4222;4215:12;4179:2;4245:62;4299:7;4290:6;4279:9;4275:22;4245:62;;;4235:72;;4120:193;3728:595;;;;;;;;4330:360;;;4448:2;4436:9;4427:7;4423:23;4419:32;4416:2;;;4464:1;4461;4454:12;4416:2;4499:1;4516:53;4561:7;4541:9;4516:53;;;4506:63;;4478:97;4606:2;4624:50;4666:7;4657:6;4646:9;4642:22;4624:50;;4697:492;;;;4838:2;4826:9;4817:7;4813:23;4809:32;4806:2;;;4854:1;4851;4844:12;4806:2;4889:1;4906:53;4951:7;4931:9;4906:53;;;4896:63;;4868:97;5024:2;5013:9;5009:18;4996:32;5048:18;5040:6;5037:30;5034:2;;;5080:1;5077;5070:12;5034:2;5108:65;5165:7;5156:6;5145:9;5141:22;5108:65;;;5098:75;;;;4975:204;4800:389;;;;;;5196:366;;;5317:2;5305:9;5296:7;5292:23;5288:32;5285:2;;;5333:1;5330;5323:12;5285:2;5368:1;5385:53;5430:7;5410:9;5385:53;;;5375:63;;5347:97;5475:2;5493:53;5538:7;5529:6;5518:9;5514:22;5493:53;;5569:257;;5681:2;5669:9;5660:7;5656:23;5652:32;5649:2;;;5697:1;5694;5687:12;5649:2;5732:1;5749:61;5802:7;5782:9;5749:61;;5833:239;;5936:2;5924:9;5915:7;5911:23;5907:32;5904:2;;;5952:1;5949;5942:12;5904:2;5987:1;6004:52;6048:7;6028:9;6004:52;;6079:261;;6193:2;6181:9;6172:7;6168:23;6164:32;6161:2;;;6209:1;6206;6199:12;6161:2;6244:1;6261:63;6316:7;6296:9;6261:63;;6347:1197;;;;;;;;6568:3;6556:9;6547:7;6543:23;6539:33;6536:2;;;6585:1;6582;6575:12;6536:2;6620:31;;6671:18;6660:30;;6657:2;;;6703:1;6700;6693:12;6657:2;6723:63;6778:7;6769:6;6758:9;6754:22;6723:63;;;6713:73;;6599:193;6851:2;6840:9;6836:18;6823:32;6875:18;6867:6;6864:30;6861:2;;;6907:1;6904;6897:12;6861:2;6927:63;6982:7;6973:6;6962:9;6958:22;6927:63;;;6917:73;;6802:194;7027:2;7045:52;7089:7;7080:6;7069:9;7065:22;7045:52;;;7035:62;;7006:97;7134:2;7152:52;7196:7;7187:6;7176:9;7172:22;7152:52;;;7142:62;;7113:97;7241:3;7260:52;7304:7;7295:6;7284:9;7280:22;7260:52;;;7250:62;;7220:98;7349:3;7368:52;7412:7;7403:6;7392:9;7388:22;7368:52;;;7358:62;;7328:98;7457:3;7476:52;7520:7;7511:6;7500:9;7496:22;7476:52;;;7466:62;;7436:98;6530:1014;;;;;;;;;;;7551:1427;;;;;;;;;7798:3;7786:9;7777:7;7773:23;7769:33;7766:2;;;7815:1;7812;7805:12;7766:2;7850:31;;7901:18;7890:30;;7887:2;;;7933:1;7930;7923:12;7887:2;7953:63;8008:7;7999:6;7988:9;7984:22;7953:63;;;7943:73;;7829:193;8081:2;8070:9;8066:18;8053:32;8105:18;8097:6;8094:30;8091:2;;;8137:1;8134;8127:12;8091:2;8157:63;8212:7;8203:6;8192:9;8188:22;8157:63;;;8147:73;;8032:194;8257:2;8275:52;8319:7;8310:6;8299:9;8295:22;8275:52;;;8265:62;;8236:97;8364:2;8382:52;8426:7;8417:6;8406:9;8402:22;8382:52;;;8372:62;;8343:97;8471:3;8490:52;8534:7;8525:6;8514:9;8510:22;8490:52;;;8480:62;;8450:98;8579:3;8598:52;8642:7;8633:6;8622:9;8618:22;8598:52;;;8588:62;;8558:98;8687:3;8706:52;8750:7;8741:6;8730:9;8726:22;8706:52;;;8696:62;;8666:98;8823:3;8812:9;8808:19;8795:33;8848:18;8840:6;8837:30;8834:2;;;8880:1;8877;8870:12;8834:2;8900:62;8954:7;8945:6;8934:9;8930:22;8900:62;;;8890:72;;8774:194;7760:1218;;;;;;;;;;;;10421:241;;10525:2;10513:9;10504:7;10500:23;10496:32;10493:2;;;10541:1;10538;10531:12;10493:2;10576:1;10593:53;10638:7;10618:9;10593:53;;10670:181;;10783:62;10841:3;10833:6;10783:62;;10860:173;;10947:46;10989:3;10981:6;10947:46;;;-1:-1;;11022:4;11013:14;;10940:93;11041:113;11124:24;11142:5;11124:24;;;11119:3;11112:37;11106:48;;;11190:896;;11347:60;11401:5;11347:60;;;11420:92;11505:6;11500:3;11420:92;;;11413:99;;11535:3;11577:4;11569:6;11565:17;11560:3;11556:27;11604:62;11660:5;11604:62;;;11686:7;11714:1;11699:348;11724:6;11721:1;11718:13;11699:348;;;11786:9;11780:4;11776:20;11771:3;11764:33;11831:6;11825:13;11853:76;11924:4;11909:13;11853:76;;;11845:84;;11946:66;12005:6;11946:66;;;12035:4;12026:14;;;;;11936:76;-1:-1;;11746:1;11739:9;11699:348;;;-1:-1;12060:4;;11326:760;-1:-1;;;;;;;11326:760;12125:690;;12270:54;12318:5;12270:54;;;12337:86;12416:6;12411:3;12337:86;;;12330:93;;12444:56;12494:5;12444:56;;;12520:7;12548:1;12533:260;12558:6;12555:1;12552:13;12533:260;;;12625:6;12619:13;12646:63;12705:3;12690:13;12646:63;;;12639:70;;12726:60;12779:6;12726:60;;;12716:70;-1:-1;;12580:1;12573:9;12533:260;;;-1:-1;12806:3;;12249:566;-1:-1;;;;;12249:566;12823:104;12900:21;12915:5;12900:21;;12934:343;;13044:38;13076:5;13044:38;;;13094:70;13157:6;13152:3;13094:70;;;13087:77;;13169:52;13214:6;13209:3;13202:4;13195:5;13191:16;13169:52;;;13242:29;13264:6;13242:29;;;13233:39;;;;13024:253;-1:-1;;;13024:253;13284:174;13391:61;13446:5;13391:61;;13490:313;;13624:89;13706:6;13701:3;13624:89;;;13617:96;;13725:43;13761:6;13756:3;13749:5;13725:43;;;-1:-1;;13781:16;;13610:193;14165:360;;14295:39;14328:5;14295:39;;;14346:89;14428:6;14423:3;14346:89;;;14339:96;;14440:52;14485:6;14480:3;14473:4;14466:5;14462:16;14440:52;;;14504:16;;;;;14275:250;-1:-1;;14275:250;14859:364;;15019:67;15083:2;15078:3;15019:67;;;15119:66;15099:87;;15214:2;15205:12;;15005:218;-1:-1;;15005:218;15232:465;;15392:67;15456:2;15451:3;15392:67;;;15492:66;15472:87;;-1:-1;;;15588:2;15579:12;;15572:88;15688:2;15679:12;;15378:319;-1:-1;;15378:319;15706:364;;15866:67;15930:2;15925:3;15866:67;;;15966:66;15946:87;;16061:2;16052:12;;15852:218;-1:-1;;15852:218;16079:364;;16239:67;16303:2;16298:3;16239:67;;;16339:66;16319:87;;16434:2;16425:12;;16225:218;-1:-1;;16225:218;16452:364;;16612:67;16676:2;16671:3;16612:67;;;16712:66;16692:87;;16807:2;16798:12;;16598:218;-1:-1;;16598:218;16825:364;;16985:67;17049:2;17044:3;16985:67;;;17085:66;17065:87;;17180:2;17171:12;;16971:218;-1:-1;;16971:218;17198:364;;17358:67;17422:2;17417:3;17358:67;;;17458:66;17438:87;;17553:2;17544:12;;17344:218;-1:-1;;17344:218;17571:465;;17731:67;17795:2;17790:3;17731:67;;;17831:66;17811:87;;-1:-1;;;17927:2;17918:12;;17911:88;18027:2;18018:12;;17717:319;-1:-1;;17717:319;18045:364;;18205:67;18269:2;18264:3;18205:67;;;18305:66;18285:87;;18400:2;18391:12;;18191:218;-1:-1;;18191:218;18418:364;;18578:67;18642:2;18637:3;18578:67;;;18678:66;18658:87;;18773:2;18764:12;;18564:218;-1:-1;;18564:218;18791:364;;18951:67;19015:2;19010:3;18951:67;;;19051:66;19031:87;;19146:2;19137:12;;18937:218;-1:-1;;18937:218;19164:465;;19324:67;19388:2;19383:3;19324:67;;;19424:66;19404:87;;-1:-1;;;19520:2;19511:12;;19504:88;19620:2;19611:12;;19310:319;-1:-1;;19310:319;19638:364;;19798:67;19862:2;19857:3;19798:67;;;19898:66;19878:87;;19993:2;19984:12;;19784:218;-1:-1;;19784:218;20011:296;;20188:83;20269:1;20264:3;20188:83;;20316:364;;20476:67;20540:2;20535:3;20476:67;;;20576:66;20556:87;;20671:2;20662:12;;20462:218;-1:-1;;20462:218;20689:364;;20849:67;20913:2;20908:3;20849:67;;;20949:66;20929:87;;21044:2;21035:12;;20835:218;-1:-1;;20835:218;21062:465;;21222:67;21286:2;21281:3;21222:67;;;21322:66;21302:87;;-1:-1;;;21418:2;21409:12;;21402:88;21518:2;21509:12;;21208:319;-1:-1;;21208:319;21536:465;;21696:67;21760:2;21755:3;21696:67;;;21796:66;21776:87;;-1:-1;;;21892:2;21883:12;;21876:88;21992:2;21983:12;;21682:319;-1:-1;;21682:319;22010:364;;22170:67;22234:2;22229:3;22170:67;;;22270:66;22250:87;;22365:2;22356:12;;22156:218;-1:-1;;22156:218;22383:364;;22543:67;22607:2;22602:3;22543:67;;;22643:66;22623:87;;22738:2;22729:12;;22529:218;-1:-1;;22529:218;22755:110;22836:23;22853:5;22836:23;;22872:103;22945:24;22963:5;22945:24;;23102:110;23183:23;23200:5;23183:23;;23219:110;23300:23;23317:5;23300:23;;23336:286;;23492:105;23593:3;23584:6;23576;23492:105;;23629:266;;23775:95;23866:3;23857:6;23775:95;;23902:370;;24100:147;24243:3;24100:147;;24279:213;24397:2;24382:18;;24411:71;24386:9;24455:6;24411:71;;24499:1263;24871:3;24856:19;;24886:71;24860:9;24930:6;24886:71;;;24968:72;25036:2;25025:9;25021:18;25012:6;24968:72;;;25088:9;25082:4;25078:20;25073:2;25062:9;25058:18;25051:48;25113:78;25186:4;25177:6;25113:78;;;25105:86;;25239:9;25233:4;25229:20;25224:2;25213:9;25209:18;25202:48;25264:78;25337:4;25328:6;25264:78;;;25256:86;;25353:71;25419:3;25408:9;25404:19;25395:6;25353:71;;;25435;25501:3;25490:9;25486:19;25477:6;25435:71;;;25517;25583:3;25572:9;25568:19;25559:6;25517:71;;;25599;25665:3;25654:9;25650:19;25641:6;25599:71;;;25681;25747:3;25736:9;25732:19;25723:6;25681:71;;;24842:920;;;;;;;;;;;;;25769:659;25999:3;25984:19;;26014:71;25988:9;26058:6;26014:71;;;26096:72;26164:2;26153:9;26149:18;26140:6;26096:72;;;26179;26247:2;26236:9;26232:18;26223:6;26179:72;;;26262;26330:2;26319:9;26315:18;26306:6;26262:72;;;26345:73;26413:3;26402:9;26398:19;26389:6;26345:73;;;25970:458;;;;;;;;;26435:631;26655:3;26640:19;;26670:71;26644:9;26714:6;26670:71;;;26752:72;26820:2;26809:9;26805:18;26796:6;26752:72;;;26835;26903:2;26892:9;26888:18;26879:6;26835:72;;;26955:9;26949:4;26945:20;26940:2;26929:9;26925:18;26918:48;26980:76;27051:4;27042:6;26980:76;;27073:385;27253:2;27267:47;;;27238:18;;27328:120;27238:18;27434:6;27328:120;;27465:361;27633:2;27647:47;;;27618:18;;27708:108;27618:18;27802:6;27708:108;;27833:201;27945:2;27930:18;;27959:65;27934:9;27997:6;27959:65;;28041:261;28183:2;28168:18;;28197:95;28172:9;28265:6;28197:95;;28309:301;28447:2;28461:47;;;28432:18;;28522:78;28432:18;28586:6;28522:78;;28617:407;28808:2;28822:47;;;28793:18;;28883:131;28793:18;28883:131;;29031:407;29222:2;29236:47;;;29207:18;;29297:131;29207:18;29297:131;;29445:407;29636:2;29650:47;;;29621:18;;29711:131;29621:18;29711:131;;29859:407;30050:2;30064:47;;;30035:18;;30125:131;30035:18;30125:131;;30273:407;30464:2;30478:47;;;30449:18;;30539:131;30449:18;30539:131;;30687:407;30878:2;30892:47;;;30863:18;;30953:131;30863:18;30953:131;;31101:407;31292:2;31306:47;;;31277:18;;31367:131;31277:18;31367:131;;31515:407;31706:2;31720:47;;;31691:18;;31781:131;31691:18;31781:131;;31929:407;32120:2;32134:47;;;32105:18;;32195:131;32105:18;32195:131;;32343:407;32534:2;32548:47;;;32519:18;;32609:131;32519:18;32609:131;;32757:407;32948:2;32962:47;;;32933:18;;33023:131;32933:18;33023:131;;33171:407;33362:2;33376:47;;;33347:18;;33437:131;33347:18;33437:131;;33585:407;33776:2;33790:47;;;33761:18;;33851:131;33761:18;33851:131;;33999:407;34190:2;34204:47;;;34175:18;;34265:131;34175:18;34265:131;;34413:407;34604:2;34618:47;;;34589:18;;34679:131;34589:18;34679:131;;34827:407;35018:2;35032:47;;;35003:18;;35093:131;35003:18;35093:131;;35241:407;35432:2;35446:47;;;35417:18;;35507:131;35417:18;35507:131;;35655:407;35846:2;35860:47;;;35831:18;;35921:131;35831:18;35921:131;;36069:407;36260:2;36274:47;;;36245:18;;36335:131;36245:18;36335:131;;36483:213;36601:2;36586:18;;36615:71;36590:9;36659:6;36615:71;;36703:209;36819:2;36804:18;;36833:69;36808:9;36875:6;36833:69;;36919:256;36981:2;36975:9;37007:17;;;37082:18;37067:34;;37103:22;;;37064:62;37061:2;;;37139:1;37136;37129:12;37061:2;37155;37148:22;36959:216;;-1:-1;36959:216;37182:321;;37325:18;37317:6;37314:30;37311:2;;;37357:1;37354;37347:12;37311:2;-1:-1;37488:4;37424;37401:17;;;;-1:-1;;37397:33;37478:15;;37248:255;37839:157;37969:4;37960:14;;37917:79;38161:143;38270:12;;38241:63;39074:184;39198:19;;;39247:4;39238:14;;39191:67;40265:91;;40327:24;40345:5;40327:24;;40363:85;40429:13;40422:21;;40405:43;40455:144;-1:-1;;;;;;40516:78;;40499:100;40606:84;40678:6;40667:18;;40650:40;40697:121;-1:-1;;;;;40759:54;;40742:76;40904:88;40976:10;40965:22;;40948:44;40999:92;41071:14;41060:26;;41043:48;41098:169;;41201:61;41256:5;41201:61;;41414:145;41495:6;41490:3;41485;41472:30;-1:-1;41551:1;41533:16;;41526:27;41465:94;41568:268;41633:1;41640:101;41654:6;41651:1;41648:13;41640:101;;;41721:11;;;41715:18;41702:11;;;41695:39;41676:2;41669:10;41640:101;;;41756:6;41753:1;41750:13;41747:2;;;-1:-1;;41821:1;41803:16;;41796:27;41617:219;41844:97;41932:2;41912:14;-1:-1;;41908:28;;41892:49;41949:117;42018:24;42036:5;42018:24;;;42011:5;42008:35;41998:2;;42057:1;42054;42047:12;42073:111;42139:21;42154:5;42139:21;;42191:115;42259:23;42276:5;42259:23;;42313:115;42381:23;42398:5;42381:23;;42435:117;42504:24;42522:5;42504:24;;42559:115;42627:23;42644:5;42627:23;;42681:115;42749:23;42766:5;42749:23;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n\n\n  Copyright 2020 Niche Networks, Inc. (owns & operates Microsponsors.io)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2467
      ]
    },
    "id": 2468,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2411,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2412,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2413,
        "nodeType": "ImportDirective",
        "scope": 2468,
        "sourceUnit": 2258,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2414,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2257,
              "src": "951:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2257",
                "typeString": "contract ERC721"
              }
            },
            "id": 2415,
            "nodeType": "InheritanceSpecifier",
            "src": "951:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2257,
          2267,
          2370
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nCopyright 2020 Niche Networks, Inc. (owns & operates Microsponsors.io)\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2467,
        "linearizedBaseContracts": [
          2467,
          2257,
          2370,
          142,
          2267
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2417,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "983:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2416,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "983:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2419,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "1030:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2418,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2422,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "1319:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2420,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1319:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2421,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1375:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2449,
              "nodeType": "Block",
              "src": "1528:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2431,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2417,
                      "src": "1539:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2432,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2424,
                      "src": "1547:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1539:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2434,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2435,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2419,
                      "src": "1561:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2436,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2426,
                      "src": "1571:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1561:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2438,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2440,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2422,
                        "src": "1684:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2439,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1665:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2442,
                  "nodeType": "ExpressionStatement",
                  "src": "1665:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2446,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2428,
                        "src": "1753:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2443,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2761,
                        "src": "1725:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2467",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 397,
                      "src": "1725:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2448,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2450,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2424,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2450,
                  "src": "1454:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2423,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2426,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2450,
                  "src": "1474:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2425,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2428,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2450,
                  "src": "1496:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1453:67:8"
            },
            "returnParameters": {
              "id": 2430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1528:0:8"
            },
            "scope": 2467,
            "src": "1441:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2457,
              "nodeType": "Block",
              "src": "1936:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2455,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2417,
                    "src": "1953:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2454,
                  "id": 2456,
                  "nodeType": "Return",
                  "src": "1946:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1895:2:8"
            },
            "returnParameters": {
              "id": 2454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2453,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2458,
                  "src": "1921:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2452,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1920:15:8"
            },
            "scope": 2467,
            "src": "1882:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2465,
              "nodeType": "Block",
              "src": "2130:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2463,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2419,
                    "src": "2147:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2462,
                  "id": 2464,
                  "nodeType": "Return",
                  "src": "2140:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:2:8"
            },
            "returnParameters": {
              "id": 2462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2461,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2466,
                  "src": "2115:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2460,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2114:15:8"
            },
            "scope": 2467,
            "src": "2074:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2468,
        "src": "925:1239:8"
      }
    ],
    "src": "0:2165:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2467
      ]
    },
    "id": 2468,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2411,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2412,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2413,
        "nodeType": "ImportDirective",
        "scope": 2468,
        "sourceUnit": 2258,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2414,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2257,
              "src": "951:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2257",
                "typeString": "contract ERC721"
              }
            },
            "id": 2415,
            "nodeType": "InheritanceSpecifier",
            "src": "951:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2257,
          2267,
          2370
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nCopyright 2020 Niche Networks, Inc. (owns & operates Microsponsors.io)\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2467,
        "linearizedBaseContracts": [
          2467,
          2257,
          2370,
          142,
          2267
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2417,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "983:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2416,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "983:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2419,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "1030:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2418,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2422,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "1319:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2420,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1319:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2421,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1375:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2449,
              "nodeType": "Block",
              "src": "1528:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2431,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2417,
                      "src": "1539:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2432,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2424,
                      "src": "1547:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1539:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2434,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2435,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2419,
                      "src": "1561:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2436,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2426,
                      "src": "1571:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1561:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2438,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2440,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2422,
                        "src": "1684:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2439,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1665:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2442,
                  "nodeType": "ExpressionStatement",
                  "src": "1665:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2446,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2428,
                        "src": "1753:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2443,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2761,
                        "src": "1725:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2467",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 397,
                      "src": "1725:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2448,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2450,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2424,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2450,
                  "src": "1454:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2423,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2426,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2450,
                  "src": "1474:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2425,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2428,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2450,
                  "src": "1496:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1453:67:8"
            },
            "returnParameters": {
              "id": 2430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1528:0:8"
            },
            "scope": 2467,
            "src": "1441:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2457,
              "nodeType": "Block",
              "src": "1936:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2455,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2417,
                    "src": "1953:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2454,
                  "id": 2456,
                  "nodeType": "Return",
                  "src": "1946:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1895:2:8"
            },
            "returnParameters": {
              "id": 2454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2453,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2458,
                  "src": "1921:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2452,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1920:15:8"
            },
            "scope": 2467,
            "src": "1882:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2465,
              "nodeType": "Block",
              "src": "2130:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2463,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2419,
                    "src": "2147:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2462,
                  "id": 2464,
                  "nodeType": "Return",
                  "src": "2140:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:2:8"
            },
            "returnParameters": {
              "id": 2462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2461,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2466,
                  "src": "2115:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2460,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2114:15:8"
            },
            "scope": 2467,
            "src": "2074:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2468,
        "src": "925:1239:8"
      }
    ],
    "src": "0:2165:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {
    "1578343338195": {
      "events": {},
      "links": {},
      "address": "0xe7e9f4C500B983309515318864100409025Ff671",
      "transactionHash": "0xe1b87b8c603e161ae5947d6259b50acd12dee1a3215336228b4f5595011ccbd9"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2020-01-06T20:43:13.015Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Customized for MicrosponsorsBurns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned"
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "mint(string,string,uint48,uint48,uint48,uint16,uint32)": {
        "details": "Function to mint tokens.",
        "return": "tokenId"
      },
      "mintWithTokenURI(string,string,uint48,uint48,uint48,uint16,uint32,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause minting and transfers."
      },
      "safeMint(string,string,uint48,uint48,uint48,uint16,uint32)": {
        "details": "Function to safely mint tokens.",
        "return": "tokenId"
      },
      "safeMint(string,string,uint48,uint48,uint48,uint16,uint32,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check."
        },
        "return": "tokenId"
      },
      "safeMintWithTokenURI(string,string,uint48,uint48,uint48,uint16,uint32,string)": {
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations."
      },
      "tokenMinterPropertyNames(address,string)": {
        "details": "Look up all Property Names a Minter has created Time Slots for      with a particular Content ID"
      },
      "tokenURI(uint256)": {
        "params": {
          "tokenId": "uint256 ID of the token to query"
        },
        "return": "URI for a given token ID."
      },
      "tokensMintedBy(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time)."
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership1(address)": {
        "details": "Transfer owner (admin) functions to another address",
        "params": {
          "newOwner": "Address of new owner/ admin of contract"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause minting and transfers."
      },
      "updateMintFee(uint256)": {
        "details": "Update the fee (in wei) charged for minting a single token"
      },
      "updateRegistryAddress(address)": {
        "details": "Update contract address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      },
      "withdrawBalance()": {
        "details": "Admin withdraws entire balance from contract."
      }
    }
  },
  "userdoc": {
    "methods": {
      "tokenURI(uint256)": {
        "notice": "Throws if the token ID does not exist. May return an empty string."
      },
      "tokensMintedBy(address)": {
        "notice": "Return all the Token IDs minted by a given account."
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Copyright 2020 Niche Networks, Inc. (owns & operates Microsponsors.io) Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  }
}