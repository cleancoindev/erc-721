{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "safeMintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        }
      ],
      "name": "tokenMinterPropertyNames",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"tokenMinterPropertyNames\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"isMinter(address)\":{\"details\":\"Checks if minter isWhitelisted()\"},\"isWhitelisted(address)\":{\"details\":\"Checks Registry contract for whitelisted status\",\"params\":{\"target\":\"The address to check\"}},\"mint(string,bytes32,uint48,uint48,uint48)\":{\"details\":\"Function to mint tokens.\",\"return\":\"tokenId\"},\"mintWithTokenURI(string,bytes32,uint48,uint48,uint48,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause actions on this contract\"},\"safeMint(string,bytes32,uint48,uint48,uint48)\":{\"details\":\"Function to safely mint tokens.\",\"return\":\"tokenId\"},\"safeMint(string,bytes32,uint48,uint48,uint48,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\"},\"return\":\"tokenId\"},\"safeMintWithTokenURI(string,bytes32,uint48,uint48,uint48,string)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots on      We're not grabbing this from the Registry in case the user has private\"},\"tokenMinterPropertyNames(address,string)\":{\"details\":\"Look up all Property Names a Minter has tokenized on a content ID\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls.\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause the smart contract.\"},\"updateRegistryAddress(address)\":{\"details\":\"Update address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}}}},\"userdoc\":{\"methods\":{\"burn(uint256)\":{\"notice\":\"Customized for Microsponsors\"},\"safeMintWithTokenURI(string,bytes32,uint48,uint48,uint48,string)\":{\"notice\":\"Customized for Microsponsors from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol\"},\"unpause()\":{\"notice\":\"This is public rather than external so it can be called by  derived contracts.\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0x2936618e4d99f29608f6723ccdb470f8073b790ad5937fe8908f37890ecb7099\",\"urls\":[\"bzz-raw://02a7d48570d2ee5d03b87e492c79b26cda0fb79775af599e6c6aedee651c399f\",\"dweb:/ipfs/QmT1RD7UBBTLWT7wZazq9ATi4FATN1MKzTKctzjxQU75SL\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0x3a7de85066f743d397f8b6f5a9a07ada0b0b60ac3b62441be14112a2c6b94306\",\"urls\":[\"bzz-raw://f4917a4e90595f44ce1e86179981e2532630452a9c4973ac06dfa154cd7966e6\",\"dweb:/ipfs/QmaFEK1GEV6hQN3WjDULRsDXQwJvDterEMJA6u5bjVHdhC\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600c60006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506040516200582938038062005829833981810160405262000052919081019062000423565b6200006a6301ffc9a760e01b6200013b60201b60201c565b620000826380ac58cd60e01b6200013b60201b60201c565b620000926200021360201b60201c565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600d9080519060200190620000ea92919062000301565b5081600e90805190602001906200010392919062000301565b506200011c635b5e139f60e01b6200013b60201b60201c565b62000132816200021b60201b62001c0d1760201c565b50505062000663565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019e906200052f565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16620002646200021360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620002bd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002b49062000551565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034457805160ff191683800117855562000375565b8280016001018555821562000375579182015b828111156200037457825182559160200191906001019062000357565b5b50905062000384919062000388565b5090565b620003ad91905b80821115620003a95760008160009055506001016200038f565b5090565b90565b600081519050620003c18162000649565b92915050565b600082601f830112620003d957600080fd5b8151620003f0620003ea82620005a1565b62000573565b915080825260208301602083018583830111156200040d57600080fd5b6200041a83828462000613565b50505092915050565b6000806000606084860312156200043957600080fd5b600084015167ffffffffffffffff8111156200045457600080fd5b6200046286828701620003c7565b935050602084015167ffffffffffffffff8111156200048057600080fd5b6200048e86828701620003c7565b9250506040620004a186828701620003b0565b9150509250925092565b6000620004ba601c83620005ce565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b6000620004fc601b83620005ce565b91507f4552433732313a2063616c6c6572206973206e6f74206f776e657200000000006000830152602082019050919050565b600060208201905081810360008301526200054a81620004ab565b9050919050565b600060208201905081810360008301526200056c81620004ed565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156200059757600080fd5b8060405250919050565b600067ffffffffffffffff821115620005b957600080fd5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b6000620005ec82620005f3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200063357808201518184015260208101905062000616565b8381111562000643576000848401525b50505050565b6200065481620005df565b81146200066057600080fd5b50565b6151b680620006736000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637affcb9a1161011a578063aa271e1a116100ad578063c87b56dd1161007c578063c87b56dd146105fc578063cf74a5ad1461062c578063e5c249241461065c578063e985e9c514610691578063f2fde38b146106c1576101fb565b8063aa271e1a14610564578063aaa83bdb14610594578063b88d4fde146105c4578063c57a8825146105e0576101fb565b80638da5cb5b116100e95780638da5cb5b146104dc57806395d89b41146104fa578063a22cb46514610518578063a4ede12814610534576101fb565b80637affcb9a146104545780637b103999146104845780638456cb59146104a25780638462151c146104ac576101fb565b80633f4ba83a116101925780635c975abb116101615780635c975abb146103a6578063613a8da9146103c45780636352211e146103f457806370a0823114610424576101fb565b80633f4ba83a1461033457806342842e0e1461033e57806342966c681461035a57806349eabf5e14610376576101fb565b806318160ddd116101ce57806318160ddd1461029a57806323b872dd146102b85780633874fd67146102d45780633af32abf14610304576101fb565b806301ffc9a71461020057806306fdde0314610230578063081812fc1461024e578063095ea7b31461027e575b600080fd5b61021a60048036036102159190810190613b3f565b6106dd565b6040516102279190614ae0565b60405180910390f35b610238610744565b6040516102459190614b16565b60405180910390f35b61026860048036036102639190810190613d92565b6107e6565b60405161027591906149ab565b60405180910390f35b61029860048036036102939190810190613ada565b61086b565b005b6102a2610a8f565b6040516102af9190614e38565b60405180910390f35b6102d260048036036102cd919081019061397c565b610aa0565b005b6102ee60048036036102e99190810190613cd9565b610baa565b6040516102fb9190614e38565b60405180910390f35b61031e60048036036103199190810190613917565b610c99565b60405161032b9190614ae0565b60405180910390f35b61033c610d4d565b005b6103586004803603610353919081019061397c565b610e1a565b005b610374600480360361036f9190810190613d92565b610e3a565b005b610390600480360361038b9190810190613c20565b610eb0565b60405161039d9190614e38565b60405180910390f35b6103ae610f96565b6040516103bb9190614ae0565b60405180910390f35b6103de60048036036103d99190810190613cd9565b610fa9565b6040516103eb9190614e38565b60405180910390f35b61040e60048036036104099190810190613d92565b611098565b60405161041b91906149ab565b60405180910390f35b61043e60048036036104399190810190613917565b61114a565b60405161044b9190614e38565b60405180910390f35b61046e60048036036104699190810190613a82565b611209565b60405161047b9190614a7a565b60405180910390f35b61048c611355565b6040516104999190614afb565b60405180910390f35b6104aa61137b565b005b6104c660048036036104c19190810190613917565b611449565b6040516104d39190614abe565b60405180910390f35b6104e4611591565b6040516104f191906149ab565b60405180910390f35b6105026115b7565b60405161050f9190614b16565b60405180910390f35b610532600480360361052d9190810190613a46565b611659565b005b61054e60048036036105499190810190613917565b611843565b60405161055b9190614a9c565b60405180910390f35b61057e60048036036105799190810190613917565b611a0b565b60405161058b9190614ae0565b60405180910390f35b6105ae60048036036105a99190810190613b91565b611a1d565b6040516105bb9190614e38565b60405180910390f35b6105de60048036036105d991908101906139cb565b611b01565b005b6105fa60048036036105f59190810190613917565b611c0d565b005b61061660048036036106119190810190613d92565b611ce8565b6040516106239190614b16565b60405180910390f35b61064660048036036106419190810190613b91565b611de5565b6040516106539190614e38565b60405180910390f35b61067660048036036106719190810190613d92565b611ec9565b60405161068896959493929190614a12565b60405180910390f35b6106ab60048036036106a69190810190613940565b6120ab565b6040516106b89190614ae0565b60405180910390f35b6106db60048036036106d69190810190613917565b61213f565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600d8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107dc5780601f106107b1576101008083540402835291602001916107dc565b820191906000526020600020905b8154815290600101906020018083116107bf57829003601f168201915b5050505050905090565b60006107f18261224f565b610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082790614cf8565b60405180910390fd5b600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61087b6108766122c1565b610c99565b6108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190614e18565b60405180910390fd5b600c60009054906101000a900460ff16156108d457600080fd5b60006108df82611098565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094790614d38565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661096f6122c1565b73ffffffffffffffffffffffffffffffffffffffff16148061099e575061099d816109986122c1565b6120ab565b5b6109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d490614c98565b60405180910390fd5b82600a600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610a9b60036122c9565b905090565b600c60009054906101000a900460ff1615610aba57600080fd5b610acb610ac56122c1565b826122d7565b610b0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0190614d58565b60405180910390fd5b610b1383610c99565b610b52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4990614bf8565b60405180910390fd5b610b5b82610c99565b610b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9190614bf8565b60405180910390fd5b610ba58383836123b5565b505050565b6000610bbc610bb76122c1565b611a0b565b610bfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf290614b58565b60405180910390fd5b600c60009054906101000a900460ff1615610c1557600080fd5b610c208786866125e4565b610c5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5690614c38565b60405180910390fd5b6000610c71610c6c6122c1565b61272d565b9050610c81818989898989612754565b610c8b8184612a75565b809150509695505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633af32abf836040518263ffffffff1660e01b8152600401610cf691906149ab565b60206040518083038186803b158015610d0e57600080fd5b505afa158015610d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d469190810190613b16565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d8e6122c1565b73ffffffffffffffffffffffffffffffffffffffff1614610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb90614db8565b60405180910390fd5b600c60009054906101000a900460ff16610dfd57600080fd5b6000600c60006101000a81548160ff021916908315150217905550565b610e3583838360405180602001604052806000815250611b01565b505050565b600c60009054906101000a900460ff1615610e5457600080fd5b610e65610e5f6122c1565b826122d7565b610ea4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9b90614dd8565b60405180910390fd5b610ead81612ae9565b50565b6000610ec2610ebd6122c1565b611a0b565b610f01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef890614b58565b60405180910390fd5b600c60009054906101000a900460ff1615610f1b57600080fd5b610f268786866125e4565b610f65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5c90614c38565b60405180910390fd5b6000610f78610f726122c1565b84612afe565b9050610f88818989898989612754565b809150509695505050505050565b600c60009054906101000a900460ff1681565b6000610fbb610fb66122c1565b611a0b565b610ffa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff190614b58565b60405180910390fd5b600c60009054906101000a900460ff161561101457600080fd5b61101f8786866125e4565b61105e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105590614c38565b60405180910390fd5b600061107061106b6122c1565b612b62565b9050611080818989898989612754565b61108a8184612a75565b809150509695505050505050565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113890614cd8565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b290614c78565b60405180910390fd5b611202600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206122c9565b9050919050565b606080600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848460405161125b92919061497b565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156112c15783829060005260206000200160405180602001604052908160008201548152505081526020019060010190611289565b505050509050606081516040519080825280602002602001820160405280156112f95781602001602082028038833980820191505090505b50905060008090505b82518110156113485782818151811061131757fe5b60200260200101516000015182828151811061132f57fe5b6020026020010181815250508080600101915050611302565b5080925050509392505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113bc6122c1565b73ffffffffffffffffffffffffffffffffffffffff1614611412576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140990614db8565b60405180910390fd5b600c60009054906101000a900460ff161561142c57600080fd5b6001600c60006101000a81548160ff021916908315150217905550565b606060006114568361114a565b9050600081141561149a5760006040519080825280602002602001820160405280156114915781602001602082028038833980820191505090505b5091505061158c565b6060816040519080825280602002602001820160405280156114cb5781602001602082028038833980820191505090505b50905060006114d8610a8f565b905060008090506000600190505b828111611583578673ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611576578084838151811061156157fe5b60200260200101818152505081806001019250505b80806001019150506114e6565b83955050505050505b919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600e8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561164f5780601f106116245761010080835404028352916020019161164f565b820191906000526020600020905b81548152906001019060200180831161163257829003601f168201915b5050505050905090565b6116696116646122c1565b610c99565b6116a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169f90614e18565b60405180910390fd5b600c60009054906101000a900460ff16156116c257600080fd5b6116ca6122c1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172f90614bb8565b60405180910390fd5b80600b60006117456122c1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166117f26122c1565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118379190614ae0565b60405180910390a35050565b606080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561197557838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561195d5780601f106119325761010080835404028352916020019161195d565b820191906000526020600020905b81548152906001019060200180831161194057829003601f168201915b505050505081525050815260200190600101906118a5565b505050509050606081516040519080825280602002602001820160405280156119b257816020015b606081526020019060019003908161199d5790505b50905060008090505b8251811015611a00578281815181106119d057fe5b6020026020010151600001518282815181106119e857fe5b602002602001018190525080806001019150506119bb565b508092505050919050565b6000611a1682610c99565b9050919050565b6000611a2f611a2a6122c1565b611a0b565b611a6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6590614b58565b60405180910390fd5b600c60009054906101000a900460ff1615611a8857600080fd5b611a938685856125e4565b611ad2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ac990614c38565b60405180910390fd5b6000611ae4611adf6122c1565b612b62565b9050611af4818888888888612754565b8091505095945050505050565b600c60009054906101000a900460ff1615611b1b57600080fd5b611b2484610c99565b611b63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5a90614bf8565b60405180910390fd5b611b6c83610c99565b611bab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba290614bf8565b60405180910390fd5b611bbc611bb66122c1565b836122d7565b611bfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bf290614d58565b60405180910390fd5b611c0784848484612ce9565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611c4e6122c1565b73ffffffffffffffffffffffffffffffffffffffff1614611ca4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c9b90614db8565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060611cf38261224f565b611d32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2990614df8565b60405180910390fd5b600960008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611dd95780601f10611dae57610100808354040283529160200191611dd9565b820191906000526020600020905b815481529060010190602001808311611dbc57829003601f168201915b50505050509050919050565b6000611df7611df26122c1565b611a0b565b611e36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2d90614b58565b60405180910390fd5b600c60009054906101000a900460ff1615611e5057600080fd5b611e5b8685856125e4565b611e9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9190614c38565b60405180910390fd5b6000611eac611ea76122c1565b61272d565b9050611ebc818888888888612754565b8091505095945050505050565b60006060600080600080611edc8761224f565b611f1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1290614c18565b60405180910390fd5b6006600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660066000898152602001908152602001600020600101600660008a815260200190815260200160002060020154600660008b815260200190815260200160002060030160009054906101000a900465ffffffffffff16600660008c815260200190815260200160002060030160069054906101000a900465ffffffffffff16600660008d8152602001908152602001600020600301600c9054906101000a900465ffffffffffff16848054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561208f5780601f106120645761010080835404028352916020019161208f565b820191906000526020600020905b81548152906001019060200180831161207257829003601f168201915b5050505050945095509550955095509550955091939550919395565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166121806122c1565b73ffffffffffffffffffffffffffffffffffffffff16146121d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121cd90614db8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461224c5780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b600081600001549050919050565b60006122e28261224f565b612321576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161231890614bd8565b60405180910390fd5b600061232c83611098565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061239b57508373ffffffffffffffffffffffffffffffffffffffff16612383846107e6565b73ffffffffffffffffffffffffffffffffffffffff16145b806123ac57506123ab81856120ab565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166123d582611098565b73ffffffffffffffffffffffffffffffffffffffff161461242b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161242290614d18565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561249b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161249290614b98565b60405180910390fd5b6124a481612d45565b6124eb600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612e03565b612532600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612e26565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166347ba747a856040518263ffffffff1660e01b81526004016126419190614b16565b60206040518083038186803b15801561265957600080fd5b505afa15801561266d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126919190810190613b16565b6126d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126c790614c58565b60405180910390fd5b8265ffffffffffff168265ffffffffffff1611612722576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161271990614b78565b60405180910390fd5b600190509392505050565b6000806127498360405180602001604052806000815250612afe565b905080915050919050565b61275d8661224f565b61279c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161279390614d98565b60405180910390fd5b6127a46135a9565b6040518060c001604052806127b76122c1565b73ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018565ffffffffffff1681526020018465ffffffffffff1681526020018365ffffffffffff168152509050806006600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061287f929190613610565b506040820151816002015560608201518160030160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060808201518160030160066101000a81548165ffffffffffff021916908365ffffffffffff16021790555060a082015181600301600c6101000a81548165ffffffffffff021916908365ffffffffffff16021790555090505061291786612e3c565b6129b857600860006129276122c1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180602001604052808881525090806001815401808255809150509060018203906000526020600020016000909192909190915060008201518160000190805190602001906129b3929190613610565b505050505b6129c28686612fcc565b612a6c57600760006129d26122c1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002086604051612a1a9190614994565b9081526020016040518091039020604051806020016040528087815250908060018154018082558091505090600182039060005260206000200160009091929091909150600082015181600001555050505b50505050505050565b612a7e8261224f565b612abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ab490614d98565b60405180910390fd5b80600960008481526020019081526020016000209080519060200190612ae4929190613690565b505050565b612afb612af582611098565b826130da565b50565b600080612b0a84612b62565b9050612b196000858386613342565b612b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b4f90614b38565b60405180910390fd5b8091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bca90614cb8565b60405180910390fd5b612bdd6003612e26565b6000612be960036122c9565b9050826004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612c84600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612e26565b808373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480915050919050565b612cf48484846123b5565b612d0084848484613342565b612d3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d3690614b38565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612e00576000600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612e1b6001826000015461346090919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b60006060600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015612f6f57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612f575780601f10612f2c57610100808354040283529160200191612f57565b820191906000526020600020905b815481529060010190602001808311612f3a57829003601f168201915b50505050508152505081526020019060010190612e9f565b505050509050600080905060008090505b8251811015612fc157612faa85848381518110612f9957fe5b6020026020010151600001516134aa565b15612fb457600191505b8080600101915050612f80565b508092505050919050565b60006060600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208460405161301d9190614994565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015613083578382906000526020600020016040518060200160405290816000820154815250508152602001906001019061304b565b505050509050600080905060008090505b82518110156130ce578281815181106130a957fe5b6020026020010151600001518514156130c157600191505b8080600101915050613094565b50809250505092915050565b8173ffffffffffffffffffffffffffffffffffffffff166130fa82611098565b73ffffffffffffffffffffffffffffffffffffffff1614613150576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161314790614d78565b60405180910390fd5b61315981612d45565b6131a0600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612e03565b60006004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006009600083815260200190815260200160002080546001816001161561010002031660029004905014613242576009600082815260200190815260200160002060006132419190613710565b5b60066000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600061328d9190613710565b60028201600090556003820160006101000a81549065ffffffffffff02191690556003820160066101000a81549065ffffffffffff021916905560038201600c6101000a81549065ffffffffffff0219169055505080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006133638473ffffffffffffffffffffffffffffffffffffffff16613503565b6133705760019050613458565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a026133966122c1565b8887876040518563ffffffff1660e01b81526004016133b894939291906149c6565b602060405180830381600087803b1580156133d257600080fd5b505af11580156133e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061340a9190810190613b68565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60006134a283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061354e565b905092915050565b6000816040516020016134bd9190614994565b60405160208183030381529060405280519060200120836040516020016134e49190614994565b6040516020818303038152906040528051906020012014905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156135455750808214155b92505050919050565b6000838311158290613596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161358d9190614b16565b60405180910390fd5b5060008385039050809150509392505050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008019168152602001600065ffffffffffff168152602001600065ffffffffffff168152602001600065ffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061365157805160ff191683800117855561367f565b8280016001018555821561367f579182015b8281111561367e578251825591602001919060010190613663565b5b50905061368c9190613758565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106136d157805160ff19168380011785556136ff565b828001600101855582156136ff579182015b828111156136fe5782518255916020019190600101906136e3565b5b50905061370c9190613758565b5090565b50805460018160011615610100020316600290046000825580601f106137365750613755565b601f0160209004906000526020600020908101906137549190613758565b5b50565b61377a91905b8082111561377657600081600090555060010161375e565b5090565b90565b60008135905061378c816150e9565b92915050565b6000813590506137a181615100565b92915050565b6000815190506137b681615100565b92915050565b6000813590506137cb81615117565b92915050565b6000813590506137e08161512e565b92915050565b6000815190506137f58161512e565b92915050565b600082601f83011261380c57600080fd5b813561381f61381a82614e80565b614e53565b9150808252602083016020830185838301111561383b57600080fd5b613846838284615096565b50505092915050565b60008083601f84011261386157600080fd5b8235905067ffffffffffffffff81111561387a57600080fd5b60208301915083600182028301111561389257600080fd5b9250929050565b600082601f8301126138aa57600080fd5b81356138bd6138b882614eac565b614e53565b915080825260208301602083018583830111156138d957600080fd5b6138e4838284615096565b50505092915050565b6000813590506138fc81615145565b92915050565b6000813590506139118161515c565b92915050565b60006020828403121561392957600080fd5b60006139378482850161377d565b91505092915050565b6000806040838503121561395357600080fd5b60006139618582860161377d565b92505060206139728582860161377d565b9150509250929050565b60008060006060848603121561399157600080fd5b600061399f8682870161377d565b93505060206139b08682870161377d565b92505060406139c1868287016138ed565b9150509250925092565b600080600080608085870312156139e157600080fd5b60006139ef8782880161377d565b9450506020613a008782880161377d565b9350506040613a11878288016138ed565b925050606085013567ffffffffffffffff811115613a2e57600080fd5b613a3a878288016137fb565b91505092959194509250565b60008060408385031215613a5957600080fd5b6000613a678582860161377d565b9250506020613a7885828601613792565b9150509250929050565b600080600060408486031215613a9757600080fd5b6000613aa58682870161377d565b935050602084013567ffffffffffffffff811115613ac257600080fd5b613ace8682870161384f565b92509250509250925092565b60008060408385031215613aed57600080fd5b6000613afb8582860161377d565b9250506020613b0c858286016138ed565b9150509250929050565b600060208284031215613b2857600080fd5b6000613b36848285016137a7565b91505092915050565b600060208284031215613b5157600080fd5b6000613b5f848285016137d1565b91505092915050565b600060208284031215613b7a57600080fd5b6000613b88848285016137e6565b91505092915050565b600080600080600060a08688031215613ba957600080fd5b600086013567ffffffffffffffff811115613bc357600080fd5b613bcf88828901613899565b9550506020613be0888289016137bc565b9450506040613bf188828901613902565b9350506060613c0288828901613902565b9250506080613c1388828901613902565b9150509295509295909350565b60008060008060008060c08789031215613c3957600080fd5b600087013567ffffffffffffffff811115613c5357600080fd5b613c5f89828a01613899565b9650506020613c7089828a016137bc565b9550506040613c8189828a01613902565b9450506060613c9289828a01613902565b9350506080613ca389828a01613902565b92505060a087013567ffffffffffffffff811115613cc057600080fd5b613ccc89828a016137fb565b9150509295509295509295565b60008060008060008060c08789031215613cf257600080fd5b600087013567ffffffffffffffff811115613d0c57600080fd5b613d1889828a01613899565b9650506020613d2989828a016137bc565b9550506040613d3a89828a01613902565b9450506060613d4b89828a01613902565b9350506080613d5c89828a01613902565b92505060a087013567ffffffffffffffff811115613d7957600080fd5b613d8589828a01613899565b9150509295509295509295565b600060208284031215613da457600080fd5b6000613db2848285016138ed565b91505092915050565b6000613dc78383613f4e565b60208301905092915050565b6000613ddf8383614043565b905092915050565b6000613df3838361494e565b60208301905092915050565b613e0881614fe2565b82525050565b6000613e1982614f08565b613e238185614f71565b9350613e2e83614ed8565b8060005b83811015613e5f578151613e468882613dbb565b9750613e5183614f4a565b925050600181019050613e32565b5085935050505092915050565b6000613e7782614f13565b613e818185614f82565b935083602082028501613e9385614ee8565b8060005b85811015613ecf5784840389528151613eb08582613dd3565b9450613ebb83614f57565b925060208a01995050600181019050613e97565b50829750879550505050505092915050565b6000613eec82614f1e565b613ef68185614f93565b9350613f0183614ef8565b8060005b83811015613f32578151613f198882613de7565b9750613f2483614f64565b925050600181019050613f05565b5085935050505092915050565b613f4881614ff4565b82525050565b613f5781615000565b82525050565b613f6681615000565b82525050565b6000613f7782614f29565b613f818185614fa4565b9350613f918185602086016150a5565b613f9a816150d8565b840191505092915050565b613fae81615072565b82525050565b6000613fc08385614fd7565b9350613fcd838584615096565b82840190509392505050565b6000613fe482614f3f565b613fee8185614fc6565b9350613ffe8185602086016150a5565b614007816150d8565b840191505092915050565b600061401d82614f3f565b6140278185614fd7565b93506140378185602086016150a5565b80840191505092915050565b600061404e82614f34565b6140588185614fb5565b93506140688185602086016150a5565b614071816150d8565b840191505092915050565b6000614089603283614fc6565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006140ef603583614fc6565b91507f4552433732313a2063616c6c6572206973206e6f742077686974656c6973746560008301527f6420666f7220746865204d696e74657220726f6c6500000000000000000000006020830152604082019050919050565b6000614155602a83614fc6565b91507f4552433732313a2073746172742074696d65206d757374206265206265666f7260008301527f6520656e642074696d65000000000000000000000000000000000000000000006020830152604082019050919050565b60006141bb602483614fc6565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614221601983614fc6565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000614261602c83614fc6565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006142c7603483614fc6565b91507f4552433732313a207472616e73666572207265737472696374656420746f207760008301527f686974656c6973746564206164647265737365730000000000000000000000006020830152604082019050919050565b600061432d603083614fc6565b91507f4552433732313a2054696d6520736c6f7420717565727920666f72206e6f6e6560008301527f78697374656e7420746f6b656e206964000000000000000000000000000000006020830152604082019050919050565b6000614393601983614fc6565b91507f4552433732313a20696e76616c69642074696d6520736c6f74000000000000006000830152602082019050919050565b60006143d3602e83614fc6565b91507f4552433732313a20636f6e74656e74206964206973206e6f742072656769737460008301527f6572656420746f2063616c6c65720000000000000000000000000000000000006020830152604082019050919050565b6000614439602a83614fc6565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b600061449f603e83614fc6565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008301527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006020830152604082019050919050565b6000614505602083614fc6565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000614545602f83614fc6565b91507f4552433732313a20746f6b656e206f776e657220717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b60006145ab602c83614fc6565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000614611602983614fc6565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000614677601d83614fc6565b91507f4552433732313a20617070726f76616c20697320726564756e64616e740000006000830152602082019050919050565b60006146b7603183614fc6565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b600061471d602583614fc6565b91507f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f60008301527f74206f776e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614783602483614fc6565b91507f4552433732313a2055524920736574206f66206e6f6e6578697374656e74207460008301527f6f6b656e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006147e9601b83614fc6565b91507f4552433732313a2063616c6c6572206973206e6f74206f776e657200000000006000830152602082019050919050565b6000614829602e83614fc6565b91507f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008301527f72206e6f7220617070726f7665640000000000000000000000000000000000006020830152604082019050919050565b600061488f602783614fc6565b91507f4552433732313a2055524920717565727920666f72206e6f6e6578697374656e60008301527f7420746f6b656e000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006148f5602183614fc6565b91507f4552433732313a2063616c6c6572206973206e6f742077686974656c6973746560008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61495781615056565b82525050565b61496681615056565b82525050565b61497581615060565b82525050565b6000614988828486613fb4565b91508190509392505050565b60006149a08284614012565b915081905092915050565b60006020820190506149c06000830184613dff565b92915050565b60006080820190506149db6000830187613dff565b6149e86020830186613dff565b6149f5604083018561495d565b8181036060830152614a078184613f6c565b905095945050505050565b600060c082019050614a276000830189613dff565b8181036020830152614a398188613fd9565b9050614a486040830187613f5d565b614a55606083018661496c565b614a62608083018561496c565b614a6f60a083018461496c565b979650505050505050565b60006020820190508181036000830152614a948184613e0e565b905092915050565b60006020820190508181036000830152614ab68184613e6c565b905092915050565b60006020820190508181036000830152614ad88184613ee1565b905092915050565b6000602082019050614af56000830184613f3f565b92915050565b6000602082019050614b106000830184613fa5565b92915050565b60006020820190508181036000830152614b308184613fd9565b905092915050565b60006020820190508181036000830152614b518161407c565b9050919050565b60006020820190508181036000830152614b71816140e2565b9050919050565b60006020820190508181036000830152614b9181614148565b9050919050565b60006020820190508181036000830152614bb1816141ae565b9050919050565b60006020820190508181036000830152614bd181614214565b9050919050565b60006020820190508181036000830152614bf181614254565b9050919050565b60006020820190508181036000830152614c11816142ba565b9050919050565b60006020820190508181036000830152614c3181614320565b9050919050565b60006020820190508181036000830152614c5181614386565b9050919050565b60006020820190508181036000830152614c71816143c6565b9050919050565b60006020820190508181036000830152614c918161442c565b9050919050565b60006020820190508181036000830152614cb181614492565b9050919050565b60006020820190508181036000830152614cd1816144f8565b9050919050565b60006020820190508181036000830152614cf181614538565b9050919050565b60006020820190508181036000830152614d118161459e565b9050919050565b60006020820190508181036000830152614d3181614604565b9050919050565b60006020820190508181036000830152614d518161466a565b9050919050565b60006020820190508181036000830152614d71816146aa565b9050919050565b60006020820190508181036000830152614d9181614710565b9050919050565b60006020820190508181036000830152614db181614776565b9050919050565b60006020820190508181036000830152614dd1816147dc565b9050919050565b60006020820190508181036000830152614df18161481c565b9050919050565b60006020820190508181036000830152614e1181614882565b9050919050565b60006020820190508181036000830152614e31816148e8565b9050919050565b6000602082019050614e4d600083018461495d565b92915050565b6000604051905081810181811067ffffffffffffffff82111715614e7657600080fd5b8060405250919050565b600067ffffffffffffffff821115614e9757600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115614ec357600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614fed82615036565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600065ffffffffffff82169050919050565b600061507d82615084565b9050919050565b600061508f82615036565b9050919050565b82818337600083830152505050565b60005b838110156150c35780820151818401526020810190506150a8565b838111156150d2576000848401525b50505050565b6000601f19601f8301169050919050565b6150f281614fe2565b81146150fd57600080fd5b50565b61510981614ff4565b811461511457600080fd5b50565b61512081615000565b811461512b57600080fd5b50565b6151378161500a565b811461514257600080fd5b50565b61514e81615056565b811461515957600080fd5b50565b61516581615060565b811461517057600080fd5b5056fea365627a7a72315820ea2f5d2449a9ff6c5518bc11a122932d899a12f029a7c893dea57d99ce171d236c6578706572696d656e74616cf564736f6c634300050b0040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637affcb9a1161011a578063aa271e1a116100ad578063c87b56dd1161007c578063c87b56dd146105fc578063cf74a5ad1461062c578063e5c249241461065c578063e985e9c514610691578063f2fde38b146106c1576101fb565b8063aa271e1a14610564578063aaa83bdb14610594578063b88d4fde146105c4578063c57a8825146105e0576101fb565b80638da5cb5b116100e95780638da5cb5b146104dc57806395d89b41146104fa578063a22cb46514610518578063a4ede12814610534576101fb565b80637affcb9a146104545780637b103999146104845780638456cb59146104a25780638462151c146104ac576101fb565b80633f4ba83a116101925780635c975abb116101615780635c975abb146103a6578063613a8da9146103c45780636352211e146103f457806370a0823114610424576101fb565b80633f4ba83a1461033457806342842e0e1461033e57806342966c681461035a57806349eabf5e14610376576101fb565b806318160ddd116101ce57806318160ddd1461029a57806323b872dd146102b85780633874fd67146102d45780633af32abf14610304576101fb565b806301ffc9a71461020057806306fdde0314610230578063081812fc1461024e578063095ea7b31461027e575b600080fd5b61021a60048036036102159190810190613b3f565b6106dd565b6040516102279190614ae0565b60405180910390f35b610238610744565b6040516102459190614b16565b60405180910390f35b61026860048036036102639190810190613d92565b6107e6565b60405161027591906149ab565b60405180910390f35b61029860048036036102939190810190613ada565b61086b565b005b6102a2610a8f565b6040516102af9190614e38565b60405180910390f35b6102d260048036036102cd919081019061397c565b610aa0565b005b6102ee60048036036102e99190810190613cd9565b610baa565b6040516102fb9190614e38565b60405180910390f35b61031e60048036036103199190810190613917565b610c99565b60405161032b9190614ae0565b60405180910390f35b61033c610d4d565b005b6103586004803603610353919081019061397c565b610e1a565b005b610374600480360361036f9190810190613d92565b610e3a565b005b610390600480360361038b9190810190613c20565b610eb0565b60405161039d9190614e38565b60405180910390f35b6103ae610f96565b6040516103bb9190614ae0565b60405180910390f35b6103de60048036036103d99190810190613cd9565b610fa9565b6040516103eb9190614e38565b60405180910390f35b61040e60048036036104099190810190613d92565b611098565b60405161041b91906149ab565b60405180910390f35b61043e60048036036104399190810190613917565b61114a565b60405161044b9190614e38565b60405180910390f35b61046e60048036036104699190810190613a82565b611209565b60405161047b9190614a7a565b60405180910390f35b61048c611355565b6040516104999190614afb565b60405180910390f35b6104aa61137b565b005b6104c660048036036104c19190810190613917565b611449565b6040516104d39190614abe565b60405180910390f35b6104e4611591565b6040516104f191906149ab565b60405180910390f35b6105026115b7565b60405161050f9190614b16565b60405180910390f35b610532600480360361052d9190810190613a46565b611659565b005b61054e60048036036105499190810190613917565b611843565b60405161055b9190614a9c565b60405180910390f35b61057e60048036036105799190810190613917565b611a0b565b60405161058b9190614ae0565b60405180910390f35b6105ae60048036036105a99190810190613b91565b611a1d565b6040516105bb9190614e38565b60405180910390f35b6105de60048036036105d991908101906139cb565b611b01565b005b6105fa60048036036105f59190810190613917565b611c0d565b005b61061660048036036106119190810190613d92565b611ce8565b6040516106239190614b16565b60405180910390f35b61064660048036036106419190810190613b91565b611de5565b6040516106539190614e38565b60405180910390f35b61067660048036036106719190810190613d92565b611ec9565b60405161068896959493929190614a12565b60405180910390f35b6106ab60048036036106a69190810190613940565b6120ab565b6040516106b89190614ae0565b60405180910390f35b6106db60048036036106d69190810190613917565b61213f565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600d8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107dc5780601f106107b1576101008083540402835291602001916107dc565b820191906000526020600020905b8154815290600101906020018083116107bf57829003601f168201915b5050505050905090565b60006107f18261224f565b610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082790614cf8565b60405180910390fd5b600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61087b6108766122c1565b610c99565b6108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190614e18565b60405180910390fd5b600c60009054906101000a900460ff16156108d457600080fd5b60006108df82611098565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094790614d38565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661096f6122c1565b73ffffffffffffffffffffffffffffffffffffffff16148061099e575061099d816109986122c1565b6120ab565b5b6109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d490614c98565b60405180910390fd5b82600a600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610a9b60036122c9565b905090565b600c60009054906101000a900460ff1615610aba57600080fd5b610acb610ac56122c1565b826122d7565b610b0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0190614d58565b60405180910390fd5b610b1383610c99565b610b52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4990614bf8565b60405180910390fd5b610b5b82610c99565b610b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9190614bf8565b60405180910390fd5b610ba58383836123b5565b505050565b6000610bbc610bb76122c1565b611a0b565b610bfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf290614b58565b60405180910390fd5b600c60009054906101000a900460ff1615610c1557600080fd5b610c208786866125e4565b610c5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5690614c38565b60405180910390fd5b6000610c71610c6c6122c1565b61272d565b9050610c81818989898989612754565b610c8b8184612a75565b809150509695505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633af32abf836040518263ffffffff1660e01b8152600401610cf691906149ab565b60206040518083038186803b158015610d0e57600080fd5b505afa158015610d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d469190810190613b16565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d8e6122c1565b73ffffffffffffffffffffffffffffffffffffffff1614610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb90614db8565b60405180910390fd5b600c60009054906101000a900460ff16610dfd57600080fd5b6000600c60006101000a81548160ff021916908315150217905550565b610e3583838360405180602001604052806000815250611b01565b505050565b600c60009054906101000a900460ff1615610e5457600080fd5b610e65610e5f6122c1565b826122d7565b610ea4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9b90614dd8565b60405180910390fd5b610ead81612ae9565b50565b6000610ec2610ebd6122c1565b611a0b565b610f01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef890614b58565b60405180910390fd5b600c60009054906101000a900460ff1615610f1b57600080fd5b610f268786866125e4565b610f65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5c90614c38565b60405180910390fd5b6000610f78610f726122c1565b84612afe565b9050610f88818989898989612754565b809150509695505050505050565b600c60009054906101000a900460ff1681565b6000610fbb610fb66122c1565b611a0b565b610ffa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff190614b58565b60405180910390fd5b600c60009054906101000a900460ff161561101457600080fd5b61101f8786866125e4565b61105e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105590614c38565b60405180910390fd5b600061107061106b6122c1565b612b62565b9050611080818989898989612754565b61108a8184612a75565b809150509695505050505050565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113890614cd8565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b290614c78565b60405180910390fd5b611202600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206122c9565b9050919050565b606080600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848460405161125b92919061497b565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156112c15783829060005260206000200160405180602001604052908160008201548152505081526020019060010190611289565b505050509050606081516040519080825280602002602001820160405280156112f95781602001602082028038833980820191505090505b50905060008090505b82518110156113485782818151811061131757fe5b60200260200101516000015182828151811061132f57fe5b6020026020010181815250508080600101915050611302565b5080925050509392505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113bc6122c1565b73ffffffffffffffffffffffffffffffffffffffff1614611412576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140990614db8565b60405180910390fd5b600c60009054906101000a900460ff161561142c57600080fd5b6001600c60006101000a81548160ff021916908315150217905550565b606060006114568361114a565b9050600081141561149a5760006040519080825280602002602001820160405280156114915781602001602082028038833980820191505090505b5091505061158c565b6060816040519080825280602002602001820160405280156114cb5781602001602082028038833980820191505090505b50905060006114d8610a8f565b905060008090506000600190505b828111611583578673ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611576578084838151811061156157fe5b60200260200101818152505081806001019250505b80806001019150506114e6565b83955050505050505b919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600e8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561164f5780601f106116245761010080835404028352916020019161164f565b820191906000526020600020905b81548152906001019060200180831161163257829003601f168201915b5050505050905090565b6116696116646122c1565b610c99565b6116a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169f90614e18565b60405180910390fd5b600c60009054906101000a900460ff16156116c257600080fd5b6116ca6122c1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172f90614bb8565b60405180910390fd5b80600b60006117456122c1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166117f26122c1565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118379190614ae0565b60405180910390a35050565b606080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561197557838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561195d5780601f106119325761010080835404028352916020019161195d565b820191906000526020600020905b81548152906001019060200180831161194057829003601f168201915b505050505081525050815260200190600101906118a5565b505050509050606081516040519080825280602002602001820160405280156119b257816020015b606081526020019060019003908161199d5790505b50905060008090505b8251811015611a00578281815181106119d057fe5b6020026020010151600001518282815181106119e857fe5b602002602001018190525080806001019150506119bb565b508092505050919050565b6000611a1682610c99565b9050919050565b6000611a2f611a2a6122c1565b611a0b565b611a6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6590614b58565b60405180910390fd5b600c60009054906101000a900460ff1615611a8857600080fd5b611a938685856125e4565b611ad2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ac990614c38565b60405180910390fd5b6000611ae4611adf6122c1565b612b62565b9050611af4818888888888612754565b8091505095945050505050565b600c60009054906101000a900460ff1615611b1b57600080fd5b611b2484610c99565b611b63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5a90614bf8565b60405180910390fd5b611b6c83610c99565b611bab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba290614bf8565b60405180910390fd5b611bbc611bb66122c1565b836122d7565b611bfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bf290614d58565b60405180910390fd5b611c0784848484612ce9565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611c4e6122c1565b73ffffffffffffffffffffffffffffffffffffffff1614611ca4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c9b90614db8565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060611cf38261224f565b611d32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2990614df8565b60405180910390fd5b600960008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611dd95780601f10611dae57610100808354040283529160200191611dd9565b820191906000526020600020905b815481529060010190602001808311611dbc57829003601f168201915b50505050509050919050565b6000611df7611df26122c1565b611a0b565b611e36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2d90614b58565b60405180910390fd5b600c60009054906101000a900460ff1615611e5057600080fd5b611e5b8685856125e4565b611e9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9190614c38565b60405180910390fd5b6000611eac611ea76122c1565b61272d565b9050611ebc818888888888612754565b8091505095945050505050565b60006060600080600080611edc8761224f565b611f1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1290614c18565b60405180910390fd5b6006600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660066000898152602001908152602001600020600101600660008a815260200190815260200160002060020154600660008b815260200190815260200160002060030160009054906101000a900465ffffffffffff16600660008c815260200190815260200160002060030160069054906101000a900465ffffffffffff16600660008d8152602001908152602001600020600301600c9054906101000a900465ffffffffffff16848054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561208f5780601f106120645761010080835404028352916020019161208f565b820191906000526020600020905b81548152906001019060200180831161207257829003601f168201915b5050505050945095509550955095509550955091939550919395565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166121806122c1565b73ffffffffffffffffffffffffffffffffffffffff16146121d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121cd90614db8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461224c5780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b600081600001549050919050565b60006122e28261224f565b612321576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161231890614bd8565b60405180910390fd5b600061232c83611098565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061239b57508373ffffffffffffffffffffffffffffffffffffffff16612383846107e6565b73ffffffffffffffffffffffffffffffffffffffff16145b806123ac57506123ab81856120ab565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166123d582611098565b73ffffffffffffffffffffffffffffffffffffffff161461242b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161242290614d18565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561249b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161249290614b98565b60405180910390fd5b6124a481612d45565b6124eb600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612e03565b612532600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612e26565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166347ba747a856040518263ffffffff1660e01b81526004016126419190614b16565b60206040518083038186803b15801561265957600080fd5b505afa15801561266d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126919190810190613b16565b6126d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126c790614c58565b60405180910390fd5b8265ffffffffffff168265ffffffffffff1611612722576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161271990614b78565b60405180910390fd5b600190509392505050565b6000806127498360405180602001604052806000815250612afe565b905080915050919050565b61275d8661224f565b61279c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161279390614d98565b60405180910390fd5b6127a46135a9565b6040518060c001604052806127b76122c1565b73ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018565ffffffffffff1681526020018465ffffffffffff1681526020018365ffffffffffff168152509050806006600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061287f929190613610565b506040820151816002015560608201518160030160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060808201518160030160066101000a81548165ffffffffffff021916908365ffffffffffff16021790555060a082015181600301600c6101000a81548165ffffffffffff021916908365ffffffffffff16021790555090505061291786612e3c565b6129b857600860006129276122c1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180602001604052808881525090806001815401808255809150509060018203906000526020600020016000909192909190915060008201518160000190805190602001906129b3929190613610565b505050505b6129c28686612fcc565b612a6c57600760006129d26122c1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002086604051612a1a9190614994565b9081526020016040518091039020604051806020016040528087815250908060018154018082558091505090600182039060005260206000200160009091929091909150600082015181600001555050505b50505050505050565b612a7e8261224f565b612abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ab490614d98565b60405180910390fd5b80600960008481526020019081526020016000209080519060200190612ae4929190613690565b505050565b612afb612af582611098565b826130da565b50565b600080612b0a84612b62565b9050612b196000858386613342565b612b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b4f90614b38565b60405180910390fd5b8091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bca90614cb8565b60405180910390fd5b612bdd6003612e26565b6000612be960036122c9565b9050826004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612c84600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612e26565b808373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480915050919050565b612cf48484846123b5565b612d0084848484613342565b612d3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d3690614b38565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612e00576000600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612e1b6001826000015461346090919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b60006060600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015612f6f57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612f575780601f10612f2c57610100808354040283529160200191612f57565b820191906000526020600020905b815481529060010190602001808311612f3a57829003601f168201915b50505050508152505081526020019060010190612e9f565b505050509050600080905060008090505b8251811015612fc157612faa85848381518110612f9957fe5b6020026020010151600001516134aa565b15612fb457600191505b8080600101915050612f80565b508092505050919050565b60006060600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208460405161301d9190614994565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015613083578382906000526020600020016040518060200160405290816000820154815250508152602001906001019061304b565b505050509050600080905060008090505b82518110156130ce578281815181106130a957fe5b6020026020010151600001518514156130c157600191505b8080600101915050613094565b50809250505092915050565b8173ffffffffffffffffffffffffffffffffffffffff166130fa82611098565b73ffffffffffffffffffffffffffffffffffffffff1614613150576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161314790614d78565b60405180910390fd5b61315981612d45565b6131a0600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612e03565b60006004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006009600083815260200190815260200160002080546001816001161561010002031660029004905014613242576009600082815260200190815260200160002060006132419190613710565b5b60066000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600061328d9190613710565b60028201600090556003820160006101000a81549065ffffffffffff02191690556003820160066101000a81549065ffffffffffff021916905560038201600c6101000a81549065ffffffffffff0219169055505080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006133638473ffffffffffffffffffffffffffffffffffffffff16613503565b6133705760019050613458565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a026133966122c1565b8887876040518563ffffffff1660e01b81526004016133b894939291906149c6565b602060405180830381600087803b1580156133d257600080fd5b505af11580156133e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061340a9190810190613b68565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60006134a283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061354e565b905092915050565b6000816040516020016134bd9190614994565b60405160208183030381529060405280519060200120836040516020016134e49190614994565b6040516020818303038152906040528051906020012014905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156135455750808214155b92505050919050565b6000838311158290613596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161358d9190614b16565b60405180910390fd5b5060008385039050809150509392505050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008019168152602001600065ffffffffffff168152602001600065ffffffffffff168152602001600065ffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061365157805160ff191683800117855561367f565b8280016001018555821561367f579182015b8281111561367e578251825591602001919060010190613663565b5b50905061368c9190613758565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106136d157805160ff19168380011785556136ff565b828001600101855582156136ff579182015b828111156136fe5782518255916020019190600101906136e3565b5b50905061370c9190613758565b5090565b50805460018160011615610100020316600290046000825580601f106137365750613755565b601f0160209004906000526020600020908101906137549190613758565b5b50565b61377a91905b8082111561377657600081600090555060010161375e565b5090565b90565b60008135905061378c816150e9565b92915050565b6000813590506137a181615100565b92915050565b6000815190506137b681615100565b92915050565b6000813590506137cb81615117565b92915050565b6000813590506137e08161512e565b92915050565b6000815190506137f58161512e565b92915050565b600082601f83011261380c57600080fd5b813561381f61381a82614e80565b614e53565b9150808252602083016020830185838301111561383b57600080fd5b613846838284615096565b50505092915050565b60008083601f84011261386157600080fd5b8235905067ffffffffffffffff81111561387a57600080fd5b60208301915083600182028301111561389257600080fd5b9250929050565b600082601f8301126138aa57600080fd5b81356138bd6138b882614eac565b614e53565b915080825260208301602083018583830111156138d957600080fd5b6138e4838284615096565b50505092915050565b6000813590506138fc81615145565b92915050565b6000813590506139118161515c565b92915050565b60006020828403121561392957600080fd5b60006139378482850161377d565b91505092915050565b6000806040838503121561395357600080fd5b60006139618582860161377d565b92505060206139728582860161377d565b9150509250929050565b60008060006060848603121561399157600080fd5b600061399f8682870161377d565b93505060206139b08682870161377d565b92505060406139c1868287016138ed565b9150509250925092565b600080600080608085870312156139e157600080fd5b60006139ef8782880161377d565b9450506020613a008782880161377d565b9350506040613a11878288016138ed565b925050606085013567ffffffffffffffff811115613a2e57600080fd5b613a3a878288016137fb565b91505092959194509250565b60008060408385031215613a5957600080fd5b6000613a678582860161377d565b9250506020613a7885828601613792565b9150509250929050565b600080600060408486031215613a9757600080fd5b6000613aa58682870161377d565b935050602084013567ffffffffffffffff811115613ac257600080fd5b613ace8682870161384f565b92509250509250925092565b60008060408385031215613aed57600080fd5b6000613afb8582860161377d565b9250506020613b0c858286016138ed565b9150509250929050565b600060208284031215613b2857600080fd5b6000613b36848285016137a7565b91505092915050565b600060208284031215613b5157600080fd5b6000613b5f848285016137d1565b91505092915050565b600060208284031215613b7a57600080fd5b6000613b88848285016137e6565b91505092915050565b600080600080600060a08688031215613ba957600080fd5b600086013567ffffffffffffffff811115613bc357600080fd5b613bcf88828901613899565b9550506020613be0888289016137bc565b9450506040613bf188828901613902565b9350506060613c0288828901613902565b9250506080613c1388828901613902565b9150509295509295909350565b60008060008060008060c08789031215613c3957600080fd5b600087013567ffffffffffffffff811115613c5357600080fd5b613c5f89828a01613899565b9650506020613c7089828a016137bc565b9550506040613c8189828a01613902565b9450506060613c9289828a01613902565b9350506080613ca389828a01613902565b92505060a087013567ffffffffffffffff811115613cc057600080fd5b613ccc89828a016137fb565b9150509295509295509295565b60008060008060008060c08789031215613cf257600080fd5b600087013567ffffffffffffffff811115613d0c57600080fd5b613d1889828a01613899565b9650506020613d2989828a016137bc565b9550506040613d3a89828a01613902565b9450506060613d4b89828a01613902565b9350506080613d5c89828a01613902565b92505060a087013567ffffffffffffffff811115613d7957600080fd5b613d8589828a01613899565b9150509295509295509295565b600060208284031215613da457600080fd5b6000613db2848285016138ed565b91505092915050565b6000613dc78383613f4e565b60208301905092915050565b6000613ddf8383614043565b905092915050565b6000613df3838361494e565b60208301905092915050565b613e0881614fe2565b82525050565b6000613e1982614f08565b613e238185614f71565b9350613e2e83614ed8565b8060005b83811015613e5f578151613e468882613dbb565b9750613e5183614f4a565b925050600181019050613e32565b5085935050505092915050565b6000613e7782614f13565b613e818185614f82565b935083602082028501613e9385614ee8565b8060005b85811015613ecf5784840389528151613eb08582613dd3565b9450613ebb83614f57565b925060208a01995050600181019050613e97565b50829750879550505050505092915050565b6000613eec82614f1e565b613ef68185614f93565b9350613f0183614ef8565b8060005b83811015613f32578151613f198882613de7565b9750613f2483614f64565b925050600181019050613f05565b5085935050505092915050565b613f4881614ff4565b82525050565b613f5781615000565b82525050565b613f6681615000565b82525050565b6000613f7782614f29565b613f818185614fa4565b9350613f918185602086016150a5565b613f9a816150d8565b840191505092915050565b613fae81615072565b82525050565b6000613fc08385614fd7565b9350613fcd838584615096565b82840190509392505050565b6000613fe482614f3f565b613fee8185614fc6565b9350613ffe8185602086016150a5565b614007816150d8565b840191505092915050565b600061401d82614f3f565b6140278185614fd7565b93506140378185602086016150a5565b80840191505092915050565b600061404e82614f34565b6140588185614fb5565b93506140688185602086016150a5565b614071816150d8565b840191505092915050565b6000614089603283614fc6565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006140ef603583614fc6565b91507f4552433732313a2063616c6c6572206973206e6f742077686974656c6973746560008301527f6420666f7220746865204d696e74657220726f6c6500000000000000000000006020830152604082019050919050565b6000614155602a83614fc6565b91507f4552433732313a2073746172742074696d65206d757374206265206265666f7260008301527f6520656e642074696d65000000000000000000000000000000000000000000006020830152604082019050919050565b60006141bb602483614fc6565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614221601983614fc6565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000614261602c83614fc6565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006142c7603483614fc6565b91507f4552433732313a207472616e73666572207265737472696374656420746f207760008301527f686974656c6973746564206164647265737365730000000000000000000000006020830152604082019050919050565b600061432d603083614fc6565b91507f4552433732313a2054696d6520736c6f7420717565727920666f72206e6f6e6560008301527f78697374656e7420746f6b656e206964000000000000000000000000000000006020830152604082019050919050565b6000614393601983614fc6565b91507f4552433732313a20696e76616c69642074696d6520736c6f74000000000000006000830152602082019050919050565b60006143d3602e83614fc6565b91507f4552433732313a20636f6e74656e74206964206973206e6f742072656769737460008301527f6572656420746f2063616c6c65720000000000000000000000000000000000006020830152604082019050919050565b6000614439602a83614fc6565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b600061449f603e83614fc6565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008301527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006020830152604082019050919050565b6000614505602083614fc6565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000614545602f83614fc6565b91507f4552433732313a20746f6b656e206f776e657220717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b60006145ab602c83614fc6565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000614611602983614fc6565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000614677601d83614fc6565b91507f4552433732313a20617070726f76616c20697320726564756e64616e740000006000830152602082019050919050565b60006146b7603183614fc6565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b600061471d602583614fc6565b91507f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f60008301527f74206f776e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614783602483614fc6565b91507f4552433732313a2055524920736574206f66206e6f6e6578697374656e74207460008301527f6f6b656e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006147e9601b83614fc6565b91507f4552433732313a2063616c6c6572206973206e6f74206f776e657200000000006000830152602082019050919050565b6000614829602e83614fc6565b91507f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008301527f72206e6f7220617070726f7665640000000000000000000000000000000000006020830152604082019050919050565b600061488f602783614fc6565b91507f4552433732313a2055524920717565727920666f72206e6f6e6578697374656e60008301527f7420746f6b656e000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006148f5602183614fc6565b91507f4552433732313a2063616c6c6572206973206e6f742077686974656c6973746560008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61495781615056565b82525050565b61496681615056565b82525050565b61497581615060565b82525050565b6000614988828486613fb4565b91508190509392505050565b60006149a08284614012565b915081905092915050565b60006020820190506149c06000830184613dff565b92915050565b60006080820190506149db6000830187613dff565b6149e86020830186613dff565b6149f5604083018561495d565b8181036060830152614a078184613f6c565b905095945050505050565b600060c082019050614a276000830189613dff565b8181036020830152614a398188613fd9565b9050614a486040830187613f5d565b614a55606083018661496c565b614a62608083018561496c565b614a6f60a083018461496c565b979650505050505050565b60006020820190508181036000830152614a948184613e0e565b905092915050565b60006020820190508181036000830152614ab68184613e6c565b905092915050565b60006020820190508181036000830152614ad88184613ee1565b905092915050565b6000602082019050614af56000830184613f3f565b92915050565b6000602082019050614b106000830184613fa5565b92915050565b60006020820190508181036000830152614b308184613fd9565b905092915050565b60006020820190508181036000830152614b518161407c565b9050919050565b60006020820190508181036000830152614b71816140e2565b9050919050565b60006020820190508181036000830152614b9181614148565b9050919050565b60006020820190508181036000830152614bb1816141ae565b9050919050565b60006020820190508181036000830152614bd181614214565b9050919050565b60006020820190508181036000830152614bf181614254565b9050919050565b60006020820190508181036000830152614c11816142ba565b9050919050565b60006020820190508181036000830152614c3181614320565b9050919050565b60006020820190508181036000830152614c5181614386565b9050919050565b60006020820190508181036000830152614c71816143c6565b9050919050565b60006020820190508181036000830152614c918161442c565b9050919050565b60006020820190508181036000830152614cb181614492565b9050919050565b60006020820190508181036000830152614cd1816144f8565b9050919050565b60006020820190508181036000830152614cf181614538565b9050919050565b60006020820190508181036000830152614d118161459e565b9050919050565b60006020820190508181036000830152614d3181614604565b9050919050565b60006020820190508181036000830152614d518161466a565b9050919050565b60006020820190508181036000830152614d71816146aa565b9050919050565b60006020820190508181036000830152614d9181614710565b9050919050565b60006020820190508181036000830152614db181614776565b9050919050565b60006020820190508181036000830152614dd1816147dc565b9050919050565b60006020820190508181036000830152614df18161481c565b9050919050565b60006020820190508181036000830152614e1181614882565b9050919050565b60006020820190508181036000830152614e31816148e8565b9050919050565b6000602082019050614e4d600083018461495d565b92915050565b6000604051905081810181811067ffffffffffffffff82111715614e7657600080fd5b8060405250919050565b600067ffffffffffffffff821115614e9757600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115614ec357600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614fed82615036565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600065ffffffffffff82169050919050565b600061507d82615084565b9050919050565b600061508f82615036565b9050919050565b82818337600083830152505050565b60005b838110156150c35780820151818401526020810190506150a8565b838111156150d2576000848401525b50505050565b6000601f19601f8301169050919050565b6150f281614fe2565b81146150fd57600080fd5b50565b61510981614ff4565b811461511457600080fd5b50565b61512081615000565b811461512b57600080fd5b50565b6151378161500a565b811461514257600080fd5b50565b61514e81615056565b811461515957600080fd5b50565b61516581615060565b811461517057600080fd5b5056fea365627a7a72315820ea2f5d2449a9ff6c5518bc11a122932d899a12f029a7c893dea57d99ce171d236c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "285:1239:9:-;;;3591:5:3;3570:26;;;;;;;;;;;;;;;;;;;;801:336:9;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:336:9;;;;;;;;;;;;;;;;;;;;;;;;720:40:2;387:10;739:20;;720:18;;;:40;;:::i;:::-;4646::3;4518:10;4665:20;;4646:18;;;:40;;:::i;:::-;4739:12;:10;;;:12;;:::i;:::-;4731:5;;:20;;;;;;;;;;;;;;;;;;907:4:9;899:5;:12;;;;;;;;;;;;:::i;:::-;;931:6;921:7;:16;;;;;;;;;;;;:::i;:::-;;1025:49;735:10;1044:29;;1025:18;;;:49;;:::i;:::-;1085:44;1113:15;1085:27;;;;;:44;;:::i;:::-;801:336;;;285:1239;;1444:190:2;1534:10;1519:25;;:11;:25;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1623:4;1587:20;:33;1608:11;1587:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1444:190;:::o;5223:90:3:-;5268:7;5295:10;5288:17;;5223:90;:::o;6258:144::-;5865:5;;;;;;;;;;;5849:21;;:12;:10;;;:12;;:::i;:::-;:21;;;5828:95;;;;;;;;;;;;;;;;;;;;;;6384:10;6356:8;;:39;;;;;;;;;;;;;;;;;;6258:144;:::o;285:1239:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;840:1;829:9;825:17;819:24;863:18;855:6;852:30;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;1071:18;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1493:74;;1600:66;1596:1;1591:3;1587:11;1580:87;1695:2;1690:3;1686:12;1679:19;;1486:218;;;;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1866:74;;1973:66;1969:1;1964:3;1960:11;1953:87;2068:2;2063:3;2059:12;2052:19;;1859:218;;;;2085:407;;2276:2;2265:9;2261:18;2253:26;;2326:9;2320:4;2316:20;2312:1;2301:9;2297:17;2290:47;2351:131;2477:4;2351:131;;;2343:139;;2247:245;;;;2499:407;;2690:2;2679:9;2675:18;2667:26;;2740:9;2734:4;2730:20;2726:1;2715:9;2711:17;2704:47;2765:131;2891:4;2765:131;;;2757:139;;2661:245;;;;2913:256;;2975:2;2969:9;2959:19;;3013:4;3005:6;3001:17;3112:6;3100:10;3097:22;3076:18;3064:10;3061:34;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3153:10;3149:2;3142:22;2953:216;;;;;3176:322;;3320:18;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;3419:4;3415:9;3408:4;3400:6;3396:17;3392:33;3384:41;;3483:4;3477;3473:15;3465:23;;3243:255;;;;3506:163;;3621:6;3616:3;3609:19;3658:4;3653:3;3649:14;3634:29;;3602:67;;;;;3677:91;;3739:24;3757:5;3739:24;;;3728:35;;3722:46;;;;3775:121;;3848:42;3841:5;3837:54;3826:65;;3820:76;;;;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4066:1;4061:3;4057:11;4051:18;4047:1;4042:3;4038:11;4031:39;4012:2;4009:1;4005:10;4000:15;;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;285:1239:9;;;;;;;",
  "deployedSourceMap": "285:1239:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;285:1239:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1242:83:9;;;:::i;:::-;;;;;;;;;;;;;;;;22307:236:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;21472:550;;;;;;;;;;;;;;;;:::i;:::-;;18688:98;;;:::i;:::-;;;;;;;;;;;;;;;;24106:561;;;;;;;;;;;;;;;;:::i;:::-;;10727:651;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6570:120;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;33527:128;;;:::i;:::-;;25316:134;;;;;;;;;;;;;;;;:::i;:::-;;31453:230;;;;;;;;;;;;;;;;:::i;:::-;;9764:599;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3570:26;;;:::i;:::-;;;;;;;;;;;;;;;;8305:643;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;19472:280;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18995:258;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18149:406;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1093:32;;;:::i;:::-;;;;;;;;;;;;;;;;33269:80;;;:::i;:::-;;20155:867;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1024:20;;;:::i;:::-;;;;;;;;;;;;;;;;1434:87:9;;;:::i;:::-;;;;;;;;;;;;;;;;22836:309:3;;;;;;;;;;;;;;;;:::i;:::-;;17734:330;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7045:108;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7562:558;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;26172:594;;;;;;;;;;;;;;;;:::i;:::-;;6258:144;;;;;;;;;;;;;;;;:::i;:::-;;14122:231;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9037:566;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;16798:716;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;23484:185;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5947:167;;;;;;;;;;;;;;;;:::i;:::-;;917:133:2;987:4;1010:20;:33;1031:11;1010:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1003:40;;917:133;;;:::o;1242:83:9:-;1281:13;1313:5;1306:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1242:83;:::o;22307:236:3:-;22366:7;22407:16;22415:7;22407;:16::i;:::-;22386:107;;;;;;;;;;;;;;;;;;;;;;22511:15;:24;22527:7;22511:24;;;;;;;;;;;;;;;;;;;;;22504:31;;22307:236;;;:::o;21472:550::-;6873:27;6887:12;:10;:12::i;:::-;6873:13;:27::i;:::-;6852:107;;;;;;;;;;;;;;;;;;;;;;33025:6;;;;;;;;;;;33024:7;33016:16;;;;;;21594:18;21615:16;21623:7;21615;:16::i;:::-;21594:37;;21669:10;21663:16;;:2;:16;;;;21642:92;;;;;;;;;;;;;;;;;;;;;;21782:10;21766:26;;:12;:10;:12::i;:::-;:26;;;:72;;;;21796:42;21813:10;21825:12;:10;:12::i;:::-;21796:16;:42::i;:::-;21766:72;21745:181;;;;;;;;;;;;;;;;;;;;;;21964:2;21937:15;:24;21953:7;21937:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;22006:7;22002:2;21981:33;;21990:10;21981:33;;;;;;;;;;;;33042:1;21472:550;;:::o;18688:98::-;18732:7;18759:19;:9;:17;:19::i;:::-;18752:26;;18688:98;:::o;24106:561::-;33025:6;;;;;;;;;;;33024:7;33016:16;;;;;;24244:41;24263:12;:10;:12::i;:::-;24277:7;24244:18;:41::i;:::-;24223:137;;;;;;;;;;;;;;;;;;;;;;24392:19;24406:4;24392:13;:19::i;:::-;24371:118;;;;;;;;;;;;;;;;;;;;;;24521:17;24535:2;24521:13;:17::i;:::-;24500:116;;;;;;;;;;;;;;;;;;;;;;24627:32;24641:4;24647:2;24651:7;24627:13;:32::i;:::-;24106:561;;;:::o;10727:651::-;11012:7;7326:22;7335:12;:10;:12::i;:::-;7326:8;:22::i;:::-;7305:122;;;;;;;;;;;;;;;;;;;;;;33025:6;;;;;;;;;;;33024:7;33016:16;;;;;;11057:47;11074:9;11085;11096:7;11057:16;:47::i;:::-;11036:119;;;;;;;;;;;;;;;;;;;;;;11166:15;11184:23;11194:12;:10;:12::i;:::-;11184:9;:23::i;:::-;11166:41;;11217:87;11235:7;11244:9;11255:12;11269:9;11280:7;11289:14;11217:17;:87::i;:::-;11314:31;11327:7;11336:8;11314:12;:31::i;:::-;11363:7;11356:14;;;10727:651;;;;;;;;:::o;6570:120::-;6630:4;6653:8;;;;;;;;;;;:22;;;6676:6;6653:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6653:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6653:30:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6653:30:3;;;;;;;;;6646:37;;6570:120;;;:::o;33527:128::-;5865:5;;;;;;;;;;;5849:21;;:12;:10;:12::i;:::-;:21;;;5828:95;;;;;;;;;;;;;;;;;;;;;;33166:6;;;;;;;;;;;33158:15;;;;;;33643:5;33634:6;;:14;;;;;;;;;;;;;;;;;;33527:128::o;25316:134::-;25403:39;25420:4;25426:2;25430:7;25403:39;;;;;;;;;;;;:16;:39::i;:::-;25316:134;;;:::o;31453:230::-;33025:6;;;;;;;;;;;33024:7;33016:16;;;;;;31537:41;31556:12;:10;:12::i;:::-;31570:7;31537:18;:41::i;:::-;31516:134;;;;;;;;;;;;;;;;;;;;;;31661:14;31667:7;31661:5;:14::i;:::-;31453:230;:::o;9764:599::-;10032:7;7326:22;7335:12;:10;:12::i;:::-;7326:8;:22::i;:::-;7305:122;;;;;;;;;;;;;;;;;;;;;;33025:6;;;;;;;;;;;33024:7;33016:16;;;;;;10077:47;10094:9;10105;10116:7;10077:16;:47::i;:::-;10056:119;;;;;;;;;;;;;;;;;;;;;;10186:15;10204:29;10214:12;:10;:12::i;:::-;10228:4;10204:9;:29::i;:::-;10186:47;;10243:87;10261:7;10270:9;10281:12;10295:9;10306:7;10315:14;10243:17;:87::i;:::-;10348:7;10341:14;;;9764:599;;;;;;;;:::o;3570:26::-;;;;;;;;;;;;;:::o;8305:643::-;8586:7;7326:22;7335:12;:10;:12::i;:::-;7326:8;:22::i;:::-;7305:122;;;;;;;;;;;;;;;;;;;;;;33025:6;;;;;;;;;;;33024:7;33016:16;;;;;;8631:47;8648:9;8659;8670:7;8631:16;:47::i;:::-;8610:119;;;;;;;;;;;;;;;;;;;;;;8740:15;8758:19;8764:12;:10;:12::i;:::-;8758:5;:19::i;:::-;8740:37;;8787:87;8805:7;8814:9;8825:12;8839:9;8850:7;8859:14;8787:17;:87::i;:::-;8884:31;8897:7;8906:8;8884:12;:31::i;:::-;8933:7;8926:14;;;8305:643;;;;;;;;:::o;19472:280::-;19527:7;19547:18;19568:11;:20;19580:7;19568:20;;;;;;;;;;;;;;;;;;;;;19547:41;;19641:1;19619:24;;:10;:24;;;;19598:118;;;;;;;;;;;;;;;;;;;;;;19734:10;19727:17;;;19472:280;;;:::o;18995:258::-;19055:7;19118:1;19096:24;;:10;:24;;;;19075:113;;;;;;;;;;;;;;;;;;;;;;19206:39;:17;:29;19224:10;19206:29;;;;;;;;;;;;;;;:37;:39::i;:::-;19199:46;;18995:258;;;:::o;18149:406::-;18271:16;18300:29;18332:27;:35;18360:6;18332:35;;;;;;;;;;;;;;;18368:9;;18332:46;;;;;;;;;;;;;;;;;;;;;18300:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18388:18;18423:1;:8;18409:23;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18409:23:3;;;;18388:44;;18448:6;18457:1;18448:10;;18443:86;18464:1;:8;18460:1;:12;18443:86;;;18501:1;18503;18501:4;;;;;;;;;;;;;;:17;;;18493:1;18495;18493:4;;;;;;;;;;;;;:25;;;;;18474:3;;;;;;;18443:86;;;;18546:1;18539:8;;;;18149:406;;;;;:::o;1093:32::-;;;;;;;;;;;;;:::o;33269:80::-;5865:5;;;;;;;;;;;5849:21;;:12;:10;:12::i;:::-;:21;;;5828:95;;;;;;;;;;;;;;;;;;;;;;33025:6;;;;;;;;;;;33024:7;33016:16;;;;;;33338:4;33329:6;;:13;;;;;;;;;;;;;;;;;;33269:80::o;20155:867::-;20220:16;20248:18;20269:21;20279:10;20269:9;:21::i;:::-;20248:42;;20319:1;20305:10;:15;20301:715;;;20394:1;20380:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20380:16:3;;;;20373:23;;;;;20301:715;20427:23;20467:10;20453:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20453:25:3;;;;20427:51;;20492:19;20514:13;:11;:13::i;:::-;20492:35;;20541:19;20563:1;20541:23;;20718:15;20763:1;20753:11;;20748:230;20777:11;20766:7;:22;20748:230;;20847:10;20823:34;;:11;:20;20835:7;20823:20;;;;;;;;;;;;;;;;;;;;;:34;;;20819:145;;;20903:7;20881:6;20888:11;20881:19;;;;;;;;;;;;;:29;;;;;20932:13;;;;;;;20819:145;20790:9;;;;;;;20748:230;;;20999:6;20992:13;;;;;;;20155:867;;;;:::o;1024:20::-;;;;;;;;;;;;;:::o;1434:87:9:-;1475:13;1507:7;1500:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:87;:::o;22836:309:3:-;6873:27;6887:12;:10;:12::i;:::-;6873:13;:27::i;:::-;6852:107;;;;;;;;;;;;;;;;;;;;;;33025:6;;;;;;;;;;;33024:7;33016:16;;;;;;22980:12;:10;:12::i;:::-;22974:18;;:2;:18;;;;22966:56;;;;;;;;;;;;;;;;;;;;;;23072:8;23033:18;:32;23052:12;:10;:12::i;:::-;23033:32;;;;;;;;;;;;;;;:36;23066:2;23033:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;23124:2;23095:42;;23110:12;:10;:12::i;:::-;23095:42;;;23128:8;23095:42;;;;;;;;;;;;;;;22836:309;;:::o;17734:330::-;17804:15;17832:26;17861:24;:32;17886:6;17861:32;;;;;;;;;;;;;;;17832:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17903:17;17936:1;:8;17923:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17903:42;;17961:6;17970:1;17961:10;;17956:82;17977:1;:8;17973:1;:12;17956:82;;;18013:1;18015;18013:4;;;;;;;;;;;;;;:14;;;18006:1;18008;18006:4;;;;;;;;;;;;;:21;;;;17987:3;;;;;;;17956:82;;;;18055:1;18048:8;;;;17734:330;;;:::o;7045:108::-;7101:4;7124:22;7138:7;7124:13;:22::i;:::-;7117:29;;7045:108;;;:::o;7562:558::-;7799:7;7326:22;7335:12;:10;:12::i;:::-;7326:8;:22::i;:::-;7305:122;;;;;;;;;;;;;;;;;;;;;;33025:6;;;;;;;;;;;33024:7;33016:16;;;;;;7844:47;7861:9;7872;7883:7;7844:16;:47::i;:::-;7823:119;;;;;;;;;;;;;;;;;;;;;;7953:15;7971:19;7977:12;:10;:12::i;:::-;7971:5;:19::i;:::-;7953:37;;8000:87;8018:7;8027:9;8038:12;8052:9;8063:7;8072:14;8000:17;:87::i;:::-;8105:7;8098:14;;;7562:558;;;;;;;:::o;26172:594::-;33025:6;;;;;;;;;;;33024:7;33016:16;;;;;;26333:19;26347:4;26333:13;:19::i;:::-;26312:118;;;;;;;;;;;;;;;;;;;;;;26462:17;26476:2;26462:13;:17::i;:::-;26441:116;;;;;;;;;;;;;;;;;;;;;;26589:41;26608:12;:10;:12::i;:::-;26622:7;26589:18;:41::i;:::-;26568:137;;;;;;;;;;;;;;;;;;;;;;26716:42;26734:4;26740:2;26744:7;26753:4;26716:17;:42::i;:::-;26172:594;;;;:::o;6258:144::-;5865:5;;;;;;;;;;;5849:21;;:12;:10;:12::i;:::-;:21;;;5828:95;;;;;;;;;;;;;;;;;;;;;;6384:10;6356:8;;:39;;;;;;;;;;;;;;;;;;6258:144;:::o;14122:231::-;14180:13;14227:16;14235:7;14227;:16::i;:::-;14206:102;;;;;;;;;;;;;;;;;;;;;;14326:10;:19;14337:7;14326:19;;;;;;;;;;;14319:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14122:231;;;:::o;9037:566::-;9278:7;7326:22;7335:12;:10;:12::i;:::-;7326:8;:22::i;:::-;7305:122;;;;;;;;;;;;;;;;;;;;;;33025:6;;;;;;;;;;;33024:7;33016:16;;;;;;9323:47;9340:9;9351;9362:7;9323:16;:47::i;:::-;9302:119;;;;;;;;;;;;;;;;;;;;;;9432:15;9450:23;9460:12;:10;:12::i;:::-;9450:9;:23::i;:::-;9432:41;;9483:87;9501:7;9510:9;9521:12;9535:9;9546:7;9555:14;9483:17;:87::i;:::-;9588:7;9581:14;;;9037:566;;;;;;;:::o;16798:716::-;16874:14;16902:23;16939:20;16973:16;17003:14;17031:21;17091:16;17099:7;17091;:16::i;:::-;17070:111;;;;;;;;;;;;;;;;;;;;;;17213:16;:25;17230:7;17213:25;;;;;;;;;;;:32;;;;;;;;;;;;17259:16;:25;17276:7;17259:25;;;;;;;;;;;:35;;17308:16;:25;17325:7;17308:25;;;;;;;;;;;:38;;;17360:16;:25;17377:7;17360:25;;;;;;;;;;;:35;;;;;;;;;;;;17409:16;:25;17426:7;17409:25;;;;;;;;;;;:33;;;;;;;;;;;;17456:16;:25;17473:7;17456:25;;;;;;;;;;;:40;;;;;;;;;;;;17192:314;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16798:716;;;;;;;:::o;23484:185::-;23593:4;23621:18;:30;23640:10;23621:30;;;;;;;;;;;;;;;:40;23652:8;23621:40;;;;;;;;;;;;;;;;;;;;;;;;;23614:47;;23484:185;;;;:::o;5947:167::-;5865:5;;;;;;;;;;;5849:21;;:12;:10;:12::i;:::-;:21;;;5828:95;;;;;;;;;;;;;;;;;;;;;;6063:1;6043:22;;:8;:22;;;6039:69;;6089:8;6081:5;;:16;;;;;;;;;;;;;;;;;;6039:69;5947:167;:::o;27981:165::-;28038:4;28055:18;28076:11;:20;28088:7;28076:20;;;;;;;;;;;;;;;;;;;;;28055:41;;28136:1;28114:24;;:10;:24;;;;28107:31;;;27981:165;;;:::o;5223:90::-;5268:7;5295:10;5288:17;;5223:90;:::o;1061:112:1:-;1126:7;1152;:14;;;1145:21;;1061:112;;;:::o;28507:411:3:-;28616:4;28658:16;28666:7;28658;:16::i;:::-;28637:107;;;;;;;;;;;;;;;;;;;;;;28755:18;28776:16;28784:7;28776;:16::i;:::-;28755:37;;28823:10;28812:21;;:7;:21;;;:56;;;;28861:7;28837:31;;:20;28849:7;28837:11;:20::i;:::-;:31;;;28812:56;:97;;;;28872:37;28889:10;28901:7;28872:16;:37::i;:::-;28812:97;28804:106;;;28507:411;;;;:::o;29295:518::-;29422:4;29402:24;;:16;29410:7;29402;:16::i;:::-;:24;;;29381:112;;;;;;;;;;;;;;;;;;;;;;29539:1;29525:16;;:2;:16;;;;29504:99;;;;;;;;;;;;;;;;;;;;;;29614:23;29629:7;29614:14;:23::i;:::-;29648:35;:17;:23;29666:4;29648:23;;;;;;;;;;;;;;;:33;:35::i;:::-;29693:33;:17;:21;29711:2;29693:21;;;;;;;;;;;;;;;:31;:33::i;:::-;29760:2;29737:11;:20;29749:7;29737:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;29797:7;29793:2;29778:27;;29787:4;29778:27;;;;;;;;;;;;29295:518;;;:::o;14411:446::-;14549:4;14587:8;;;;;;;;;;;:38;;;14626:9;14587:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14587:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14587:49:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14587:49:3;;;;;;;;;14566:142;;;;;;;;;;;;;;;;;;;;;;14750:9;14740:19;;:7;:19;;;14719:108;;;;;;;;;;;;;;;;;;;;;;14845:4;14838:11;;14411:446;;;;;:::o;11871:136::-;11920:7;11940:15;11958:17;11968:2;11958:17;;;;;;;;;;;;:9;:17::i;:::-;11940:35;;11992:7;11985:14;;;11871:136;;;:::o;15748:1043::-;15991:16;15999:7;15991;:16::i;:::-;15970:99;;;;;;;;;;;;;;;;;;;;;;16080:25;;:::i;:::-;16108:286;;;;;;;;16147:12;:10;:12::i;:::-;16108:286;;;;;;16192:9;16108:286;;;;16238:12;16108:286;;;;16283:9;16108:286;;;;;;16323:7;16108:286;;;;;;16368:14;16108:286;;;;;16080:314;;16433:9;16405:16;:25;16422:7;16405:25;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16458;16485:9;16458:26;:37::i;:::-;16453:142;;16511:24;:38;16536:12;:10;:12::i;:::-;16511:38;;;;;;;;;;;;;;;16556:26;;;;;;;;16572:9;16556:26;;;16511:73;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16511:73:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;16453:142;16610:54;16640:9;16651:12;16610:29;:54::i;:::-;16605:179;;16680:27;:41;16708:12;:10;:12::i;:::-;16680:41;;;;;;;;;;;;;;;16722:9;16680:52;;;;;;;;;;;;;;;;;;;;16739:32;;;;;;;;16758:12;16739:32;;;16680:93;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16680::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16605:179;15748:1043;;;;;;;:::o;13701:221::-;13800:16;13808:7;13800;:16::i;:::-;13779:99;;;;;;;;;;;;;;;;;;;;;;13911:3;13889:10;:19;13900:7;13889:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;13701:221;;:::o;32735:92::-;32787:32;32793:16;32801:7;32793;:16::i;:::-;32811:7;32787:5;:32::i;:::-;32735:92;:::o;12571:309::-;12639:7;12659:15;12677:9;12683:2;12677:5;:9::i;:::-;12659:27;;12718:53;12749:1;12753:2;12757:7;12766:4;12718:22;:53::i;:::-;12697:150;;;;;;;;;;;;;;;;;;;;;;12865:7;12858:14;;;12571:309;;;;:::o;13066:366::-;13111:7;13153:1;13139:16;;:2;:16;;;;13131:61;;;;;;;;;;;;;;;;;;;;;;13203:21;:9;:19;:21::i;:::-;13234:15;13252:19;:9;:17;:19::i;:::-;13234:37;;13305:2;13282:11;:20;13294:7;13282:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13317:33;:17;:21;13335:2;13317:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13391:7;13387:2;13366:33;;13383:1;13366:33;;;;;;;;;;;;13417:7;13410:14;;;13066:366;;;:::o;27470:316::-;27591:32;27605:4;27611:2;27615:7;27591:13;:32::i;:::-;27655:47;27678:4;27684:2;27688:7;27697:4;27655:22;:47::i;:::-;27634:144;;;;;;;;;;;;;;;;;;;;;;27470:316;;;;:::o;30920:173::-;31020:1;30984:38;;:15;:24;31000:7;30984:24;;;;;;;;;;;;;;;;;;;;;:38;;;30980:106;;31073:1;31038:15;:24;31054:7;31038:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;30980:106;30920:173;:::o;1274:108:1:-;1354:21;1373:1;1354:7;:14;;;:18;;:21;;;;:::i;:::-;1337:7;:14;;:38;;;;1274:108;:::o;1179:89::-;1260:1;1242:7;:14;;;:19;;;;;;;;;;;1179:89;:::o;14864:413:3:-;14963:4;14980:26;15009:24;:36;15034:10;15009:36;;;;;;;;;;;;;;;14980:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15055:15;15073:5;15055:23;;15093:6;15102:1;15093:10;;15088:155;15109:1;:8;15105:1;:12;15088:155;;;15142:39;15155:9;15166:1;15168;15166:4;;;;;;;;;;;;;;:14;;;15142:12;:39::i;:::-;15138:95;;;15214:4;15201:17;;15138:95;15119:3;;;;;;;15088:155;;;;15260:10;15253:17;;;;14864:413;;;:::o;15284:457::-;15416:4;15433:29;15465:27;:39;15493:10;15465:39;;;;;;;;;;;;;;;15505:9;15465:50;;;;;;;;;;;;;;;;;;;;15433:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15525:15;15543:5;15525:23;;15563:6;15572:1;15563:10;;15558:149;15579:1;:8;15575:1;:12;15558:149;;;15628:1;15630;15628:4;;;;;;;;;;;;;;:17;;;15612:12;:33;15608:89;;;15678:4;15665:17;;15608:89;15589:3;;;;;;;15558:149;;;;15724:10;15717:17;;;;15284:457;;;;:::o;31957:597::-;32070:10;32050:30;;:16;32058:7;32050;:16::i;:::-;:30;;;32029:114;;;;;;;;;;;;;;;;;;;;;;32154:23;32169:7;32154:14;:23::i;:::-;32188:41;:17;:29;32206:10;32188:29;;;;;;;;;;;;;;;:39;:41::i;:::-;32270:1;32239:11;:20;32251:7;32239:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;32361:1;32330:10;:19;32341:7;32330:19;;;;;;;;;;;32324:33;;;;;;;;;;;;;;;;:38;32320:95;;32385:10;:19;32396:7;32385:19;;;;;;;;;;;;32378:26;;;;:::i;:::-;32320:95;32464:16;:25;32481:7;32464:25;;;;;;;;;;;;32457:32;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32538:7;32534:1;32505:41;;32514:10;32505:41;;;;;;;;;;;;31957:597;;:::o;30401:357::-;30529:4;30555:15;:2;:13;;;:15::i;:::-;30550:58;;30593:4;30586:11;;;;30550:58;30618:13;30650:2;30634:36;;;30671:12;:10;:12::i;:::-;30685:4;30691:7;30700:4;30634:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30634:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30634:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;30634:71:3;;;;;;;;;30618:87;;1347:10;30733:16;;30723:26;;;:6;:26;;;;30715:35;;;30401:357;;;;;;;:::o;1276:134:11:-;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1353:50;;1276:134;;;;:::o;33689:230:3:-;33814:4;33906:1;33888:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;33888:21:3;;;33878:32;;;;;;33870:1;33852:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;33852:21:3;;;33842:32;;;;;;:68;33834:78;;33689:230;;;;:::o;559:797:0:-;619:4;1064:16;1090:19;1112:66;1090:88;;;;1279:7;1267:20;1255:32;;1318:3;1306:15;;:8;:15;;:42;;;;;1337:11;1325:8;:23;;1306:42;1298:51;;;;559:797;;;:::o;1846:187:11:-;1932:7;1964:1;1959;:6;;1967:12;1951:29;;;;;;;;;;;;;;;;;;;;;;;;;1990:9;2006:1;2002;:5;1990:17;;2025:1;2018:8;;;1846:187;;;;;:::o;285:1239:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:128;;354:6;348:13;339:22;;366:30;390:5;366:30;;;333:68;;;;;408:130;;488:6;475:20;466:29;;500:33;527:5;500:33;;;460:78;;;;;545:128;;624:6;611:20;602:29;;636:32;662:5;636:32;;;596:77;;;;;680:132;;763:6;757:13;748:22;;775:32;801:5;775:32;;;742:70;;;;;820:440;;921:3;914:4;906:6;902:17;898:27;888:2;;939:1;936;929:12;888:2;976:6;963:20;998:64;1013:48;1054:6;1013:48;;;998:64;;;989:73;;1082:6;1075:5;1068:21;1118:4;1110:6;1106:17;1151:4;1144:5;1140:16;1186:3;1177:6;1172:3;1168:16;1165:25;1162:2;;;1203:1;1200;1193:12;1162:2;1213:41;1247:6;1242:3;1237;1213:41;;;881:379;;;;;;;;1283:336;;;1398:3;1391:4;1383:6;1379:17;1375:27;1365:2;;1416:1;1413;1406:12;1365:2;1449:6;1436:20;1426:30;;1476:18;1468:6;1465:30;1462:2;;;1508:1;1505;1498:12;1462:2;1542:4;1534:6;1530:17;1518:29;;1592:3;1585;1577:6;1573:16;1563:8;1559:31;1556:40;1553:2;;;1609:1;1606;1599:12;1553:2;1358:261;;;;;;1628:442;;1730:3;1723:4;1715:6;1711:17;1707:27;1697:2;;1748:1;1745;1738:12;1697:2;1785:6;1772:20;1807:65;1822:49;1864:6;1822:49;;;1807:65;;;1798:74;;1892:6;1885:5;1878:21;1928:4;1920:6;1916:17;1961:4;1954:5;1950:16;1996:3;1987:6;1982:3;1978:16;1975:25;1972:2;;;2013:1;2010;2003:12;1972:2;2023:41;2057:6;2052:3;2047;2023:41;;;1690:380;;;;;;;;2078:130;;2158:6;2145:20;2136:29;;2170:33;2197:5;2170:33;;;2130:78;;;;;2215:128;;2294:6;2281:20;2272:29;;2306:32;2332:5;2306:32;;;2266:77;;;;;2350:241;;2454:2;2442:9;2433:7;2429:23;2425:32;2422:2;;;2470:1;2467;2460:12;2422:2;2505:1;2522:53;2567:7;2558:6;2547:9;2543:22;2522:53;;;2512:63;;2484:97;2416:175;;;;;2598:366;;;2719:2;2707:9;2698:7;2694:23;2690:32;2687:2;;;2735:1;2732;2725:12;2687:2;2770:1;2787:53;2832:7;2823:6;2812:9;2808:22;2787:53;;;2777:63;;2749:97;2877:2;2895:53;2940:7;2931:6;2920:9;2916:22;2895:53;;;2885:63;;2856:98;2681:283;;;;;;2971:491;;;;3109:2;3097:9;3088:7;3084:23;3080:32;3077:2;;;3125:1;3122;3115:12;3077:2;3160:1;3177:53;3222:7;3213:6;3202:9;3198:22;3177:53;;;3167:63;;3139:97;3267:2;3285:53;3330:7;3321:6;3310:9;3306:22;3285:53;;;3275:63;;3246:98;3375:2;3393:53;3438:7;3429:6;3418:9;3414:22;3393:53;;;3383:63;;3354:98;3071:391;;;;;;3469:721;;;;;3633:3;3621:9;3612:7;3608:23;3604:33;3601:2;;;3650:1;3647;3640:12;3601:2;3685:1;3702:53;3747:7;3738:6;3727:9;3723:22;3702:53;;;3692:63;;3664:97;3792:2;3810:53;3855:7;3846:6;3835:9;3831:22;3810:53;;;3800:63;;3771:98;3900:2;3918:53;3963:7;3954:6;3943:9;3939:22;3918:53;;;3908:63;;3879:98;4036:2;4025:9;4021:18;4008:32;4060:18;4052:6;4049:30;4046:2;;;4092:1;4089;4082:12;4046:2;4112:62;4166:7;4157:6;4146:9;4142:22;4112:62;;;4102:72;;3987:193;3595:595;;;;;;;;4197:360;;;4315:2;4303:9;4294:7;4290:23;4286:32;4283:2;;;4331:1;4328;4321:12;4283:2;4366:1;4383:53;4428:7;4419:6;4408:9;4404:22;4383:53;;;4373:63;;4345:97;4473:2;4491:50;4533:7;4524:6;4513:9;4509:22;4491:50;;;4481:60;;4452:95;4277:280;;;;;;4564:492;;;;4705:2;4693:9;4684:7;4680:23;4676:32;4673:2;;;4721:1;4718;4711:12;4673:2;4756:1;4773:53;4818:7;4809:6;4798:9;4794:22;4773:53;;;4763:63;;4735:97;4891:2;4880:9;4876:18;4863:32;4915:18;4907:6;4904:30;4901:2;;;4947:1;4944;4937:12;4901:2;4975:65;5032:7;5023:6;5012:9;5008:22;4975:65;;;4965:75;;;;4842:204;4667:389;;;;;;5063:366;;;5184:2;5172:9;5163:7;5159:23;5155:32;5152:2;;;5200:1;5197;5190:12;5152:2;5235:1;5252:53;5297:7;5288:6;5277:9;5273:22;5252:53;;;5242:63;;5214:97;5342:2;5360:53;5405:7;5396:6;5385:9;5381:22;5360:53;;;5350:63;;5321:98;5146:283;;;;;;5436:257;;5548:2;5536:9;5527:7;5523:23;5519:32;5516:2;;;5564:1;5561;5554:12;5516:2;5599:1;5616:61;5669:7;5660:6;5649:9;5645:22;5616:61;;;5606:71;;5578:105;5510:183;;;;;5700:239;;5803:2;5791:9;5782:7;5778:23;5774:32;5771:2;;;5819:1;5816;5809:12;5771:2;5854:1;5871:52;5915:7;5906:6;5895:9;5891:22;5871:52;;;5861:62;;5833:96;5765:174;;;;;5946:261;;6060:2;6048:9;6039:7;6035:23;6031:32;6028:2;;;6076:1;6073;6066:12;6028:2;6111:1;6128:63;6183:7;6174:6;6163:9;6159:22;6128:63;;;6118:73;;6090:107;6022:185;;;;;6214:843;;;;;;6393:3;6381:9;6372:7;6368:23;6364:33;6361:2;;;6410:1;6407;6400:12;6361:2;6473:1;6462:9;6458:17;6445:31;6496:18;6488:6;6485:30;6482:2;;;6528:1;6525;6518:12;6482:2;6548:63;6603:7;6594:6;6583:9;6579:22;6548:63;;;6538:73;;6424:193;6648:2;6666:53;6711:7;6702:6;6691:9;6687:22;6666:53;;;6656:63;;6627:98;6756:2;6774:52;6818:7;6809:6;6798:9;6794:22;6774:52;;;6764:62;;6735:97;6863:2;6881:52;6925:7;6916:6;6905:9;6901:22;6881:52;;;6871:62;;6842:97;6970:3;6989:52;7033:7;7024:6;7013:9;7009:22;6989:52;;;6979:62;;6949:98;6355:702;;;;;;;;;7064:1073;;;;;;;7269:3;7257:9;7248:7;7244:23;7240:33;7237:2;;;7286:1;7283;7276:12;7237:2;7349:1;7338:9;7334:17;7321:31;7372:18;7364:6;7361:30;7358:2;;;7404:1;7401;7394:12;7358:2;7424:63;7479:7;7470:6;7459:9;7455:22;7424:63;;;7414:73;;7300:193;7524:2;7542:53;7587:7;7578:6;7567:9;7563:22;7542:53;;;7532:63;;7503:98;7632:2;7650:52;7694:7;7685:6;7674:9;7670:22;7650:52;;;7640:62;;7611:97;7739:2;7757:52;7801:7;7792:6;7781:9;7777:22;7757:52;;;7747:62;;7718:97;7846:3;7865:52;7909:7;7900:6;7889:9;7885:22;7865:52;;;7855:62;;7825:98;7982:3;7971:9;7967:19;7954:33;8007:18;7999:6;7996:30;7993:2;;;8039:1;8036;8029:12;7993:2;8059:62;8113:7;8104:6;8093:9;8089:22;8059:62;;;8049:72;;7933:194;7231:906;;;;;;;;;8144:1075;;;;;;;8350:3;8338:9;8329:7;8325:23;8321:33;8318:2;;;8367:1;8364;8357:12;8318:2;8430:1;8419:9;8415:17;8402:31;8453:18;8445:6;8442:30;8439:2;;;8485:1;8482;8475:12;8439:2;8505:63;8560:7;8551:6;8540:9;8536:22;8505:63;;;8495:73;;8381:193;8605:2;8623:53;8668:7;8659:6;8648:9;8644:22;8623:53;;;8613:63;;8584:98;8713:2;8731:52;8775:7;8766:6;8755:9;8751:22;8731:52;;;8721:62;;8692:97;8820:2;8838:52;8882:7;8873:6;8862:9;8858:22;8838:52;;;8828:62;;8799:97;8927:3;8946:52;8990:7;8981:6;8970:9;8966:22;8946:52;;;8936:62;;8906:98;9063:3;9052:9;9048:19;9035:33;9088:18;9080:6;9077:30;9074:2;;;9120:1;9117;9110:12;9074:2;9140:63;9195:7;9186:6;9175:9;9171:22;9140:63;;;9130:73;;9014:195;8312:907;;;;;;;;;9226:241;;9330:2;9318:9;9309:7;9305:23;9301:32;9298:2;;;9346:1;9343;9336:12;9298:2;9381:1;9398:53;9443:7;9434:6;9423:9;9419:22;9398:53;;;9388:63;;9360:97;9292:175;;;;;9475:173;;9562:46;9604:3;9596:6;9562:46;;;9637:4;9632:3;9628:14;9614:28;;9555:93;;;;;9657:181;;9770:62;9828:3;9820:6;9770:62;;;9756:76;;9749:89;;;;;9847:173;;9934:46;9976:3;9968:6;9934:46;;;10009:4;10004:3;10000:14;9986:28;;9927:93;;;;;10028:113;10111:24;10129:5;10111:24;;;10106:3;10099:37;10093:48;;;10179:690;;10324:54;10372:5;10324:54;;;10391:86;10470:6;10465:3;10391:86;;;10384:93;;10498:56;10548:5;10498:56;;;10574:7;10602:1;10587:260;10612:6;10609:1;10606:13;10587:260;;;10679:6;10673:13;10700:63;10759:3;10744:13;10700:63;;;10693:70;;10780:60;10833:6;10780:60;;;10770:70;;10644:203;10634:1;10631;10627:9;10622:14;;10587:260;;;10591:14;10860:3;10853:10;;10303:566;;;;;;;;10906:896;;11063:60;11117:5;11063:60;;;11136:92;11221:6;11216:3;11136:92;;;11129:99;;11251:3;11293:4;11285:6;11281:17;11276:3;11272:27;11320:62;11376:5;11320:62;;;11402:7;11430:1;11415:348;11440:6;11437:1;11434:13;11415:348;;;11502:9;11496:4;11492:20;11487:3;11480:33;11547:6;11541:13;11569:76;11640:4;11625:13;11569:76;;;11561:84;;11662:66;11721:6;11662:66;;;11652:76;;11751:4;11746:3;11742:14;11735:21;;11472:291;11462:1;11459;11455:9;11450:14;;11415:348;;;11419:14;11776:4;11769:11;;11793:3;11786:10;;11042:760;;;;;;;;;;11841:690;;11986:54;12034:5;11986:54;;;12053:86;12132:6;12127:3;12053:86;;;12046:93;;12160:56;12210:5;12160:56;;;12236:7;12264:1;12249:260;12274:6;12271:1;12268:13;12249:260;;;12341:6;12335:13;12362:63;12421:3;12406:13;12362:63;;;12355:70;;12442:60;12495:6;12442:60;;;12432:70;;12306:203;12296:1;12293;12289:9;12284:14;;12249:260;;;12253:14;12522:3;12515:10;;11965:566;;;;;;;;12539:104;12616:21;12631:5;12616:21;;;12611:3;12604:34;12598:45;;;12650:103;12723:24;12741:5;12723:24;;;12718:3;12711:37;12705:48;;;12760:113;12843:24;12861:5;12843:24;;;12838:3;12831:37;12825:48;;;12880:343;;12990:38;13022:5;12990:38;;;13040:70;13103:6;13098:3;13040:70;;;13033:77;;13115:52;13160:6;13155:3;13148:4;13141:5;13137:16;13115:52;;;13188:29;13210:6;13188:29;;;13183:3;13179:39;13172:46;;12970:253;;;;;;13230:174;13337:61;13392:5;13337:61;;;13332:3;13325:74;13319:85;;;13436:313;;13570:89;13652:6;13647:3;13570:89;;;13563:96;;13671:43;13707:6;13702:3;13695:5;13671:43;;;13736:6;13731:3;13727:16;13720:23;;13556:193;;;;;;13757:347;;13869:39;13902:5;13869:39;;;13920:71;13984:6;13979:3;13920:71;;;13913:78;;13996:52;14041:6;14036:3;14029:4;14022:5;14018:16;13996:52;;;14069:29;14091:6;14069:29;;;14064:3;14060:39;14053:46;;13849:255;;;;;;14111:360;;14241:39;14274:5;14241:39;;;14292:89;14374:6;14369:3;14292:89;;;14285:96;;14386:52;14431:6;14426:3;14419:4;14412:5;14408:16;14386:52;;;14459:6;14454:3;14450:16;14443:23;;14221:250;;;;;;14478:319;;14576:35;14605:5;14576:35;;;14623:61;14677:6;14672:3;14623:61;;;14616:68;;14689:52;14734:6;14729:3;14722:4;14715:5;14711:16;14689:52;;;14762:29;14784:6;14762:29;;;14757:3;14753:39;14746:46;;14556:241;;;;;;14805:465;;14965:67;15029:2;15024:3;14965:67;;;14958:74;;15065:66;15061:1;15056:3;15052:11;15045:87;15166:66;15161:2;15156:3;15152:12;15145:88;15261:2;15256:3;15252:12;15245:19;;14951:319;;;;15279:465;;15439:67;15503:2;15498:3;15439:67;;;15432:74;;15539:66;15535:1;15530:3;15526:11;15519:87;15640:66;15635:2;15630:3;15626:12;15619:88;15735:2;15730:3;15726:12;15719:19;;15425:319;;;;15753:465;;15913:67;15977:2;15972:3;15913:67;;;15906:74;;16013:66;16009:1;16004:3;16000:11;15993:87;16114:66;16109:2;16104:3;16100:12;16093:88;16209:2;16204:3;16200:12;16193:19;;15899:319;;;;16227:465;;16387:67;16451:2;16446:3;16387:67;;;16380:74;;16487:66;16483:1;16478:3;16474:11;16467:87;16588:66;16583:2;16578:3;16574:12;16567:88;16683:2;16678:3;16674:12;16667:19;;16373:319;;;;16701:364;;16861:67;16925:2;16920:3;16861:67;;;16854:74;;16961:66;16957:1;16952:3;16948:11;16941:87;17056:2;17051:3;17047:12;17040:19;;16847:218;;;;17074:465;;17234:67;17298:2;17293:3;17234:67;;;17227:74;;17334:66;17330:1;17325:3;17321:11;17314:87;17435:66;17430:2;17425:3;17421:12;17414:88;17530:2;17525:3;17521:12;17514:19;;17220:319;;;;17548:465;;17708:67;17772:2;17767:3;17708:67;;;17701:74;;17808:66;17804:1;17799:3;17795:11;17788:87;17909:66;17904:2;17899:3;17895:12;17888:88;18004:2;17999:3;17995:12;17988:19;;17694:319;;;;18022:465;;18182:67;18246:2;18241:3;18182:67;;;18175:74;;18282:66;18278:1;18273:3;18269:11;18262:87;18383:66;18378:2;18373:3;18369:12;18362:88;18478:2;18473:3;18469:12;18462:19;;18168:319;;;;18496:364;;18656:67;18720:2;18715:3;18656:67;;;18649:74;;18756:66;18752:1;18747:3;18743:11;18736:87;18851:2;18846:3;18842:12;18835:19;;18642:218;;;;18869:465;;19029:67;19093:2;19088:3;19029:67;;;19022:74;;19129:66;19125:1;19120:3;19116:11;19109:87;19230:66;19225:2;19220:3;19216:12;19209:88;19325:2;19320:3;19316:12;19309:19;;19015:319;;;;19343:465;;19503:67;19567:2;19562:3;19503:67;;;19496:74;;19603:66;19599:1;19594:3;19590:11;19583:87;19704:66;19699:2;19694:3;19690:12;19683:88;19799:2;19794:3;19790:12;19783:19;;19489:319;;;;19817:465;;19977:67;20041:2;20036:3;19977:67;;;19970:74;;20077:66;20073:1;20068:3;20064:11;20057:87;20178:66;20173:2;20168:3;20164:12;20157:88;20273:2;20268:3;20264:12;20257:19;;19963:319;;;;20291:364;;20451:67;20515:2;20510:3;20451:67;;;20444:74;;20551:66;20547:1;20542:3;20538:11;20531:87;20646:2;20641:3;20637:12;20630:19;;20437:218;;;;20664:465;;20824:67;20888:2;20883:3;20824:67;;;20817:74;;20924:66;20920:1;20915:3;20911:11;20904:87;21025:66;21020:2;21015:3;21011:12;21004:88;21120:2;21115:3;21111:12;21104:19;;20810:319;;;;21138:465;;21298:67;21362:2;21357:3;21298:67;;;21291:74;;21398:66;21394:1;21389:3;21385:11;21378:87;21499:66;21494:2;21489:3;21485:12;21478:88;21594:2;21589:3;21585:12;21578:19;;21284:319;;;;21612:465;;21772:67;21836:2;21831:3;21772:67;;;21765:74;;21872:66;21868:1;21863:3;21859:11;21852:87;21973:66;21968:2;21963:3;21959:12;21952:88;22068:2;22063:3;22059:12;22052:19;;21758:319;;;;22086:364;;22246:67;22310:2;22305:3;22246:67;;;22239:74;;22346:66;22342:1;22337:3;22333:11;22326:87;22441:2;22436:3;22432:12;22425:19;;22232:218;;;;22459:465;;22619:67;22683:2;22678:3;22619:67;;;22612:74;;22719:66;22715:1;22710:3;22706:11;22699:87;22820:66;22815:2;22810:3;22806:12;22799:88;22915:2;22910:3;22906:12;22899:19;;22605:319;;;;22933:465;;23093:67;23157:2;23152:3;23093:67;;;23086:74;;23193:66;23189:1;23184:3;23180:11;23173:87;23294:66;23289:2;23284:3;23280:12;23273:88;23389:2;23384:3;23380:12;23373:19;;23079:319;;;;23407:465;;23567:67;23631:2;23626:3;23567:67;;;23560:74;;23667:66;23663:1;23658:3;23654:11;23647:87;23768:66;23763:2;23758:3;23754:12;23747:88;23863:2;23858:3;23854:12;23847:19;;23553:319;;;;23881:364;;24041:67;24105:2;24100:3;24041:67;;;24034:74;;24141:66;24137:1;24132:3;24128:11;24121:87;24236:2;24231:3;24227:12;24220:19;;24027:218;;;;24254:465;;24414:67;24478:2;24473:3;24414:67;;;24407:74;;24514:66;24510:1;24505:3;24501:11;24494:87;24615:66;24610:2;24605:3;24601:12;24594:88;24710:2;24705:3;24701:12;24694:19;;24400:319;;;;24728:465;;24888:67;24952:2;24947:3;24888:67;;;24881:74;;24988:66;24984:1;24979:3;24975:11;24968:87;25089:66;25084:2;25079:3;25075:12;25068:88;25184:2;25179:3;25175:12;25168:19;;24874:319;;;;25202:465;;25362:67;25426:2;25421:3;25362:67;;;25355:74;;25462:66;25458:1;25453:3;25449:11;25442:87;25563:66;25558:2;25553:3;25549:12;25542:88;25658:2;25653:3;25649:12;25642:19;;25348:319;;;;25675:103;25748:24;25766:5;25748:24;;;25743:3;25736:37;25730:48;;;25785:113;25868:24;25886:5;25868:24;;;25863:3;25856:37;25850:48;;;25905:110;25986:23;26003:5;25986:23;;;25981:3;25974:36;25968:47;;;26022:286;;26178:105;26279:3;26270:6;26262;26178:105;;;26171:112;;26300:3;26293:10;;26159:149;;;;;;26315:266;;26461:95;26552:3;26543:6;26461:95;;;26454:102;;26573:3;26566:10;;26442:139;;;;;26588:213;;26706:2;26695:9;26691:18;26683:26;;26720:71;26788:1;26777:9;26773:17;26764:6;26720:71;;;26677:124;;;;;26808:631;;27028:3;27017:9;27013:19;27005:27;;27043:71;27111:1;27100:9;27096:17;27087:6;27043:71;;;27125:72;27193:2;27182:9;27178:18;27169:6;27125:72;;;27208;27276:2;27265:9;27261:18;27252:6;27208:72;;;27328:9;27322:4;27318:20;27313:2;27302:9;27298:18;27291:48;27353:76;27424:4;27415:6;27353:76;;;27345:84;;26999:440;;;;;;;;27446:847;;27718:3;27707:9;27703:19;27695:27;;27733:71;27801:1;27790:9;27786:17;27777:6;27733:71;;;27852:9;27846:4;27842:20;27837:2;27826:9;27822:18;27815:48;27877:78;27950:4;27941:6;27877:78;;;27869:86;;27966:72;28034:2;28023:9;28019:18;28010:6;27966:72;;;28049:70;28115:2;28104:9;28100:18;28091:6;28049:70;;;28130:71;28196:3;28185:9;28181:19;28172:6;28130:71;;;28212;28278:3;28267:9;28263:19;28254:6;28212:71;;;27689:604;;;;;;;;;;28300:361;;28468:2;28457:9;28453:18;28445:26;;28518:9;28512:4;28508:20;28504:1;28493:9;28489:17;28482:47;28543:108;28646:4;28637:6;28543:108;;;28535:116;;28439:222;;;;;28668:385;;28848:2;28837:9;28833:18;28825:26;;28898:9;28892:4;28888:20;28884:1;28873:9;28869:17;28862:47;28923:120;29038:4;29029:6;28923:120;;;28915:128;;28819:234;;;;;29060:361;;29228:2;29217:9;29213:18;29205:26;;29278:9;29272:4;29268:20;29264:1;29253:9;29249:17;29242:47;29303:108;29406:4;29397:6;29303:108;;;29295:116;;29199:222;;;;;29428:201;;29540:2;29529:9;29525:18;29517:26;;29554:65;29616:1;29605:9;29601:17;29592:6;29554:65;;;29511:118;;;;;29636:261;;29778:2;29767:9;29763:18;29755:26;;29792:95;29884:1;29873:9;29869:17;29860:6;29792:95;;;29749:148;;;;;29904:301;;30042:2;30031:9;30027:18;30019:26;;30092:9;30086:4;30082:20;30078:1;30067:9;30063:17;30056:47;30117:78;30190:4;30181:6;30117:78;;;30109:86;;30013:192;;;;;30212:407;;30403:2;30392:9;30388:18;30380:26;;30453:9;30447:4;30443:20;30439:1;30428:9;30424:17;30417:47;30478:131;30604:4;30478:131;;;30470:139;;30374:245;;;;30626:407;;30817:2;30806:9;30802:18;30794:26;;30867:9;30861:4;30857:20;30853:1;30842:9;30838:17;30831:47;30892:131;31018:4;30892:131;;;30884:139;;30788:245;;;;31040:407;;31231:2;31220:9;31216:18;31208:26;;31281:9;31275:4;31271:20;31267:1;31256:9;31252:17;31245:47;31306:131;31432:4;31306:131;;;31298:139;;31202:245;;;;31454:407;;31645:2;31634:9;31630:18;31622:26;;31695:9;31689:4;31685:20;31681:1;31670:9;31666:17;31659:47;31720:131;31846:4;31720:131;;;31712:139;;31616:245;;;;31868:407;;32059:2;32048:9;32044:18;32036:26;;32109:9;32103:4;32099:20;32095:1;32084:9;32080:17;32073:47;32134:131;32260:4;32134:131;;;32126:139;;32030:245;;;;32282:407;;32473:2;32462:9;32458:18;32450:26;;32523:9;32517:4;32513:20;32509:1;32498:9;32494:17;32487:47;32548:131;32674:4;32548:131;;;32540:139;;32444:245;;;;32696:407;;32887:2;32876:9;32872:18;32864:26;;32937:9;32931:4;32927:20;32923:1;32912:9;32908:17;32901:47;32962:131;33088:4;32962:131;;;32954:139;;32858:245;;;;33110:407;;33301:2;33290:9;33286:18;33278:26;;33351:9;33345:4;33341:20;33337:1;33326:9;33322:17;33315:47;33376:131;33502:4;33376:131;;;33368:139;;33272:245;;;;33524:407;;33715:2;33704:9;33700:18;33692:26;;33765:9;33759:4;33755:20;33751:1;33740:9;33736:17;33729:47;33790:131;33916:4;33790:131;;;33782:139;;33686:245;;;;33938:407;;34129:2;34118:9;34114:18;34106:26;;34179:9;34173:4;34169:20;34165:1;34154:9;34150:17;34143:47;34204:131;34330:4;34204:131;;;34196:139;;34100:245;;;;34352:407;;34543:2;34532:9;34528:18;34520:26;;34593:9;34587:4;34583:20;34579:1;34568:9;34564:17;34557:47;34618:131;34744:4;34618:131;;;34610:139;;34514:245;;;;34766:407;;34957:2;34946:9;34942:18;34934:26;;35007:9;35001:4;34997:20;34993:1;34982:9;34978:17;34971:47;35032:131;35158:4;35032:131;;;35024:139;;34928:245;;;;35180:407;;35371:2;35360:9;35356:18;35348:26;;35421:9;35415:4;35411:20;35407:1;35396:9;35392:17;35385:47;35446:131;35572:4;35446:131;;;35438:139;;35342:245;;;;35594:407;;35785:2;35774:9;35770:18;35762:26;;35835:9;35829:4;35825:20;35821:1;35810:9;35806:17;35799:47;35860:131;35986:4;35860:131;;;35852:139;;35756:245;;;;36008:407;;36199:2;36188:9;36184:18;36176:26;;36249:9;36243:4;36239:20;36235:1;36224:9;36220:17;36213:47;36274:131;36400:4;36274:131;;;36266:139;;36170:245;;;;36422:407;;36613:2;36602:9;36598:18;36590:26;;36663:9;36657:4;36653:20;36649:1;36638:9;36634:17;36627:47;36688:131;36814:4;36688:131;;;36680:139;;36584:245;;;;36836:407;;37027:2;37016:9;37012:18;37004:26;;37077:9;37071:4;37067:20;37063:1;37052:9;37048:17;37041:47;37102:131;37228:4;37102:131;;;37094:139;;36998:245;;;;37250:407;;37441:2;37430:9;37426:18;37418:26;;37491:9;37485:4;37481:20;37477:1;37466:9;37462:17;37455:47;37516:131;37642:4;37516:131;;;37508:139;;37412:245;;;;37664:407;;37855:2;37844:9;37840:18;37832:26;;37905:9;37899:4;37895:20;37891:1;37880:9;37876:17;37869:47;37930:131;38056:4;37930:131;;;37922:139;;37826:245;;;;38078:407;;38269:2;38258:9;38254:18;38246:26;;38319:9;38313:4;38309:20;38305:1;38294:9;38290:17;38283:47;38344:131;38470:4;38344:131;;;38336:139;;38240:245;;;;38492:407;;38683:2;38672:9;38668:18;38660:26;;38733:9;38727:4;38723:20;38719:1;38708:9;38704:17;38697:47;38758:131;38884:4;38758:131;;;38750:139;;38654:245;;;;38906:407;;39097:2;39086:9;39082:18;39074:26;;39147:9;39141:4;39137:20;39133:1;39122:9;39118:17;39111:47;39172:131;39298:4;39172:131;;;39164:139;;39068:245;;;;39320:407;;39511:2;39500:9;39496:18;39488:26;;39561:9;39555:4;39551:20;39547:1;39536:9;39532:17;39525:47;39586:131;39712:4;39586:131;;;39578:139;;39482:245;;;;39734:407;;39925:2;39914:9;39910:18;39902:26;;39975:9;39969:4;39965:20;39961:1;39950:9;39946:17;39939:47;40000:131;40126:4;40000:131;;;39992:139;;39896:245;;;;40148:213;;40266:2;40255:9;40251:18;40243:26;;40280:71;40348:1;40337:9;40333:17;40324:6;40280:71;;;40237:124;;;;;40368:256;;40430:2;40424:9;40414:19;;40468:4;40460:6;40456:17;40567:6;40555:10;40552:22;40531:18;40519:10;40516:34;40513:62;40510:2;;;40588:1;40585;40578:12;40510:2;40608:10;40604:2;40597:22;40408:216;;;;;40631:321;;40774:18;40766:6;40763:30;40760:2;;;40806:1;40803;40796:12;40760:2;40873:4;40869:9;40862:4;40854:6;40850:17;40846:33;40838:41;;40937:4;40931;40927:15;40919:23;;40697:255;;;;40959:322;;41103:18;41095:6;41092:30;41089:2;;;41135:1;41132;41125:12;41089:2;41202:4;41198:9;41191:4;41183:6;41179:17;41175:33;41167:41;;41266:4;41260;41256:15;41248:23;;41026:255;;;;41288:151;;41374:3;41366:11;;41412:4;41407:3;41403:14;41395:22;;41360:79;;;;41446:157;;41538:3;41530:11;;41576:4;41571:3;41567:14;41559:22;;41524:79;;;;41610:151;;41696:3;41688:11;;41734:4;41729:3;41725:14;41717:22;;41682:79;;;;41768:137;;41877:5;41871:12;41861:22;;41842:63;;;;41912:143;;42027:5;42021:12;42011:22;;41992:63;;;;42062:137;;42171:5;42165:12;42155:22;;42136:63;;;;42206:121;;42299:5;42293:12;42283:22;;42264:63;;;;42334:118;;42424:5;42418:12;42408:22;;42389:63;;;;42459:122;;42553:5;42547:12;42537:22;;42518:63;;;;42588:108;;42686:4;42681:3;42677:14;42669:22;;42663:33;;;;42703:114;;42807:4;42802:3;42798:14;42790:22;;42784:33;;;;42824:108;;42922:4;42917:3;42913:14;42905:22;;42899:33;;;;42940:178;;43070:6;43065:3;43058:19;43107:4;43102:3;43098:14;43083:29;;43051:67;;;;;43127:184;;43263:6;43258:3;43251:19;43300:4;43295:3;43291:14;43276:29;;43244:67;;;;;43320:178;;43450:6;43445:3;43438:19;43487:4;43482:3;43478:14;43463:29;;43431:67;;;;;43507:162;;43621:6;43616:3;43609:19;43658:4;43653:3;43649:14;43634:29;;43602:67;;;;;43678:153;;43783:6;43778:3;43771:19;43820:4;43815:3;43811:14;43796:29;;43764:67;;;;;43840:163;;43955:6;43950:3;43943:19;43992:4;43987:3;43983:14;43968:29;;43936:67;;;;;44012:145;;44148:3;44133:18;;44126:31;;;;;44165:91;;44227:24;44245:5;44227:24;;;44216:35;;44210:46;;;;44263:85;;44336:5;44329:13;44322:21;44311:32;;44305:43;;;;44355:72;;44417:5;44406:16;;44400:27;;;;44434:144;;44506:66;44499:5;44495:78;44484:89;;44478:100;;;;44585:121;;44658:42;44651:5;44647:54;44636:65;;44630:76;;;;44713:72;;44775:5;44764:16;;44758:27;;;;44792:92;;44864:14;44857:5;44853:26;44842:37;;44836:48;;;;44891:169;;44994:61;45049:5;44994:61;;;44981:74;;44975:85;;;;45067:132;;45170:24;45188:5;45170:24;;;45157:37;;45151:48;;;;45207:145;45288:6;45283:3;45278;45265:30;45344:1;45335:6;45330:3;45326:16;45319:27;45258:94;;;;45361:268;45426:1;45433:101;45447:6;45444:1;45441:13;45433:101;;;45523:1;45518:3;45514:11;45508:18;45504:1;45499:3;45495:11;45488:39;45469:2;45466:1;45462:10;45457:15;;45433:101;;;45549:6;45546:1;45543:13;45540:2;;;45614:1;45605:6;45600:3;45596:16;45589:27;45540:2;45410:219;;;;;45637:97;;45725:2;45721:7;45716:2;45709:5;45705:14;45701:28;45691:38;;45685:49;;;;45742:117;45811:24;45829:5;45811:24;;;45804:5;45801:35;45791:2;;45850:1;45847;45840:12;45791:2;45785:74;;45866:111;45932:21;45947:5;45932:21;;;45925:5;45922:32;45912:2;;45968:1;45965;45958:12;45912:2;45906:71;;45984:117;46053:24;46071:5;46053:24;;;46046:5;46043:35;46033:2;;46092:1;46089;46082:12;46033:2;46027:74;;46108:115;46176:23;46193:5;46176:23;;;46169:5;46166:34;46156:2;;46214:1;46211;46204:12;46156:2;46150:73;;46230:117;46299:24;46317:5;46299:24;;;46292:5;46289:35;46279:2;;46338:1;46335;46328:12;46279:2;46273:74;;46354:115;46422:23;46439:5;46422:23;;;46415:5;46412:34;46402:2;;46460:1;46457;46450:12;46402:2;46396:73;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n */\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2092
      ]
    },
    "id": 2093,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2036,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "id": 2037,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:9"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2038,
        "nodeType": "ImportDirective",
        "scope": 2093,
        "sourceUnit": 1875,
        "src": "60:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2039,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1874,
              "src": "311:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1874",
                "typeString": "contract ERC721"
              }
            },
            "id": 2040,
            "nodeType": "InheritanceSpecifier",
            "src": "311:6:9"
          }
        ],
        "contractDependencies": [
          142,
          1874,
          1884,
          1987
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol",
        "fullyImplemented": true,
        "id": 2092,
        "linearizedBaseContracts": [
          2092,
          1874,
          1987,
          142,
          1884
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2042,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2092,
            "src": "343:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2041,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "343:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2044,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2092,
            "src": "390:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2043,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "390:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2047,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2092,
            "src": "679:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2045,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "679:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2046,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "735:10:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2074,
              "nodeType": "Block",
              "src": "888:249:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2056,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2042,
                      "src": "899:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2057,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "907:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "899:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2059,
                  "nodeType": "ExpressionStatement",
                  "src": "899:12:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2060,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2044,
                      "src": "921:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2061,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2051,
                      "src": "931:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "921:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2063,
                  "nodeType": "ExpressionStatement",
                  "src": "921:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2065,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2047,
                        "src": "1044:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2064,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1025:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:49:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2071,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2053,
                        "src": "1113:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2068,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2388,
                        "src": "1085:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2092",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 326,
                      "src": "1085:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2073,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:44:9"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2075,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2049,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2075,
                  "src": "814:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2048,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2051,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2075,
                  "src": "834:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2050,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2053,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2075,
                  "src": "856:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "813:67:9"
            },
            "returnParameters": {
              "id": 2055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:9"
            },
            "scope": 2092,
            "src": "801:336:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2082,
              "nodeType": "Block",
              "src": "1296:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2080,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2042,
                    "src": "1313:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2079,
                  "id": 2081,
                  "nodeType": "Return",
                  "src": "1306:12:9"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:9"
            },
            "returnParameters": {
              "id": 2079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2078,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "1281:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2077,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1280:15:9"
            },
            "scope": 2092,
            "src": "1242:83:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2090,
              "nodeType": "Block",
              "src": "1490:31:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2088,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2044,
                    "src": "1507:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2087,
                  "id": 2089,
                  "nodeType": "Return",
                  "src": "1500:14:9"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:2:9"
            },
            "returnParameters": {
              "id": 2087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2086,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2091,
                  "src": "1475:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:15:9"
            },
            "scope": 2092,
            "src": "1434:87:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2093,
        "src": "285:1239:9"
      }
    ],
    "src": "0:1525:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2092
      ]
    },
    "id": 2093,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2036,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "id": 2037,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:9"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2038,
        "nodeType": "ImportDirective",
        "scope": 2093,
        "sourceUnit": 1875,
        "src": "60:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2039,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1874,
              "src": "311:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1874",
                "typeString": "contract ERC721"
              }
            },
            "id": 2040,
            "nodeType": "InheritanceSpecifier",
            "src": "311:6:9"
          }
        ],
        "contractDependencies": [
          142,
          1874,
          1884,
          1987
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol",
        "fullyImplemented": true,
        "id": 2092,
        "linearizedBaseContracts": [
          2092,
          1874,
          1987,
          142,
          1884
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2042,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2092,
            "src": "343:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2041,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "343:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2044,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2092,
            "src": "390:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2043,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "390:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2047,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2092,
            "src": "679:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2045,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "679:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2046,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "735:10:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2074,
              "nodeType": "Block",
              "src": "888:249:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2056,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2042,
                      "src": "899:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2057,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "907:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "899:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2059,
                  "nodeType": "ExpressionStatement",
                  "src": "899:12:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2060,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2044,
                      "src": "921:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2061,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2051,
                      "src": "931:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "921:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2063,
                  "nodeType": "ExpressionStatement",
                  "src": "921:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2065,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2047,
                        "src": "1044:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2064,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1025:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:49:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2071,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2053,
                        "src": "1113:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2068,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2388,
                        "src": "1085:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2092",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 326,
                      "src": "1085:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2073,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:44:9"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2075,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2049,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2075,
                  "src": "814:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2048,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2051,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2075,
                  "src": "834:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2050,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2053,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2075,
                  "src": "856:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "813:67:9"
            },
            "returnParameters": {
              "id": 2055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:9"
            },
            "scope": 2092,
            "src": "801:336:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2082,
              "nodeType": "Block",
              "src": "1296:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2080,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2042,
                    "src": "1313:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2079,
                  "id": 2081,
                  "nodeType": "Return",
                  "src": "1306:12:9"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:9"
            },
            "returnParameters": {
              "id": 2079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2078,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "1281:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2077,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1280:15:9"
            },
            "scope": 2092,
            "src": "1242:83:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2090,
              "nodeType": "Block",
              "src": "1490:31:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2088,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2044,
                    "src": "1507:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2087,
                  "id": 2089,
                  "nodeType": "Return",
                  "src": "1500:14:9"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:2:9"
            },
            "returnParameters": {
              "id": 2087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2086,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2091,
                  "src": "1475:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:15:9"
            },
            "scope": 2092,
            "src": "1434:87:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2093,
        "src": "285:1239:9"
      }
    ],
    "src": "0:1525:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-09-13T01:30:42.282Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "isMinter(address)": {
        "details": "Checks if minter isWhitelisted()"
      },
      "isWhitelisted(address)": {
        "details": "Checks Registry contract for whitelisted status",
        "params": {
          "target": "The address to check"
        }
      },
      "mint(string,bytes32,uint48,uint48,uint48)": {
        "details": "Function to mint tokens.",
        "return": "tokenId"
      },
      "mintWithTokenURI(string,bytes32,uint48,uint48,uint48,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause actions on this contract"
      },
      "safeMint(string,bytes32,uint48,uint48,uint48)": {
        "details": "Function to safely mint tokens.",
        "return": "tokenId"
      },
      "safeMint(string,bytes32,uint48,uint48,uint48,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check."
        },
        "return": "tokenId"
      },
      "safeMintWithTokenURI(string,bytes32,uint48,uint48,uint48,string)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots on      We're not grabbing this from the Registry in case the user has private"
      },
      "tokenMinterPropertyNames(address,string)": {
        "details": "Look up all Property Names a Minter has tokenized on a content ID"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls.",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause the smart contract."
      },
      "updateRegistryAddress(address)": {
        "details": "Update address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(uint256)": {
        "notice": "Customized for Microsponsors"
      },
      "safeMintWithTokenURI(string,bytes32,uint48,uint48,uint48,string)": {
        "notice": "Customized for Microsponsors from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol"
      },
      "unpause()": {
        "notice": "This is public rather than external so it can be called by  derived contracts."
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol"
  }
}