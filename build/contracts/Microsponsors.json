{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        }
      ],
      "name": "tokenMinterPropertyNames",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "safeMintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"tokenMinterPropertyNames\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"isMinter(address)\":{\"details\":\"Checks if minter isWhitelisted()\"},\"isWhitelisted(address)\":{\"details\":\"Checks Registry contract for whitelisted status\",\"params\":{\"target\":\"The address to check\"}},\"mint(string,string,uint48,uint48,uint48)\":{\"details\":\"Function to mint tokens.\",\"return\":\"tokenId\"},\"mintWithTokenURI(string,string,uint48,uint48,uint48,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause actions on this contract\"},\"safeMint(string,string,uint48,uint48,uint48)\":{\"details\":\"Function to safely mint tokens.\",\"return\":\"tokenId\"},\"safeMint(string,string,uint48,uint48,uint48,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\"},\"return\":\"tokenId\"},\"safeMintWithTokenURI(string,string,uint48,uint48,uint48,string)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots on      We're not grabbing this from the Registry in case the user has private\"},\"tokenMinterPropertyNames(address,string)\":{\"details\":\"Look up all Property Names a Minter has tokenized on a content ID\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls.\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause the smart contract.\"},\"updateRegistryAddress(address)\":{\"details\":\"Update address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}}}},\"userdoc\":{\"methods\":{\"burn(uint256)\":{\"notice\":\"Customized for Microsponsors\"},\"safeMintWithTokenURI(string,string,uint48,uint48,uint48,string)\":{\"notice\":\"Customized for Microsponsors from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol\"},\"unpause()\":{\"notice\":\"This is public rather than external so it can be called by  derived contracts.\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0x20d8db42a37684603bc0657b1dc9f84fd5a4627a68890e3115897622baeba71e\",\"urls\":[\"bzz-raw://43f590354af39d420b2eb6ce226d9ced491c6c3edec1bab7c544e1ded5f85fd3\",\"dweb:/ipfs/QmQGZ5ZrLaP11hDWy6Q9oCpH1QA64kukXycpqprEa67Kee\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0x3a7de85066f743d397f8b6f5a9a07ada0b0b60ac3b62441be14112a2c6b94306\",\"urls\":[\"bzz-raw://f4917a4e90595f44ce1e86179981e2532630452a9c4973ac06dfa154cd7966e6\",\"dweb:/ipfs/QmaFEK1GEV6hQN3WjDULRsDXQwJvDterEMJA6u5bjVHdhC\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600c60006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506040516200595438038062005954833981810160405262000052919081019062000423565b6200006a6301ffc9a760e01b6200013b60201b60201c565b620000826380ac58cd60e01b6200013b60201b60201c565b620000926200021360201b60201c565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600d9080519060200190620000ea92919062000301565b5081600e90805190602001906200010392919062000301565b506200011c635b5e139f60e01b6200013b60201b60201c565b62000132816200021b60201b62001ad61760201c565b50505062000663565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019e906200052f565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16620002646200021360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620002bd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002b49062000551565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034457805160ff191683800117855562000375565b8280016001018555821562000375579182015b828111156200037457825182559160200191906001019062000357565b5b50905062000384919062000388565b5090565b620003ad91905b80821115620003a95760008160009055506001016200038f565b5090565b90565b600081519050620003c18162000649565b92915050565b600082601f830112620003d957600080fd5b8151620003f0620003ea82620005a1565b62000573565b915080825260208301602083018583830111156200040d57600080fd5b6200041a83828462000613565b50505092915050565b6000806000606084860312156200043957600080fd5b600084015167ffffffffffffffff8111156200045457600080fd5b6200046286828701620003c7565b935050602084015167ffffffffffffffff8111156200048057600080fd5b6200048e86828701620003c7565b9250506040620004a186828701620003b0565b9150509250925092565b6000620004ba601c83620005ce565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b6000620004fc601b83620005ce565b91507f4552433732313a2063616c6c6572206973206e6f74206f776e657200000000006000830152602082019050919050565b600060208201905081810360008301526200054a81620004ab565b9050919050565b600060208201905081810360008301526200056c81620004ed565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156200059757600080fd5b8060405250919050565b600067ffffffffffffffff821115620005b957600080fd5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b6000620005ec82620005f3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200063357808201518184015260208101905062000616565b8381111562000643576000848401525b50505050565b6200065481620005df565b81146200066057600080fd5b50565b6152e180620006736000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637b1039991161011a578063b88d4fde116100ad578063c9ef79ad1161007c578063c9ef79ad146105fc578063dc6fd7101461062c578063e5c249241461065c578063e985e9c514610691578063f2fde38b146106c1576101fb565b8063b88d4fde14610564578063c57a882514610580578063c87b56dd1461059c578063c88e5dc5146105cc576101fb565b806395d89b41116100e957806395d89b41146104ca578063a22cb465146104e8578063a4ede12814610504578063aa271e1a14610534576101fb565b80637b103999146104545780638456cb59146104725780638462151c1461047c5780638da5cb5b146104ac576101fb565b80633af32abf116101925780635c975abb116101615780635c975abb146103a65780636352211e146103c457806370a08231146103f45780637affcb9a14610424576101fb565b80633af32abf146103345780633f4ba83a1461036457806342842e0e1461036e57806342966c681461038a576101fb565b806318160ddd116101ce57806318160ddd1461029a5780631b2daa70146102b857806323b872dd146102e857806323c5bd8614610304576101fb565b806301ffc9a71461020057806306fdde0314610230578063081812fc1461024e578063095ea7b31461027e575b600080fd5b61021a60048036036102159190810190613d2b565b6106dd565b6040516102279190614c65565b60405180910390f35b610238610744565b6040516102459190614c9b565b60405180910390f35b61026860048036036102639190810190613fc6565b6107e6565b6040516102759190614b4b565b60405180910390f35b61029860048036036102939190810190613cc6565b61086b565b005b6102a2610a8f565b6040516102af9190614fbd565b60405180910390f35b6102d260048036036102cd9190810190613e24565b610aa0565b6040516102df9190614fbd565b60405180910390f35b61030260048036036102fd9190810190613b68565b610b86565b005b61031e60048036036103199190810190613ef5565b610c90565b60405161032b9190614fbd565b60405180910390f35b61034e60048036036103499190810190613b03565b610d7f565b60405161035b9190614c65565b60405180910390f35b61036c610e33565b005b61038860048036036103839190810190613b68565b610f00565b005b6103a4600480360361039f9190810190613fc6565b610f20565b005b6103ae610f96565b6040516103bb9190614c65565b60405180910390f35b6103de60048036036103d99190810190613fc6565b610fa9565b6040516103eb9190614b4b565b60405180910390f35b61040e60048036036104099190810190613b03565b61105b565b60405161041b9190614fbd565b60405180910390f35b61043e60048036036104399190810190613c6e565b61111a565b60405161044b9190614c21565b60405180910390f35b61045c611302565b6040516104699190614c80565b60405180910390f35b61047a611328565b005b61049660048036036104919190810190613b03565b6113f6565b6040516104a39190614c43565b60405180910390f35b6104b461153e565b6040516104c19190614b4b565b60405180910390f35b6104d2611564565b6040516104df9190614c9b565b60405180910390f35b61050260048036036104fd9190810190613c32565b611606565b005b61051e60048036036105199190810190613b03565b6117f0565b60405161052b9190614c21565b60405180910390f35b61054e60048036036105499190810190613b03565b6119b8565b60405161055b9190614c65565b60405180910390f35b61057e60048036036105799190810190613bb7565b6119ca565b005b61059a60048036036105959190810190613b03565b611ad6565b005b6105b660048036036105b19190810190613fc6565b611bb1565b6040516105c39190614c9b565b60405180910390f35b6105e660048036036105e19190810190613ef5565b611cae565b6040516105f39190614fbd565b60405180910390f35b61061660048036036106119190810190613d7d565b611d9d565b6040516106239190614fbd565b60405180910390f35b61064660048036036106419190810190613d7d565b611e81565b6040516106539190614fbd565b60405180910390f35b61067660048036036106719190810190613fc6565b611f65565b60405161068896959493929190614bb2565b60405180910390f35b6106ab60048036036106a69190810190613b2c565b6121e2565b6040516106b89190614c65565b60405180910390f35b6106db60048036036106d69190810190613b03565b612276565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600d8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107dc5780601f106107b1576101008083540402835291602001916107dc565b820191906000526020600020905b8154815290600101906020018083116107bf57829003601f168201915b5050505050905090565b60006107f182612386565b610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082790614e7d565b60405180910390fd5b600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61087b6108766123f8565b610d7f565b6108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190614f9d565b60405180910390fd5b600c60009054906101000a900460ff16156108d457600080fd5b60006108df82610fa9565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094790614ebd565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661096f6123f8565b73ffffffffffffffffffffffffffffffffffffffff16148061099e575061099d816109986123f8565b6121e2565b5b6109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d490614e1d565b60405180910390fd5b82600a600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610a9b6003612400565b905090565b6000610ab2610aad6123f8565b6119b8565b610af1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae890614cdd565b60405180910390fd5b600c60009054906101000a900460ff1615610b0b57600080fd5b610b1687868661240e565b610b55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4c90614dbd565b60405180910390fd5b6000610b68610b626123f8565b84612557565b9050610b788189898989896125bb565b809150509695505050505050565b600c60009054906101000a900460ff1615610ba057600080fd5b610bb1610bab6123f8565b82612902565b610bf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be790614edd565b60405180910390fd5b610bf983610d7f565b610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f90614d7d565b60405180910390fd5b610c4182610d7f565b610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7790614d7d565b60405180910390fd5b610c8b8383836129e0565b505050565b6000610ca2610c9d6123f8565b6119b8565b610ce1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd890614cdd565b60405180910390fd5b600c60009054906101000a900460ff1615610cfb57600080fd5b610d0687868661240e565b610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c90614dbd565b60405180910390fd5b6000610d57610d526123f8565b612c0f565b9050610d678189898989896125bb565b610d718184612d96565b809150509695505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633af32abf836040518263ffffffff1660e01b8152600401610ddc9190614b4b565b60206040518083038186803b158015610df457600080fd5b505afa158015610e08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e2c9190810190613d02565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e746123f8565b73ffffffffffffffffffffffffffffffffffffffff1614610eca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec190614f3d565b60405180910390fd5b600c60009054906101000a900460ff16610ee357600080fd5b6000600c60006101000a81548160ff021916908315150217905550565b610f1b838383604051806020016040528060008152506119ca565b505050565b600c60009054906101000a900460ff1615610f3a57600080fd5b610f4b610f456123f8565b82612902565b610f8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8190614f5d565b60405180910390fd5b610f9381612e0a565b50565b600c60009054906101000a900460ff1681565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104990614e5d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c390614dfd565b60405180910390fd5b611113600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612400565b9050919050565b606080600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848460405161116c929190614b1b565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561126a57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112525780601f1061122757610100808354040283529160200191611252565b820191906000526020600020905b81548152906001019060200180831161123557829003601f168201915b5050505050815250508152602001906001019061119a565b505050509050606081516040519080825280602002602001820160405280156112a757816020015b60608152602001906001900390816112925790505b50905060008090505b82518110156112f5578281815181106112c557fe5b6020026020010151600001518282815181106112dd57fe5b602002602001018190525080806001019150506112b0565b5080925050509392505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113696123f8565b73ffffffffffffffffffffffffffffffffffffffff16146113bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b690614f3d565b60405180910390fd5b600c60009054906101000a900460ff16156113d957600080fd5b6001600c60006101000a81548160ff021916908315150217905550565b606060006114038361105b565b9050600081141561144757600060405190808252806020026020018201604052801561143e5781602001602082028038833980820191505090505b50915050611539565b6060816040519080825280602002602001820160405280156114785781602001602082028038833980820191505090505b5090506000611485610a8f565b905060008090506000600190505b828111611530578673ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611523578084838151811061150e57fe5b60200260200101818152505081806001019250505b8080600101915050611493565b83955050505050505b919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600e8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115fc5780601f106115d1576101008083540402835291602001916115fc565b820191906000526020600020905b8154815290600101906020018083116115df57829003601f168201915b5050505050905090565b6116166116116123f8565b610d7f565b611655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164c90614f9d565b60405180910390fd5b600c60009054906101000a900460ff161561166f57600080fd5b6116776123f8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116dc90614d3d565b60405180910390fd5b80600b60006116f26123f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661179f6123f8565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516117e49190614c65565b60405180910390a35050565b606080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561192257838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561190a5780601f106118df5761010080835404028352916020019161190a565b820191906000526020600020905b8154815290600101906020018083116118ed57829003601f168201915b50505050508152505081526020019060010190611852565b5050505090506060815160405190808252806020026020018201604052801561195f57816020015b606081526020019060019003908161194a5790505b50905060008090505b82518110156119ad5782818151811061197d57fe5b60200260200101516000015182828151811061199557fe5b60200260200101819052508080600101915050611968565b508092505050919050565b60006119c382610d7f565b9050919050565b600c60009054906101000a900460ff16156119e457600080fd5b6119ed84610d7f565b611a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2390614d7d565b60405180910390fd5b611a3583610d7f565b611a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6b90614d7d565b60405180910390fd5b611a85611a7f6123f8565b83612902565b611ac4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611abb90614edd565b60405180910390fd5b611ad084848484612e1f565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b176123f8565b73ffffffffffffffffffffffffffffffffffffffff1614611b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6490614f3d565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060611bbc82612386565b611bfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bf290614f7d565b60405180910390fd5b600960008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ca25780601f10611c7757610100808354040283529160200191611ca2565b820191906000526020600020905b815481529060010190602001808311611c8557829003601f168201915b50505050509050919050565b6000611cc0611cbb6123f8565b6119b8565b611cff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cf690614cdd565b60405180910390fd5b600c60009054906101000a900460ff1615611d1957600080fd5b611d2487868661240e565b611d63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5a90614dbd565b60405180910390fd5b6000611d75611d706123f8565b612e7b565b9050611d858189898989896125bb565b611d8f8184612d96565b809150509695505050505050565b6000611daf611daa6123f8565b6119b8565b611dee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de590614cdd565b60405180910390fd5b600c60009054906101000a900460ff1615611e0857600080fd5b611e1386858561240e565b611e52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4990614dbd565b60405180910390fd5b6000611e64611e5f6123f8565b612e7b565b9050611e748188888888886125bb565b8091505095945050505050565b6000611e93611e8e6123f8565b6119b8565b611ed2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ec990614cdd565b60405180910390fd5b600c60009054906101000a900460ff1615611eec57600080fd5b611ef786858561240e565b611f36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2d90614dbd565b60405180910390fd5b6000611f48611f436123f8565b612c0f565b9050611f588188888888886125bb565b8091505095945050505050565b60006060806000806000611f7887612386565b611fb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fae90614d9d565b60405180910390fd5b6006600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660066000898152602001908152602001600020600101600660008a8152602001908152602001600020600201600660008b815260200190815260200160002060030160009054906101000a900465ffffffffffff16600660008c815260200190815260200160002060030160069054906101000a900465ffffffffffff16600660008d8152602001908152602001600020600301600c9054906101000a900465ffffffffffff16848054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561212a5780601f106120ff5761010080835404028352916020019161212a565b820191906000526020600020905b81548152906001019060200180831161210d57829003601f168201915b50505050509450838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121c65780601f1061219b576101008083540402835291602001916121c6565b820191906000526020600020905b8154815290600101906020018083116121a957829003601f168201915b5050505050935095509550955095509550955091939550919395565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166122b76123f8565b73ffffffffffffffffffffffffffffffffffffffff161461230d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161230490614f3d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146123835780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b600081600001549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166347ba747a856040518263ffffffff1660e01b815260040161246b9190614c9b565b60206040518083038186803b15801561248357600080fd5b505afa158015612497573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124bb9190810190613d02565b6124fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124f190614ddd565b60405180910390fd5b8265ffffffffffff168265ffffffffffff161161254c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161254390614cfd565b60405180910390fd5b600190509392505050565b60008061256384612c0f565b90506125726000858386612ea2565b6125b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125a890614cbd565b60405180910390fd5b8091505092915050565b6125c486612386565b612603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125fa90614f1d565b60405180910390fd5b61260b6137ad565b6040518060c0016040528061261e6123f8565b73ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018565ffffffffffff1681526020018465ffffffffffff1681526020018365ffffffffffff168152509050806006600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906126e6929190613811565b506040820151816002019080519060200190612703929190613811565b5060608201518160030160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060808201518160030160066101000a81548165ffffffffffff021916908365ffffffffffff16021790555060a082015181600301600c6101000a81548165ffffffffffff021916908365ffffffffffff16021790555090505061279186612fc0565b61283257600860006127a16123f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806020016040528088815250908060018154018082558091505090600182039060005260206000200160009091929091909150600082015181600001908051906020019061282d929190613811565b505050505b61283c8686613150565b6128f9576007600061284c6123f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020866040516128949190614b34565b908152602001604051809103902060405180602001604052808781525090806001815401808255809150509060018203906000526020600020016000909192909190915060008201518160000190805190602001906128f4929190613811565b505050505b50505050505050565b600061290d82612386565b61294c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161294390614d5d565b60405180910390fd5b600061295783610fa9565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806129c657508373ffffffffffffffffffffffffffffffffffffffff166129ae846107e6565b73ffffffffffffffffffffffffffffffffffffffff16145b806129d757506129d681856121e2565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16612a0082610fa9565b73ffffffffffffffffffffffffffffffffffffffff1614612a56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a4d90614e9d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612abd90614d1d565b60405180910390fd5b612acf816132fd565b612b16600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206133bb565b612b5d600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206133de565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c7790614e3d565b60405180910390fd5b612c8a60036133de565b6000612c966003612400565b9050826004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d31600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206133de565b808373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480915050919050565b612d9f82612386565b612dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dd590614f1d565b60405180910390fd5b80600960008481526020019081526020016000209080519060200190612e05929190613891565b505050565b612e1c612e1682610fa9565b826133f4565b50565b612e2a8484846129e0565b612e3684848484612ea2565b612e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e6c90614cbd565b60405180910390fd5b50505050565b600080612e978360405180602001604052806000815250612557565b905080915050919050565b6000612ec38473ffffffffffffffffffffffffffffffffffffffff16613664565b612ed05760019050612fb8565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02612ef66123f8565b8887876040518563ffffffff1660e01b8152600401612f189493929190614b66565b602060405180830381600087803b158015612f3257600080fd5b505af1158015612f46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612f6a9190810190613d54565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60006060600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156130f357838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130db5780601f106130b0576101008083540402835291602001916130db565b820191906000526020600020905b8154815290600101906020018083116130be57829003601f168201915b50505050508152505081526020019060010190613023565b505050509050600080905060008090505b82518110156131455761312e8584838151811061311d57fe5b6020026020010151600001516136af565b1561313857600191505b8080600101915050613104565b508092505050919050565b60006060600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020846040516131a19190614b34565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561329f57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156132875780601f1061325c57610100808354040283529160200191613287565b820191906000526020600020905b81548152906001019060200180831161326a57829003601f168201915b505050505081525050815260200190600101906131cf565b505050509050600080905060008090505b82518110156132f1576132da858483815181106132c957fe5b6020026020010151600001516136af565b156132e457600191505b80806001019150506132b0565b50809250505092915050565b600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146133b8576000600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6133d36001826000015461370890919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b8173ffffffffffffffffffffffffffffffffffffffff1661341482610fa9565b73ffffffffffffffffffffffffffffffffffffffff161461346a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161346190614efd565b60405180910390fd5b613473816132fd565b6134ba600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206133bb565b60006004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600960008381526020019081526020016000208054600181600116156101000203166002900490501461355c5760096000828152602001908152602001600020600061355b9190613911565b5b60066000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006135a79190613911565b6002820160006135b79190613911565b6003820160006101000a81549065ffffffffffff02191690556003820160066101000a81549065ffffffffffff021916905560038201600c6101000a81549065ffffffffffff0219169055505080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156136a65750808214155b92505050919050565b6000816040516020016136c29190614b34565b60405160208183030381529060405280519060200120836040516020016136e99190614b34565b6040516020818303038152906040528051906020012014905092915050565b600061374a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613752565b905092915050565b600083831115829061379a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016137919190614c9b565b60405180910390fd5b5060008385039050809150509392505050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600065ffffffffffff168152602001600065ffffffffffff168152602001600065ffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061385257805160ff1916838001178555613880565b82800160010185558215613880579182015b8281111561387f578251825591602001919060010190613864565b5b50905061388d9190613959565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106138d257805160ff1916838001178555613900565b82800160010185558215613900579182015b828111156138ff5782518255916020019190600101906138e4565b5b50905061390d9190613959565b5090565b50805460018160011615610100020316600290046000825580601f106139375750613956565b601f0160209004906000526020600020908101906139559190613959565b5b50565b61397b91905b8082111561397757600081600090555060010161395f565b5090565b90565b60008135905061398d8161522b565b92915050565b6000813590506139a281615242565b92915050565b6000815190506139b781615242565b92915050565b6000813590506139cc81615259565b92915050565b6000815190506139e181615259565b92915050565b600082601f8301126139f857600080fd5b8135613a0b613a0682615005565b614fd8565b91508082526020830160208301858383011115613a2757600080fd5b613a328382846151d8565b50505092915050565b60008083601f840112613a4d57600080fd5b8235905067ffffffffffffffff811115613a6657600080fd5b602083019150836001820283011115613a7e57600080fd5b9250929050565b600082601f830112613a9657600080fd5b8135613aa9613aa482615031565b614fd8565b91508082526020830160208301858383011115613ac557600080fd5b613ad08382846151d8565b50505092915050565b600081359050613ae881615270565b92915050565b600081359050613afd81615287565b92915050565b600060208284031215613b1557600080fd5b6000613b238482850161397e565b91505092915050565b60008060408385031215613b3f57600080fd5b6000613b4d8582860161397e565b9250506020613b5e8582860161397e565b9150509250929050565b600080600060608486031215613b7d57600080fd5b6000613b8b8682870161397e565b9350506020613b9c8682870161397e565b9250506040613bad86828701613ad9565b9150509250925092565b60008060008060808587031215613bcd57600080fd5b6000613bdb8782880161397e565b9450506020613bec8782880161397e565b9350506040613bfd87828801613ad9565b925050606085013567ffffffffffffffff811115613c1a57600080fd5b613c26878288016139e7565b91505092959194509250565b60008060408385031215613c4557600080fd5b6000613c538582860161397e565b9250506020613c6485828601613993565b9150509250929050565b600080600060408486031215613c8357600080fd5b6000613c918682870161397e565b935050602084013567ffffffffffffffff811115613cae57600080fd5b613cba86828701613a3b565b92509250509250925092565b60008060408385031215613cd957600080fd5b6000613ce78582860161397e565b9250506020613cf885828601613ad9565b9150509250929050565b600060208284031215613d1457600080fd5b6000613d22848285016139a8565b91505092915050565b600060208284031215613d3d57600080fd5b6000613d4b848285016139bd565b91505092915050565b600060208284031215613d6657600080fd5b6000613d74848285016139d2565b91505092915050565b600080600080600060a08688031215613d9557600080fd5b600086013567ffffffffffffffff811115613daf57600080fd5b613dbb88828901613a85565b955050602086013567ffffffffffffffff811115613dd857600080fd5b613de488828901613a85565b9450506040613df588828901613aee565b9350506060613e0688828901613aee565b9250506080613e1788828901613aee565b9150509295509295909350565b60008060008060008060c08789031215613e3d57600080fd5b600087013567ffffffffffffffff811115613e5757600080fd5b613e6389828a01613a85565b965050602087013567ffffffffffffffff811115613e8057600080fd5b613e8c89828a01613a85565b9550506040613e9d89828a01613aee565b9450506060613eae89828a01613aee565b9350506080613ebf89828a01613aee565b92505060a087013567ffffffffffffffff811115613edc57600080fd5b613ee889828a016139e7565b9150509295509295509295565b60008060008060008060c08789031215613f0e57600080fd5b600087013567ffffffffffffffff811115613f2857600080fd5b613f3489828a01613a85565b965050602087013567ffffffffffffffff811115613f5157600080fd5b613f5d89828a01613a85565b9550506040613f6e89828a01613aee565b9450506060613f7f89828a01613aee565b9350506080613f9089828a01613aee565b92505060a087013567ffffffffffffffff811115613fad57600080fd5b613fb989828a01613a85565b9150509295509295509295565b600060208284031215613fd857600080fd5b6000613fe684828501613ad9565b91505092915050565b6000613ffb83836141e3565b905092915050565b600061400f8383614aee565b60208301905092915050565b6140248161512e565b82525050565b60006140358261507d565b61403f81856150ce565b9350836020820285016140518561505d565b8060005b8581101561408d578484038952815161406e8582613fef565b9450614079836150b4565b925060208a01995050600181019050614055565b50829750879550505050505092915050565b60006140aa82615088565b6140b481856150df565b93506140bf8361506d565b8060005b838110156140f05781516140d78882614003565b97506140e2836150c1565b9250506001810190506140c3565b5085935050505092915050565b61410681615140565b82525050565b600061411782615093565b61412181856150f0565b93506141318185602086016151e7565b61413a8161521a565b840191505092915050565b61414e816151b4565b82525050565b60006141608385615123565b935061416d8385846151d8565b82840190509392505050565b6000614184826150a9565b61418e8185615112565b935061419e8185602086016151e7565b6141a78161521a565b840191505092915050565b60006141bd826150a9565b6141c78185615123565b93506141d78185602086016151e7565b80840191505092915050565b60006141ee8261509e565b6141f88185615101565b93506142088185602086016151e7565b6142118161521a565b840191505092915050565b6000614229603283615112565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b600061428f603583615112565b91507f4552433732313a2063616c6c6572206973206e6f742077686974656c6973746560008301527f6420666f7220746865204d696e74657220726f6c6500000000000000000000006020830152604082019050919050565b60006142f5602a83615112565b91507f4552433732313a2073746172742074696d65206d757374206265206265666f7260008301527f6520656e642074696d65000000000000000000000000000000000000000000006020830152604082019050919050565b600061435b602483615112565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006143c1601983615112565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000614401602c83615112565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000614467603483615112565b91507f4552433732313a207472616e73666572207265737472696374656420746f207760008301527f686974656c6973746564206164647265737365730000000000000000000000006020830152604082019050919050565b60006144cd603083615112565b91507f4552433732313a2054696d6520736c6f7420717565727920666f72206e6f6e6560008301527f78697374656e7420746f6b656e206964000000000000000000000000000000006020830152604082019050919050565b6000614533601983615112565b91507f4552433732313a20696e76616c69642074696d6520736c6f74000000000000006000830152602082019050919050565b6000614573602e83615112565b91507f4552433732313a20636f6e74656e74206964206973206e6f742072656769737460008301527f6572656420746f2063616c6c65720000000000000000000000000000000000006020830152604082019050919050565b60006145d9602a83615112565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b600061463f603e83615112565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008301527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006020830152604082019050919050565b60006146a5602083615112565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b60006146e5602f83615112565b91507f4552433732313a20746f6b656e206f776e657220717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b600061474b602c83615112565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006147b1602983615112565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000614817601d83615112565b91507f4552433732313a20617070726f76616c20697320726564756e64616e740000006000830152602082019050919050565b6000614857603183615112565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b60006148bd602583615112565b91507f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f60008301527f74206f776e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614923602483615112565b91507f4552433732313a2055524920736574206f66206e6f6e6578697374656e74207460008301527f6f6b656e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614989601b83615112565b91507f4552433732313a2063616c6c6572206973206e6f74206f776e657200000000006000830152602082019050919050565b60006149c9602e83615112565b91507f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008301527f72206e6f7220617070726f7665640000000000000000000000000000000000006020830152604082019050919050565b6000614a2f602783615112565b91507f4552433732313a2055524920717565727920666f72206e6f6e6578697374656e60008301527f7420746f6b656e000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614a95602183615112565b91507f4552433732313a2063616c6c6572206973206e6f742077686974656c6973746560008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b614af781615198565b82525050565b614b0681615198565b82525050565b614b15816151a2565b82525050565b6000614b28828486614154565b91508190509392505050565b6000614b4082846141b2565b915081905092915050565b6000602082019050614b60600083018461401b565b92915050565b6000608082019050614b7b600083018761401b565b614b88602083018661401b565b614b956040830185614afd565b8181036060830152614ba7818461410c565b905095945050505050565b600060c082019050614bc7600083018961401b565b8181036020830152614bd98188614179565b90508181036040830152614bed8187614179565b9050614bfc6060830186614b0c565b614c096080830185614b0c565b614c1660a0830184614b0c565b979650505050505050565b60006020820190508181036000830152614c3b818461402a565b905092915050565b60006020820190508181036000830152614c5d818461409f565b905092915050565b6000602082019050614c7a60008301846140fd565b92915050565b6000602082019050614c956000830184614145565b92915050565b60006020820190508181036000830152614cb58184614179565b905092915050565b60006020820190508181036000830152614cd68161421c565b9050919050565b60006020820190508181036000830152614cf681614282565b9050919050565b60006020820190508181036000830152614d16816142e8565b9050919050565b60006020820190508181036000830152614d368161434e565b9050919050565b60006020820190508181036000830152614d56816143b4565b9050919050565b60006020820190508181036000830152614d76816143f4565b9050919050565b60006020820190508181036000830152614d968161445a565b9050919050565b60006020820190508181036000830152614db6816144c0565b9050919050565b60006020820190508181036000830152614dd681614526565b9050919050565b60006020820190508181036000830152614df681614566565b9050919050565b60006020820190508181036000830152614e16816145cc565b9050919050565b60006020820190508181036000830152614e3681614632565b9050919050565b60006020820190508181036000830152614e5681614698565b9050919050565b60006020820190508181036000830152614e76816146d8565b9050919050565b60006020820190508181036000830152614e968161473e565b9050919050565b60006020820190508181036000830152614eb6816147a4565b9050919050565b60006020820190508181036000830152614ed68161480a565b9050919050565b60006020820190508181036000830152614ef68161484a565b9050919050565b60006020820190508181036000830152614f16816148b0565b9050919050565b60006020820190508181036000830152614f3681614916565b9050919050565b60006020820190508181036000830152614f568161497c565b9050919050565b60006020820190508181036000830152614f76816149bc565b9050919050565b60006020820190508181036000830152614f9681614a22565b9050919050565b60006020820190508181036000830152614fb681614a88565b9050919050565b6000602082019050614fd26000830184614afd565b92915050565b6000604051905081810181811067ffffffffffffffff82111715614ffb57600080fd5b8060405250919050565b600067ffffffffffffffff82111561501c57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561504857600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061513982615178565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600065ffffffffffff82169050919050565b60006151bf826151c6565b9050919050565b60006151d182615178565b9050919050565b82818337600083830152505050565b60005b838110156152055780820151818401526020810190506151ea565b83811115615214576000848401525b50505050565b6000601f19601f8301169050919050565b6152348161512e565b811461523f57600080fd5b50565b61524b81615140565b811461525657600080fd5b50565b6152628161514c565b811461526d57600080fd5b50565b61527981615198565b811461528457600080fd5b50565b615290816151a2565b811461529b57600080fd5b5056fea365627a7a72315820b6228b5e0973afd90735907424dc98ffc68ea3da73989ecfb05e25a263053ee06c6578706572696d656e74616cf564736f6c634300050b0040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637b1039991161011a578063b88d4fde116100ad578063c9ef79ad1161007c578063c9ef79ad146105fc578063dc6fd7101461062c578063e5c249241461065c578063e985e9c514610691578063f2fde38b146106c1576101fb565b8063b88d4fde14610564578063c57a882514610580578063c87b56dd1461059c578063c88e5dc5146105cc576101fb565b806395d89b41116100e957806395d89b41146104ca578063a22cb465146104e8578063a4ede12814610504578063aa271e1a14610534576101fb565b80637b103999146104545780638456cb59146104725780638462151c1461047c5780638da5cb5b146104ac576101fb565b80633af32abf116101925780635c975abb116101615780635c975abb146103a65780636352211e146103c457806370a08231146103f45780637affcb9a14610424576101fb565b80633af32abf146103345780633f4ba83a1461036457806342842e0e1461036e57806342966c681461038a576101fb565b806318160ddd116101ce57806318160ddd1461029a5780631b2daa70146102b857806323b872dd146102e857806323c5bd8614610304576101fb565b806301ffc9a71461020057806306fdde0314610230578063081812fc1461024e578063095ea7b31461027e575b600080fd5b61021a60048036036102159190810190613d2b565b6106dd565b6040516102279190614c65565b60405180910390f35b610238610744565b6040516102459190614c9b565b60405180910390f35b61026860048036036102639190810190613fc6565b6107e6565b6040516102759190614b4b565b60405180910390f35b61029860048036036102939190810190613cc6565b61086b565b005b6102a2610a8f565b6040516102af9190614fbd565b60405180910390f35b6102d260048036036102cd9190810190613e24565b610aa0565b6040516102df9190614fbd565b60405180910390f35b61030260048036036102fd9190810190613b68565b610b86565b005b61031e60048036036103199190810190613ef5565b610c90565b60405161032b9190614fbd565b60405180910390f35b61034e60048036036103499190810190613b03565b610d7f565b60405161035b9190614c65565b60405180910390f35b61036c610e33565b005b61038860048036036103839190810190613b68565b610f00565b005b6103a4600480360361039f9190810190613fc6565b610f20565b005b6103ae610f96565b6040516103bb9190614c65565b60405180910390f35b6103de60048036036103d99190810190613fc6565b610fa9565b6040516103eb9190614b4b565b60405180910390f35b61040e60048036036104099190810190613b03565b61105b565b60405161041b9190614fbd565b60405180910390f35b61043e60048036036104399190810190613c6e565b61111a565b60405161044b9190614c21565b60405180910390f35b61045c611302565b6040516104699190614c80565b60405180910390f35b61047a611328565b005b61049660048036036104919190810190613b03565b6113f6565b6040516104a39190614c43565b60405180910390f35b6104b461153e565b6040516104c19190614b4b565b60405180910390f35b6104d2611564565b6040516104df9190614c9b565b60405180910390f35b61050260048036036104fd9190810190613c32565b611606565b005b61051e60048036036105199190810190613b03565b6117f0565b60405161052b9190614c21565b60405180910390f35b61054e60048036036105499190810190613b03565b6119b8565b60405161055b9190614c65565b60405180910390f35b61057e60048036036105799190810190613bb7565b6119ca565b005b61059a60048036036105959190810190613b03565b611ad6565b005b6105b660048036036105b19190810190613fc6565b611bb1565b6040516105c39190614c9b565b60405180910390f35b6105e660048036036105e19190810190613ef5565b611cae565b6040516105f39190614fbd565b60405180910390f35b61061660048036036106119190810190613d7d565b611d9d565b6040516106239190614fbd565b60405180910390f35b61064660048036036106419190810190613d7d565b611e81565b6040516106539190614fbd565b60405180910390f35b61067660048036036106719190810190613fc6565b611f65565b60405161068896959493929190614bb2565b60405180910390f35b6106ab60048036036106a69190810190613b2c565b6121e2565b6040516106b89190614c65565b60405180910390f35b6106db60048036036106d69190810190613b03565b612276565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600d8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107dc5780601f106107b1576101008083540402835291602001916107dc565b820191906000526020600020905b8154815290600101906020018083116107bf57829003601f168201915b5050505050905090565b60006107f182612386565b610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082790614e7d565b60405180910390fd5b600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61087b6108766123f8565b610d7f565b6108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190614f9d565b60405180910390fd5b600c60009054906101000a900460ff16156108d457600080fd5b60006108df82610fa9565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094790614ebd565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661096f6123f8565b73ffffffffffffffffffffffffffffffffffffffff16148061099e575061099d816109986123f8565b6121e2565b5b6109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d490614e1d565b60405180910390fd5b82600a600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610a9b6003612400565b905090565b6000610ab2610aad6123f8565b6119b8565b610af1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae890614cdd565b60405180910390fd5b600c60009054906101000a900460ff1615610b0b57600080fd5b610b1687868661240e565b610b55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4c90614dbd565b60405180910390fd5b6000610b68610b626123f8565b84612557565b9050610b788189898989896125bb565b809150509695505050505050565b600c60009054906101000a900460ff1615610ba057600080fd5b610bb1610bab6123f8565b82612902565b610bf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be790614edd565b60405180910390fd5b610bf983610d7f565b610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f90614d7d565b60405180910390fd5b610c4182610d7f565b610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7790614d7d565b60405180910390fd5b610c8b8383836129e0565b505050565b6000610ca2610c9d6123f8565b6119b8565b610ce1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd890614cdd565b60405180910390fd5b600c60009054906101000a900460ff1615610cfb57600080fd5b610d0687868661240e565b610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c90614dbd565b60405180910390fd5b6000610d57610d526123f8565b612c0f565b9050610d678189898989896125bb565b610d718184612d96565b809150509695505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633af32abf836040518263ffffffff1660e01b8152600401610ddc9190614b4b565b60206040518083038186803b158015610df457600080fd5b505afa158015610e08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e2c9190810190613d02565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e746123f8565b73ffffffffffffffffffffffffffffffffffffffff1614610eca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec190614f3d565b60405180910390fd5b600c60009054906101000a900460ff16610ee357600080fd5b6000600c60006101000a81548160ff021916908315150217905550565b610f1b838383604051806020016040528060008152506119ca565b505050565b600c60009054906101000a900460ff1615610f3a57600080fd5b610f4b610f456123f8565b82612902565b610f8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8190614f5d565b60405180910390fd5b610f9381612e0a565b50565b600c60009054906101000a900460ff1681565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104990614e5d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c390614dfd565b60405180910390fd5b611113600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612400565b9050919050565b606080600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848460405161116c929190614b1b565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561126a57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112525780601f1061122757610100808354040283529160200191611252565b820191906000526020600020905b81548152906001019060200180831161123557829003601f168201915b5050505050815250508152602001906001019061119a565b505050509050606081516040519080825280602002602001820160405280156112a757816020015b60608152602001906001900390816112925790505b50905060008090505b82518110156112f5578281815181106112c557fe5b6020026020010151600001518282815181106112dd57fe5b602002602001018190525080806001019150506112b0565b5080925050509392505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113696123f8565b73ffffffffffffffffffffffffffffffffffffffff16146113bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b690614f3d565b60405180910390fd5b600c60009054906101000a900460ff16156113d957600080fd5b6001600c60006101000a81548160ff021916908315150217905550565b606060006114038361105b565b9050600081141561144757600060405190808252806020026020018201604052801561143e5781602001602082028038833980820191505090505b50915050611539565b6060816040519080825280602002602001820160405280156114785781602001602082028038833980820191505090505b5090506000611485610a8f565b905060008090506000600190505b828111611530578673ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611523578084838151811061150e57fe5b60200260200101818152505081806001019250505b8080600101915050611493565b83955050505050505b919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600e8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115fc5780601f106115d1576101008083540402835291602001916115fc565b820191906000526020600020905b8154815290600101906020018083116115df57829003601f168201915b5050505050905090565b6116166116116123f8565b610d7f565b611655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164c90614f9d565b60405180910390fd5b600c60009054906101000a900460ff161561166f57600080fd5b6116776123f8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116dc90614d3d565b60405180910390fd5b80600b60006116f26123f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661179f6123f8565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516117e49190614c65565b60405180910390a35050565b606080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561192257838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561190a5780601f106118df5761010080835404028352916020019161190a565b820191906000526020600020905b8154815290600101906020018083116118ed57829003601f168201915b50505050508152505081526020019060010190611852565b5050505090506060815160405190808252806020026020018201604052801561195f57816020015b606081526020019060019003908161194a5790505b50905060008090505b82518110156119ad5782818151811061197d57fe5b60200260200101516000015182828151811061199557fe5b60200260200101819052508080600101915050611968565b508092505050919050565b60006119c382610d7f565b9050919050565b600c60009054906101000a900460ff16156119e457600080fd5b6119ed84610d7f565b611a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2390614d7d565b60405180910390fd5b611a3583610d7f565b611a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6b90614d7d565b60405180910390fd5b611a85611a7f6123f8565b83612902565b611ac4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611abb90614edd565b60405180910390fd5b611ad084848484612e1f565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b176123f8565b73ffffffffffffffffffffffffffffffffffffffff1614611b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6490614f3d565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060611bbc82612386565b611bfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bf290614f7d565b60405180910390fd5b600960008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ca25780601f10611c7757610100808354040283529160200191611ca2565b820191906000526020600020905b815481529060010190602001808311611c8557829003601f168201915b50505050509050919050565b6000611cc0611cbb6123f8565b6119b8565b611cff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cf690614cdd565b60405180910390fd5b600c60009054906101000a900460ff1615611d1957600080fd5b611d2487868661240e565b611d63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5a90614dbd565b60405180910390fd5b6000611d75611d706123f8565b612e7b565b9050611d858189898989896125bb565b611d8f8184612d96565b809150509695505050505050565b6000611daf611daa6123f8565b6119b8565b611dee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de590614cdd565b60405180910390fd5b600c60009054906101000a900460ff1615611e0857600080fd5b611e1386858561240e565b611e52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4990614dbd565b60405180910390fd5b6000611e64611e5f6123f8565b612e7b565b9050611e748188888888886125bb565b8091505095945050505050565b6000611e93611e8e6123f8565b6119b8565b611ed2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ec990614cdd565b60405180910390fd5b600c60009054906101000a900460ff1615611eec57600080fd5b611ef786858561240e565b611f36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2d90614dbd565b60405180910390fd5b6000611f48611f436123f8565b612c0f565b9050611f588188888888886125bb565b8091505095945050505050565b60006060806000806000611f7887612386565b611fb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fae90614d9d565b60405180910390fd5b6006600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660066000898152602001908152602001600020600101600660008a8152602001908152602001600020600201600660008b815260200190815260200160002060030160009054906101000a900465ffffffffffff16600660008c815260200190815260200160002060030160069054906101000a900465ffffffffffff16600660008d8152602001908152602001600020600301600c9054906101000a900465ffffffffffff16848054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561212a5780601f106120ff5761010080835404028352916020019161212a565b820191906000526020600020905b81548152906001019060200180831161210d57829003601f168201915b50505050509450838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121c65780601f1061219b576101008083540402835291602001916121c6565b820191906000526020600020905b8154815290600101906020018083116121a957829003601f168201915b5050505050935095509550955095509550955091939550919395565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166122b76123f8565b73ffffffffffffffffffffffffffffffffffffffff161461230d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161230490614f3d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146123835780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b600081600001549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166347ba747a856040518263ffffffff1660e01b815260040161246b9190614c9b565b60206040518083038186803b15801561248357600080fd5b505afa158015612497573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124bb9190810190613d02565b6124fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124f190614ddd565b60405180910390fd5b8265ffffffffffff168265ffffffffffff161161254c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161254390614cfd565b60405180910390fd5b600190509392505050565b60008061256384612c0f565b90506125726000858386612ea2565b6125b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125a890614cbd565b60405180910390fd5b8091505092915050565b6125c486612386565b612603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125fa90614f1d565b60405180910390fd5b61260b6137ad565b6040518060c0016040528061261e6123f8565b73ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018565ffffffffffff1681526020018465ffffffffffff1681526020018365ffffffffffff168152509050806006600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906126e6929190613811565b506040820151816002019080519060200190612703929190613811565b5060608201518160030160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060808201518160030160066101000a81548165ffffffffffff021916908365ffffffffffff16021790555060a082015181600301600c6101000a81548165ffffffffffff021916908365ffffffffffff16021790555090505061279186612fc0565b61283257600860006127a16123f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806020016040528088815250908060018154018082558091505090600182039060005260206000200160009091929091909150600082015181600001908051906020019061282d929190613811565b505050505b61283c8686613150565b6128f9576007600061284c6123f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020866040516128949190614b34565b908152602001604051809103902060405180602001604052808781525090806001815401808255809150509060018203906000526020600020016000909192909190915060008201518160000190805190602001906128f4929190613811565b505050505b50505050505050565b600061290d82612386565b61294c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161294390614d5d565b60405180910390fd5b600061295783610fa9565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806129c657508373ffffffffffffffffffffffffffffffffffffffff166129ae846107e6565b73ffffffffffffffffffffffffffffffffffffffff16145b806129d757506129d681856121e2565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16612a0082610fa9565b73ffffffffffffffffffffffffffffffffffffffff1614612a56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a4d90614e9d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612abd90614d1d565b60405180910390fd5b612acf816132fd565b612b16600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206133bb565b612b5d600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206133de565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c7790614e3d565b60405180910390fd5b612c8a60036133de565b6000612c966003612400565b9050826004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d31600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206133de565b808373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480915050919050565b612d9f82612386565b612dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dd590614f1d565b60405180910390fd5b80600960008481526020019081526020016000209080519060200190612e05929190613891565b505050565b612e1c612e1682610fa9565b826133f4565b50565b612e2a8484846129e0565b612e3684848484612ea2565b612e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e6c90614cbd565b60405180910390fd5b50505050565b600080612e978360405180602001604052806000815250612557565b905080915050919050565b6000612ec38473ffffffffffffffffffffffffffffffffffffffff16613664565b612ed05760019050612fb8565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02612ef66123f8565b8887876040518563ffffffff1660e01b8152600401612f189493929190614b66565b602060405180830381600087803b158015612f3257600080fd5b505af1158015612f46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612f6a9190810190613d54565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60006060600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156130f357838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130db5780601f106130b0576101008083540402835291602001916130db565b820191906000526020600020905b8154815290600101906020018083116130be57829003601f168201915b50505050508152505081526020019060010190613023565b505050509050600080905060008090505b82518110156131455761312e8584838151811061311d57fe5b6020026020010151600001516136af565b1561313857600191505b8080600101915050613104565b508092505050919050565b60006060600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020846040516131a19190614b34565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561329f57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156132875780601f1061325c57610100808354040283529160200191613287565b820191906000526020600020905b81548152906001019060200180831161326a57829003601f168201915b505050505081525050815260200190600101906131cf565b505050509050600080905060008090505b82518110156132f1576132da858483815181106132c957fe5b6020026020010151600001516136af565b156132e457600191505b80806001019150506132b0565b50809250505092915050565b600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146133b8576000600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6133d36001826000015461370890919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b8173ffffffffffffffffffffffffffffffffffffffff1661341482610fa9565b73ffffffffffffffffffffffffffffffffffffffff161461346a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161346190614efd565b60405180910390fd5b613473816132fd565b6134ba600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206133bb565b60006004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600960008381526020019081526020016000208054600181600116156101000203166002900490501461355c5760096000828152602001908152602001600020600061355b9190613911565b5b60066000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006135a79190613911565b6002820160006135b79190613911565b6003820160006101000a81549065ffffffffffff02191690556003820160066101000a81549065ffffffffffff021916905560038201600c6101000a81549065ffffffffffff0219169055505080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156136a65750808214155b92505050919050565b6000816040516020016136c29190614b34565b60405160208183030381529060405280519060200120836040516020016136e99190614b34565b6040516020818303038152906040528051906020012014905092915050565b600061374a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613752565b905092915050565b600083831115829061379a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016137919190614c9b565b60405180910390fd5b5060008385039050809150509392505050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600065ffffffffffff168152602001600065ffffffffffff168152602001600065ffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061385257805160ff1916838001178555613880565b82800160010185558215613880579182015b8281111561387f578251825591602001919060010190613864565b5b50905061388d9190613959565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106138d257805160ff1916838001178555613900565b82800160010185558215613900579182015b828111156138ff5782518255916020019190600101906138e4565b5b50905061390d9190613959565b5090565b50805460018160011615610100020316600290046000825580601f106139375750613956565b601f0160209004906000526020600020908101906139559190613959565b5b50565b61397b91905b8082111561397757600081600090555060010161395f565b5090565b90565b60008135905061398d8161522b565b92915050565b6000813590506139a281615242565b92915050565b6000815190506139b781615242565b92915050565b6000813590506139cc81615259565b92915050565b6000815190506139e181615259565b92915050565b600082601f8301126139f857600080fd5b8135613a0b613a0682615005565b614fd8565b91508082526020830160208301858383011115613a2757600080fd5b613a328382846151d8565b50505092915050565b60008083601f840112613a4d57600080fd5b8235905067ffffffffffffffff811115613a6657600080fd5b602083019150836001820283011115613a7e57600080fd5b9250929050565b600082601f830112613a9657600080fd5b8135613aa9613aa482615031565b614fd8565b91508082526020830160208301858383011115613ac557600080fd5b613ad08382846151d8565b50505092915050565b600081359050613ae881615270565b92915050565b600081359050613afd81615287565b92915050565b600060208284031215613b1557600080fd5b6000613b238482850161397e565b91505092915050565b60008060408385031215613b3f57600080fd5b6000613b4d8582860161397e565b9250506020613b5e8582860161397e565b9150509250929050565b600080600060608486031215613b7d57600080fd5b6000613b8b8682870161397e565b9350506020613b9c8682870161397e565b9250506040613bad86828701613ad9565b9150509250925092565b60008060008060808587031215613bcd57600080fd5b6000613bdb8782880161397e565b9450506020613bec8782880161397e565b9350506040613bfd87828801613ad9565b925050606085013567ffffffffffffffff811115613c1a57600080fd5b613c26878288016139e7565b91505092959194509250565b60008060408385031215613c4557600080fd5b6000613c538582860161397e565b9250506020613c6485828601613993565b9150509250929050565b600080600060408486031215613c8357600080fd5b6000613c918682870161397e565b935050602084013567ffffffffffffffff811115613cae57600080fd5b613cba86828701613a3b565b92509250509250925092565b60008060408385031215613cd957600080fd5b6000613ce78582860161397e565b9250506020613cf885828601613ad9565b9150509250929050565b600060208284031215613d1457600080fd5b6000613d22848285016139a8565b91505092915050565b600060208284031215613d3d57600080fd5b6000613d4b848285016139bd565b91505092915050565b600060208284031215613d6657600080fd5b6000613d74848285016139d2565b91505092915050565b600080600080600060a08688031215613d9557600080fd5b600086013567ffffffffffffffff811115613daf57600080fd5b613dbb88828901613a85565b955050602086013567ffffffffffffffff811115613dd857600080fd5b613de488828901613a85565b9450506040613df588828901613aee565b9350506060613e0688828901613aee565b9250506080613e1788828901613aee565b9150509295509295909350565b60008060008060008060c08789031215613e3d57600080fd5b600087013567ffffffffffffffff811115613e5757600080fd5b613e6389828a01613a85565b965050602087013567ffffffffffffffff811115613e8057600080fd5b613e8c89828a01613a85565b9550506040613e9d89828a01613aee565b9450506060613eae89828a01613aee565b9350506080613ebf89828a01613aee565b92505060a087013567ffffffffffffffff811115613edc57600080fd5b613ee889828a016139e7565b9150509295509295509295565b60008060008060008060c08789031215613f0e57600080fd5b600087013567ffffffffffffffff811115613f2857600080fd5b613f3489828a01613a85565b965050602087013567ffffffffffffffff811115613f5157600080fd5b613f5d89828a01613a85565b9550506040613f6e89828a01613aee565b9450506060613f7f89828a01613aee565b9350506080613f9089828a01613aee565b92505060a087013567ffffffffffffffff811115613fad57600080fd5b613fb989828a01613a85565b9150509295509295509295565b600060208284031215613fd857600080fd5b6000613fe684828501613ad9565b91505092915050565b6000613ffb83836141e3565b905092915050565b600061400f8383614aee565b60208301905092915050565b6140248161512e565b82525050565b60006140358261507d565b61403f81856150ce565b9350836020820285016140518561505d565b8060005b8581101561408d578484038952815161406e8582613fef565b9450614079836150b4565b925060208a01995050600181019050614055565b50829750879550505050505092915050565b60006140aa82615088565b6140b481856150df565b93506140bf8361506d565b8060005b838110156140f05781516140d78882614003565b97506140e2836150c1565b9250506001810190506140c3565b5085935050505092915050565b61410681615140565b82525050565b600061411782615093565b61412181856150f0565b93506141318185602086016151e7565b61413a8161521a565b840191505092915050565b61414e816151b4565b82525050565b60006141608385615123565b935061416d8385846151d8565b82840190509392505050565b6000614184826150a9565b61418e8185615112565b935061419e8185602086016151e7565b6141a78161521a565b840191505092915050565b60006141bd826150a9565b6141c78185615123565b93506141d78185602086016151e7565b80840191505092915050565b60006141ee8261509e565b6141f88185615101565b93506142088185602086016151e7565b6142118161521a565b840191505092915050565b6000614229603283615112565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b600061428f603583615112565b91507f4552433732313a2063616c6c6572206973206e6f742077686974656c6973746560008301527f6420666f7220746865204d696e74657220726f6c6500000000000000000000006020830152604082019050919050565b60006142f5602a83615112565b91507f4552433732313a2073746172742074696d65206d757374206265206265666f7260008301527f6520656e642074696d65000000000000000000000000000000000000000000006020830152604082019050919050565b600061435b602483615112565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006143c1601983615112565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000614401602c83615112565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000614467603483615112565b91507f4552433732313a207472616e73666572207265737472696374656420746f207760008301527f686974656c6973746564206164647265737365730000000000000000000000006020830152604082019050919050565b60006144cd603083615112565b91507f4552433732313a2054696d6520736c6f7420717565727920666f72206e6f6e6560008301527f78697374656e7420746f6b656e206964000000000000000000000000000000006020830152604082019050919050565b6000614533601983615112565b91507f4552433732313a20696e76616c69642074696d6520736c6f74000000000000006000830152602082019050919050565b6000614573602e83615112565b91507f4552433732313a20636f6e74656e74206964206973206e6f742072656769737460008301527f6572656420746f2063616c6c65720000000000000000000000000000000000006020830152604082019050919050565b60006145d9602a83615112565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b600061463f603e83615112565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008301527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006020830152604082019050919050565b60006146a5602083615112565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b60006146e5602f83615112565b91507f4552433732313a20746f6b656e206f776e657220717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b600061474b602c83615112565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006147b1602983615112565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000614817601d83615112565b91507f4552433732313a20617070726f76616c20697320726564756e64616e740000006000830152602082019050919050565b6000614857603183615112565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b60006148bd602583615112565b91507f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f60008301527f74206f776e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614923602483615112565b91507f4552433732313a2055524920736574206f66206e6f6e6578697374656e74207460008301527f6f6b656e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614989601b83615112565b91507f4552433732313a2063616c6c6572206973206e6f74206f776e657200000000006000830152602082019050919050565b60006149c9602e83615112565b91507f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008301527f72206e6f7220617070726f7665640000000000000000000000000000000000006020830152604082019050919050565b6000614a2f602783615112565b91507f4552433732313a2055524920717565727920666f72206e6f6e6578697374656e60008301527f7420746f6b656e000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614a95602183615112565b91507f4552433732313a2063616c6c6572206973206e6f742077686974656c6973746560008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b614af781615198565b82525050565b614b0681615198565b82525050565b614b15816151a2565b82525050565b6000614b28828486614154565b91508190509392505050565b6000614b4082846141b2565b915081905092915050565b6000602082019050614b60600083018461401b565b92915050565b6000608082019050614b7b600083018761401b565b614b88602083018661401b565b614b956040830185614afd565b8181036060830152614ba7818461410c565b905095945050505050565b600060c082019050614bc7600083018961401b565b8181036020830152614bd98188614179565b90508181036040830152614bed8187614179565b9050614bfc6060830186614b0c565b614c096080830185614b0c565b614c1660a0830184614b0c565b979650505050505050565b60006020820190508181036000830152614c3b818461402a565b905092915050565b60006020820190508181036000830152614c5d818461409f565b905092915050565b6000602082019050614c7a60008301846140fd565b92915050565b6000602082019050614c956000830184614145565b92915050565b60006020820190508181036000830152614cb58184614179565b905092915050565b60006020820190508181036000830152614cd68161421c565b9050919050565b60006020820190508181036000830152614cf681614282565b9050919050565b60006020820190508181036000830152614d16816142e8565b9050919050565b60006020820190508181036000830152614d368161434e565b9050919050565b60006020820190508181036000830152614d56816143b4565b9050919050565b60006020820190508181036000830152614d76816143f4565b9050919050565b60006020820190508181036000830152614d968161445a565b9050919050565b60006020820190508181036000830152614db6816144c0565b9050919050565b60006020820190508181036000830152614dd681614526565b9050919050565b60006020820190508181036000830152614df681614566565b9050919050565b60006020820190508181036000830152614e16816145cc565b9050919050565b60006020820190508181036000830152614e3681614632565b9050919050565b60006020820190508181036000830152614e5681614698565b9050919050565b60006020820190508181036000830152614e76816146d8565b9050919050565b60006020820190508181036000830152614e968161473e565b9050919050565b60006020820190508181036000830152614eb6816147a4565b9050919050565b60006020820190508181036000830152614ed68161480a565b9050919050565b60006020820190508181036000830152614ef68161484a565b9050919050565b60006020820190508181036000830152614f16816148b0565b9050919050565b60006020820190508181036000830152614f3681614916565b9050919050565b60006020820190508181036000830152614f568161497c565b9050919050565b60006020820190508181036000830152614f76816149bc565b9050919050565b60006020820190508181036000830152614f9681614a22565b9050919050565b60006020820190508181036000830152614fb681614a88565b9050919050565b6000602082019050614fd26000830184614afd565b92915050565b6000604051905081810181811067ffffffffffffffff82111715614ffb57600080fd5b8060405250919050565b600067ffffffffffffffff82111561501c57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561504857600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061513982615178565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600065ffffffffffff82169050919050565b60006151bf826151c6565b9050919050565b60006151d182615178565b9050919050565b82818337600083830152505050565b60005b838110156152055780820151818401526020810190506151ea565b83811115615214576000848401525b50505050565b6000601f19601f8301169050919050565b6152348161512e565b811461523f57600080fd5b50565b61524b81615140565b811461525657600080fd5b50565b6152628161514c565b811461526d57600080fd5b50565b61527981615198565b811461528457600080fd5b50565b615290816151a2565b811461529b57600080fd5b5056fea365627a7a72315820b6228b5e0973afd90735907424dc98ffc68ea3da73989ecfb05e25a263053ee06c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "285:1239:9:-;;;3589:5:3;3568:26;;;;;;;;;;;;;;;;;;;;801:336:9;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:336:9;;;;;;;;;;;;;;;;;;;;;;;;720:40:2;387:10;739:20;;720:18;;;:40;;:::i;:::-;4644::3;4516:10;4663:20;;4644:18;;;:40;;:::i;:::-;4737:12;:10;;;:12;;:::i;:::-;4729:5;;:20;;;;;;;;;;;;;;;;;;907:4:9;899:5;:12;;;;;;;;;;;;:::i;:::-;;931:6;921:7;:16;;;;;;;;;;;;:::i;:::-;;1025:49;735:10;1044:29;;1025:18;;;:49;;:::i;:::-;1085:44;1113:15;1085:27;;;;;:44;;:::i;:::-;801:336;;;285:1239;;1444:190:2;1534:10;1519:25;;:11;:25;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1623:4;1587:20;:33;1608:11;1587:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1444:190;:::o;5221:90:3:-;5266:7;5293:10;5286:17;;5221:90;:::o;6256:144::-;5863:5;;;;;;;;;;;5847:21;;:12;:10;;;:12;;:::i;:::-;:21;;;5826:95;;;;;;;;;;;;;;;;;;;;;;6382:10;6354:8;;:39;;;;;;;;;;;;;;;;;;6256:144;:::o;285:1239:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;840:1;829:9;825:17;819:24;863:18;855:6;852:30;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;1071:18;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1493:74;;1600:66;1596:1;1591:3;1587:11;1580:87;1695:2;1690:3;1686:12;1679:19;;1486:218;;;;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1866:74;;1973:66;1969:1;1964:3;1960:11;1953:87;2068:2;2063:3;2059:12;2052:19;;1859:218;;;;2085:407;;2276:2;2265:9;2261:18;2253:26;;2326:9;2320:4;2316:20;2312:1;2301:9;2297:17;2290:47;2351:131;2477:4;2351:131;;;2343:139;;2247:245;;;;2499:407;;2690:2;2679:9;2675:18;2667:26;;2740:9;2734:4;2730:20;2726:1;2715:9;2711:17;2704:47;2765:131;2891:4;2765:131;;;2757:139;;2661:245;;;;2913:256;;2975:2;2969:9;2959:19;;3013:4;3005:6;3001:17;3112:6;3100:10;3097:22;3076:18;3064:10;3061:34;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3153:10;3149:2;3142:22;2953:216;;;;;3176:322;;3320:18;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;3419:4;3415:9;3408:4;3400:6;3396:17;3392:33;3384:41;;3483:4;3477;3473:15;3465:23;;3243:255;;;;3506:163;;3621:6;3616:3;3609:19;3658:4;3653:3;3649:14;3634:29;;3602:67;;;;;3677:91;;3739:24;3757:5;3739:24;;;3728:35;;3722:46;;;;3775:121;;3848:42;3841:5;3837:54;3826:65;;3820:76;;;;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4066:1;4061:3;4057:11;4051:18;4047:1;4042:3;4038:11;4031:39;4012:2;4009:1;4005:10;4000:15;;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;285:1239:9;;;;;;;",
  "deployedSourceMap": "285:1239:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;285:1239:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1242:83:9;;;:::i;:::-;;;;;;;;;;;;;;;;22361:236:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;21526:550;;;;;;;;;;;;;;;;:::i;:::-;;18742:98;;;:::i;:::-;;;;;;;;;;;;;;;;9780:605;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;24160:561;;;;;;;;;;;;;;;;:::i;:::-;;8309:649;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6568:120;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;33581:128;;;:::i;:::-;;25370:134;;;;;;;;;;;;;;;;:::i;:::-;;31507:230;;;;;;;;;;;;;;;;:::i;:::-;;3568:26;;;:::i;:::-;;;;;;;;;;;;;;;;19526:280;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;19049:258;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18206:403;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1093:32;;;:::i;:::-;;;;;;;;;;;;;;;;33323:80;;;:::i;:::-;;20209:867;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1024:20;;;:::i;:::-;;;;;;;;;;;;;;;;1434:87:9;;;:::i;:::-;;;;;;;;;;;;;;;;22890:309:3;;;;;;;;;;;;;;;;:::i;:::-;;17791:330;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7043:108;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;26226:594;;;;;;;;;;;;;;;;:::i;:::-;;6256:144;;;;;;;;;;;;;;;;:::i;:::-;;14150:231;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10749:657;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9047:572;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7560:564;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;16849:722;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;23538:185;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5945:167;;;;;;;;;;;;;;;;:::i;:::-;;917:133:2;987:4;1010:20;:33;1031:11;1010:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1003:40;;917:133;;;:::o;1242:83:9:-;1281:13;1313:5;1306:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1242:83;:::o;22361:236:3:-;22420:7;22461:16;22469:7;22461;:16::i;:::-;22440:107;;;;;;;;;;;;;;;;;;;;;;22565:15;:24;22581:7;22565:24;;;;;;;;;;;;;;;;;;;;;22558:31;;22361:236;;;:::o;21526:550::-;6871:27;6885:12;:10;:12::i;:::-;6871:13;:27::i;:::-;6850:107;;;;;;;;;;;;;;;;;;;;;;33079:6;;;;;;;;;;;33078:7;33070:16;;;;;;21648:18;21669:16;21677:7;21669;:16::i;:::-;21648:37;;21723:10;21717:16;;:2;:16;;;;21696:92;;;;;;;;;;;;;;;;;;;;;;21836:10;21820:26;;:12;:10;:12::i;:::-;:26;;;:72;;;;21850:42;21867:10;21879:12;:10;:12::i;:::-;21850:16;:42::i;:::-;21820:72;21799:181;;;;;;;;;;;;;;;;;;;;;;22018:2;21991:15;:24;22007:7;21991:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;22060:7;22056:2;22035:33;;22044:10;22035:33;;;;;;;;;;;;33096:1;21526:550;;:::o;18742:98::-;18786:7;18813:19;:9;:17;:19::i;:::-;18806:26;;18742:98;:::o;9780:605::-;10054:7;7324:22;7333:12;:10;:12::i;:::-;7324:8;:22::i;:::-;7303:122;;;;;;;;;;;;;;;;;;;;;;33079:6;;;;;;;;;;;33078:7;33070:16;;;;;;10099:47;10116:9;10127;10138:7;10099:16;:47::i;:::-;10078:119;;;;;;;;;;;;;;;;;;;;;;10208:15;10226:29;10236:12;:10;:12::i;:::-;10250:4;10226:9;:29::i;:::-;10208:47;;10265:87;10283:7;10292:9;10303:12;10317:9;10328:7;10337:14;10265:17;:87::i;:::-;10370:7;10363:14;;;9780:605;;;;;;;;:::o;24160:561::-;33079:6;;;;;;;;;;;33078:7;33070:16;;;;;;24298:41;24317:12;:10;:12::i;:::-;24331:7;24298:18;:41::i;:::-;24277:137;;;;;;;;;;;;;;;;;;;;;;24446:19;24460:4;24446:13;:19::i;:::-;24425:118;;;;;;;;;;;;;;;;;;;;;;24575:17;24589:2;24575:13;:17::i;:::-;24554:116;;;;;;;;;;;;;;;;;;;;;;24681:32;24695:4;24701:2;24705:7;24681:13;:32::i;:::-;24160:561;;;:::o;8309:649::-;8596:7;7324:22;7333:12;:10;:12::i;:::-;7324:8;:22::i;:::-;7303:122;;;;;;;;;;;;;;;;;;;;;;33079:6;;;;;;;;;;;33078:7;33070:16;;;;;;8641:47;8658:9;8669;8680:7;8641:16;:47::i;:::-;8620:119;;;;;;;;;;;;;;;;;;;;;;8750:15;8768:19;8774:12;:10;:12::i;:::-;8768:5;:19::i;:::-;8750:37;;8797:87;8815:7;8824:9;8835:12;8849:9;8860:7;8869:14;8797:17;:87::i;:::-;8894:31;8907:7;8916:8;8894:12;:31::i;:::-;8943:7;8936:14;;;8309:649;;;;;;;;:::o;6568:120::-;6628:4;6651:8;;;;;;;;;;;:22;;;6674:6;6651:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6651:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6651:30:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6651:30:3;;;;;;;;;6644:37;;6568:120;;;:::o;33581:128::-;5863:5;;;;;;;;;;;5847:21;;:12;:10;:12::i;:::-;:21;;;5826:95;;;;;;;;;;;;;;;;;;;;;;33220:6;;;;;;;;;;;33212:15;;;;;;33697:5;33688:6;;:14;;;;;;;;;;;;;;;;;;33581:128::o;25370:134::-;25457:39;25474:4;25480:2;25484:7;25457:39;;;;;;;;;;;;:16;:39::i;:::-;25370:134;;;:::o;31507:230::-;33079:6;;;;;;;;;;;33078:7;33070:16;;;;;;31591:41;31610:12;:10;:12::i;:::-;31624:7;31591:18;:41::i;:::-;31570:134;;;;;;;;;;;;;;;;;;;;;;31715:14;31721:7;31715:5;:14::i;:::-;31507:230;:::o;3568:26::-;;;;;;;;;;;;;:::o;19526:280::-;19581:7;19601:18;19622:11;:20;19634:7;19622:20;;;;;;;;;;;;;;;;;;;;;19601:41;;19695:1;19673:24;;:10;:24;;;;19652:118;;;;;;;;;;;;;;;;;;;;;;19788:10;19781:17;;;19526:280;;;:::o;19049:258::-;19109:7;19172:1;19150:24;;:10;:24;;;;19129:113;;;;;;;;;;;;;;;;;;;;;;19260:39;:17;:29;19278:10;19260:29;;;;;;;;;;;;;;;:37;:39::i;:::-;19253:46;;19049:258;;;:::o;18206:403::-;18328:15;18356:29;18388:27;:35;18416:6;18388:35;;;;;;;;;;;;;;;18424:9;;18388:46;;;;;;;;;;;;;;;;;;;;;18356:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18444:17;18477:1;:8;18464:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18444:42;;18502:6;18511:1;18502:10;;18497:86;18518:1;:8;18514:1;:12;18497:86;;;18555:1;18557;18555:4;;;;;;;;;;;;;;:17;;;18547:1;18549;18547:4;;;;;;;;;;;;;:25;;;;18528:3;;;;;;;18497:86;;;;18600:1;18593:8;;;;18206:403;;;;;:::o;1093:32::-;;;;;;;;;;;;;:::o;33323:80::-;5863:5;;;;;;;;;;;5847:21;;:12;:10;:12::i;:::-;:21;;;5826:95;;;;;;;;;;;;;;;;;;;;;;33079:6;;;;;;;;;;;33078:7;33070:16;;;;;;33392:4;33383:6;;:13;;;;;;;;;;;;;;;;;;33323:80::o;20209:867::-;20274:16;20302:18;20323:21;20333:10;20323:9;:21::i;:::-;20302:42;;20373:1;20359:10;:15;20355:715;;;20448:1;20434:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20434:16:3;;;;20427:23;;;;;20355:715;20481:23;20521:10;20507:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20507:25:3;;;;20481:51;;20546:19;20568:13;:11;:13::i;:::-;20546:35;;20595:19;20617:1;20595:23;;20772:15;20817:1;20807:11;;20802:230;20831:11;20820:7;:22;20802:230;;20901:10;20877:34;;:11;:20;20889:7;20877:20;;;;;;;;;;;;;;;;;;;;;:34;;;20873:145;;;20957:7;20935:6;20942:11;20935:19;;;;;;;;;;;;;:29;;;;;20986:13;;;;;;;20873:145;20844:9;;;;;;;20802:230;;;21053:6;21046:13;;;;;;;20209:867;;;;:::o;1024:20::-;;;;;;;;;;;;;:::o;1434:87:9:-;1475:13;1507:7;1500:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:87;:::o;22890:309:3:-;6871:27;6885:12;:10;:12::i;:::-;6871:13;:27::i;:::-;6850:107;;;;;;;;;;;;;;;;;;;;;;33079:6;;;;;;;;;;;33078:7;33070:16;;;;;;23034:12;:10;:12::i;:::-;23028:18;;:2;:18;;;;23020:56;;;;;;;;;;;;;;;;;;;;;;23126:8;23087:18;:32;23106:12;:10;:12::i;:::-;23087:32;;;;;;;;;;;;;;;:36;23120:2;23087:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;23178:2;23149:42;;23164:12;:10;:12::i;:::-;23149:42;;;23182:8;23149:42;;;;;;;;;;;;;;;22890:309;;:::o;17791:330::-;17861:15;17889:26;17918:24;:32;17943:6;17918:32;;;;;;;;;;;;;;;17889:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17960:17;17993:1;:8;17980:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17960:42;;18018:6;18027:1;18018:10;;18013:82;18034:1;:8;18030:1;:12;18013:82;;;18070:1;18072;18070:4;;;;;;;;;;;;;;:14;;;18063:1;18065;18063:4;;;;;;;;;;;;;:21;;;;18044:3;;;;;;;18013:82;;;;18112:1;18105:8;;;;17791:330;;;:::o;7043:108::-;7099:4;7122:22;7136:7;7122:13;:22::i;:::-;7115:29;;7043:108;;;:::o;26226:594::-;33079:6;;;;;;;;;;;33078:7;33070:16;;;;;;26387:19;26401:4;26387:13;:19::i;:::-;26366:118;;;;;;;;;;;;;;;;;;;;;;26516:17;26530:2;26516:13;:17::i;:::-;26495:116;;;;;;;;;;;;;;;;;;;;;;26643:41;26662:12;:10;:12::i;:::-;26676:7;26643:18;:41::i;:::-;26622:137;;;;;;;;;;;;;;;;;;;;;;26770:42;26788:4;26794:2;26798:7;26807:4;26770:17;:42::i;:::-;26226:594;;;;:::o;6256:144::-;5863:5;;;;;;;;;;;5847:21;;:12;:10;:12::i;:::-;:21;;;5826:95;;;;;;;;;;;;;;;;;;;;;;6382:10;6354:8;;:39;;;;;;;;;;;;;;;;;;6256:144;:::o;14150:231::-;14208:13;14255:16;14263:7;14255;:16::i;:::-;14234:102;;;;;;;;;;;;;;;;;;;;;;14354:10;:19;14365:7;14354:19;;;;;;;;;;;14347:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14150:231;;;:::o;10749:657::-;11040:7;7324:22;7333:12;:10;:12::i;:::-;7324:8;:22::i;:::-;7303:122;;;;;;;;;;;;;;;;;;;;;;33079:6;;;;;;;;;;;33078:7;33070:16;;;;;;11085:47;11102:9;11113;11124:7;11085:16;:47::i;:::-;11064:119;;;;;;;;;;;;;;;;;;;;;;11194:15;11212:23;11222:12;:10;:12::i;:::-;11212:9;:23::i;:::-;11194:41;;11245:87;11263:7;11272:9;11283:12;11297:9;11308:7;11317:14;11245:17;:87::i;:::-;11342:31;11355:7;11364:8;11342:12;:31::i;:::-;11391:7;11384:14;;;10749:657;;;;;;;;:::o;9047:572::-;9294:7;7324:22;7333:12;:10;:12::i;:::-;7324:8;:22::i;:::-;7303:122;;;;;;;;;;;;;;;;;;;;;;33079:6;;;;;;;;;;;33078:7;33070:16;;;;;;9339:47;9356:9;9367;9378:7;9339:16;:47::i;:::-;9318:119;;;;;;;;;;;;;;;;;;;;;;9448:15;9466:23;9476:12;:10;:12::i;:::-;9466:9;:23::i;:::-;9448:41;;9499:87;9517:7;9526:9;9537:12;9551:9;9562:7;9571:14;9499:17;:87::i;:::-;9604:7;9597:14;;;9047:572;;;;;;;:::o;7560:564::-;7803:7;7324:22;7333:12;:10;:12::i;:::-;7324:8;:22::i;:::-;7303:122;;;;;;;;;;;;;;;;;;;;;;33079:6;;;;;;;;;;;33078:7;33070:16;;;;;;7848:47;7865:9;7876;7887:7;7848:16;:47::i;:::-;7827:119;;;;;;;;;;;;;;;;;;;;;;7957:15;7975:19;7981:12;:10;:12::i;:::-;7975:5;:19::i;:::-;7957:37;;8004:87;8022:7;8031:9;8042:12;8056:9;8067:7;8076:14;8004:17;:87::i;:::-;8109:7;8102:14;;;7560:564;;;;;;;:::o;16849:722::-;16925:14;16953:23;16990:26;17030:16;17060:14;17088:21;17148:16;17156:7;17148;:16::i;:::-;17127:111;;;;;;;;;;;;;;;;;;;;;;17270:16;:25;17287:7;17270:25;;;;;;;;;;;:32;;;;;;;;;;;;17316:16;:25;17333:7;17316:25;;;;;;;;;;;:35;;17365:16;:25;17382:7;17365:25;;;;;;;;;;;:38;;17417:16;:25;17434:7;17417:25;;;;;;;;;;;:35;;;;;;;;;;;;17466:16;:25;17483:7;17466:25;;;;;;;;;;;:33;;;;;;;;;;;;17513:16;:25;17530:7;17513:25;;;;;;;;;;;:40;;;;;;;;;;;;17249:314;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16849:722;;;;;;;:::o;23538:185::-;23647:4;23675:18;:30;23694:10;23675:30;;;;;;;;;;;;;;;:40;23706:8;23675:40;;;;;;;;;;;;;;;;;;;;;;;;;23668:47;;23538:185;;;;:::o;5945:167::-;5863:5;;;;;;;;;;;5847:21;;:12;:10;:12::i;:::-;:21;;;5826:95;;;;;;;;;;;;;;;;;;;;;;6061:1;6041:22;;:8;:22;;;6037:69;;6087:8;6079:5;;:16;;;;;;;;;;;;;;;;;;6037:69;5945:167;:::o;28035:165::-;28092:4;28109:18;28130:11;:20;28142:7;28130:20;;;;;;;;;;;;;;;;;;;;;28109:41;;28190:1;28168:24;;:10;:24;;;;28161:31;;;28035:165;;;:::o;5221:90::-;5266:7;5293:10;5286:17;;5221:90;:::o;1061:112:1:-;1126:7;1152;:14;;;1145:21;;1061:112;;;:::o;14439:446:3:-;14577:4;14615:8;;;;;;;;;;;:38;;;14654:9;14615:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14615:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14615:49:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14615:49:3;;;;;;;;;14594:142;;;;;;;;;;;;;;;;;;;;;;14778:9;14768:19;;:7;:19;;;14747:108;;;;;;;;;;;;;;;;;;;;;;14873:4;14866:11;;14439:446;;;;;:::o;12599:309::-;12667:7;12687:15;12705:9;12711:2;12705:5;:9::i;:::-;12687:27;;12746:53;12777:1;12781:2;12785:7;12794:4;12746:22;:53::i;:::-;12725:150;;;;;;;;;;;;;;;;;;;;;;12893:7;12886:14;;;12599:309;;;;:::o;15794:1048::-;16043:16;16051:7;16043;:16::i;:::-;16022:99;;;;;;;;;;;;;;;;;;;;;;16132:25;;:::i;:::-;16160:285;;;;;;;;16199:12;:10;:12::i;:::-;16160:285;;;;;;16244:9;16160:285;;;;16289:12;16160:285;;;;16334:9;16160:285;;;;;;16374:7;16160:285;;;;;;16419:14;16160:285;;;;;16132:313;;16484:9;16456:16;:25;16473:7;16456:25;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16509;16536:9;16509:26;:37::i;:::-;16504:142;;16562:24;:38;16587:12;:10;:12::i;:::-;16562:38;;;;;;;;;;;;;;;16607:26;;;;;;;;16623:9;16607:26;;;16562:73;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16562:73:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;16504:142;16661:54;16691:9;16702:12;16661:29;:54::i;:::-;16656:179;;16731:27;:41;16759:12;:10;:12::i;:::-;16731:41;;;;;;;;;;;;;;;16773:9;16731:52;;;;;;;;;;;;;;;;;;;;16790:32;;;;;;;;16809:12;16790:32;;;16731:93;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16731::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;16656:179;15794:1048;;;;;;;:::o;28561:411::-;28670:4;28712:16;28720:7;28712;:16::i;:::-;28691:107;;;;;;;;;;;;;;;;;;;;;;28809:18;28830:16;28838:7;28830;:16::i;:::-;28809:37;;28877:10;28866:21;;:7;:21;;;:56;;;;28915:7;28891:31;;:20;28903:7;28891:11;:20::i;:::-;:31;;;28866:56;:97;;;;28926:37;28943:10;28955:7;28926:16;:37::i;:::-;28866:97;28858:106;;;28561:411;;;;:::o;29349:518::-;29476:4;29456:24;;:16;29464:7;29456;:16::i;:::-;:24;;;29435:112;;;;;;;;;;;;;;;;;;;;;;29593:1;29579:16;;:2;:16;;;;29558:99;;;;;;;;;;;;;;;;;;;;;;29668:23;29683:7;29668:14;:23::i;:::-;29702:35;:17;:23;29720:4;29702:23;;;;;;;;;;;;;;;:33;:35::i;:::-;29747:33;:17;:21;29765:2;29747:21;;;;;;;;;;;;;;;:31;:33::i;:::-;29814:2;29791:11;:20;29803:7;29791:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;29851:7;29847:2;29832:27;;29841:4;29832:27;;;;;;;;;;;;29349:518;;;:::o;13094:366::-;13139:7;13181:1;13167:16;;:2;:16;;;;13159:61;;;;;;;;;;;;;;;;;;;;;;13231:21;:9;:19;:21::i;:::-;13262:15;13280:19;:9;:17;:19::i;:::-;13262:37;;13333:2;13310:11;:20;13322:7;13310:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13345:33;:17;:21;13363:2;13345:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13419:7;13415:2;13394:33;;13411:1;13394:33;;;;;;;;;;;;13445:7;13438:14;;;13094:366;;;:::o;13729:221::-;13828:16;13836:7;13828;:16::i;:::-;13807:99;;;;;;;;;;;;;;;;;;;;;;13939:3;13917:10;:19;13928:7;13917:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;13729:221;;:::o;32789:92::-;32841:32;32847:16;32855:7;32847;:16::i;:::-;32865:7;32841:5;:32::i;:::-;32789:92;:::o;27524:316::-;27645:32;27659:4;27665:2;27669:7;27645:13;:32::i;:::-;27709:47;27732:4;27738:2;27742:7;27751:4;27709:22;:47::i;:::-;27688:144;;;;;;;;;;;;;;;;;;;;;;27524:316;;;;:::o;11899:136::-;11948:7;11968:15;11986:17;11996:2;11986:17;;;;;;;;;;;;:9;:17::i;:::-;11968:35;;12020:7;12013:14;;;11899:136;;;:::o;30455:357::-;30583:4;30609:15;:2;:13;;;:15::i;:::-;30604:58;;30647:4;30640:11;;;;30604:58;30672:13;30704:2;30688:36;;;30725:12;:10;:12::i;:::-;30739:4;30745:7;30754:4;30688:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30688:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30688:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;30688:71:3;;;;;;;;;30672:87;;1347:10;30787:16;;30777:26;;;:6;:26;;;;30769:35;;;30455:357;;;;;;;:::o;14892:413::-;14991:4;15008:26;15037:24;:36;15062:10;15037:36;;;;;;;;;;;;;;;15008:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15083:15;15101:5;15083:23;;15121:6;15130:1;15121:10;;15116:155;15137:1;:8;15133:1;:12;15116:155;;;15170:39;15183:9;15194:1;15196;15194:4;;;;;;;;;;;;;;:14;;;15170:12;:39::i;:::-;15166:95;;;15242:4;15229:17;;15166:95;15147:3;;;;;;;15116:155;;;;15288:10;15281:17;;;;14892:413;;;:::o;15312:475::-;15450:4;15467:29;15499:27;:39;15527:10;15499:39;;;;;;;;;;;;;;;15539:9;15499:50;;;;;;;;;;;;;;;;;;;;15467:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15559:15;15577:5;15559:23;;15597:6;15606:1;15597:10;;15592:161;15613:1;:8;15609:1;:12;15592:161;;;15646:45;15659:12;15673:1;15675;15673:4;;;;;;;;;;;;;;:17;;;15646:12;:45::i;:::-;15642:101;;;15724:4;15711:17;;15642:101;15623:3;;;;;;;15592:161;;;;15770:10;15763:17;;;;15312:475;;;;:::o;30974:173::-;31074:1;31038:38;;:15;:24;31054:7;31038:24;;;;;;;;;;;;;;;;;;;;;:38;;;31034:106;;31127:1;31092:15;:24;31108:7;31092:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;31034:106;30974:173;:::o;1274:108:1:-;1354:21;1373:1;1354:7;:14;;;:18;;:21;;;;:::i;:::-;1337:7;:14;;:38;;;;1274:108;:::o;1179:89::-;1260:1;1242:7;:14;;;:19;;;;;;;;;;;1179:89;:::o;32011:597:3:-;32124:10;32104:30;;:16;32112:7;32104;:16::i;:::-;:30;;;32083:114;;;;;;;;;;;;;;;;;;;;;;32208:23;32223:7;32208:14;:23::i;:::-;32242:41;:17;:29;32260:10;32242:29;;;;;;;;;;;;;;;:39;:41::i;:::-;32324:1;32293:11;:20;32305:7;32293:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;32415:1;32384:10;:19;32395:7;32384:19;;;;;;;;;;;32378:33;;;;;;;;;;;;;;;;:38;32374:95;;32439:10;:19;32450:7;32439:19;;;;;;;;;;;;32432:26;;;;:::i;:::-;32374:95;32518:16;:25;32535:7;32518:25;;;;;;;;;;;;32511:32;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32592:7;32588:1;32559:41;;32568:10;32559:41;;;;;;;;;;;;32011:597;;:::o;559:797:0:-;619:4;1064:16;1090:19;1112:66;1090:88;;;;1279:7;1267:20;1255:32;;1318:3;1306:15;;:8;:15;;:42;;;;;1337:11;1325:8;:23;;1306:42;1298:51;;;;559:797;;;:::o;33743:230:3:-;33868:4;33960:1;33942:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;33942:21:3;;;33932:32;;;;;;33924:1;33906:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;33906:21:3;;;33896:32;;;;;;:68;33888:78;;33743:230;;;;:::o;1276:134:11:-;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1353:50;;1276:134;;;;:::o;1846:187::-;1932:7;1964:1;1959;:6;;1967:12;1951:29;;;;;;;;;;;;;;;;;;;;;;;;;1990:9;2006:1;2002;:5;1990:17;;2025:1;2018:8;;;1846:187;;;;;:::o;285:1239:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:128;;354:6;348:13;339:22;;366:30;390:5;366:30;;;333:68;;;;;408:128;;487:6;474:20;465:29;;499:32;525:5;499:32;;;459:77;;;;;543:132;;626:6;620:13;611:22;;638:32;664:5;638:32;;;605:70;;;;;683:440;;784:3;777:4;769:6;765:17;761:27;751:2;;802:1;799;792:12;751:2;839:6;826:20;861:64;876:48;917:6;876:48;;;861:64;;;852:73;;945:6;938:5;931:21;981:4;973:6;969:17;1014:4;1007:5;1003:16;1049:3;1040:6;1035:3;1031:16;1028:25;1025:2;;;1066:1;1063;1056:12;1025:2;1076:41;1110:6;1105:3;1100;1076:41;;;744:379;;;;;;;;1146:336;;;1261:3;1254:4;1246:6;1242:17;1238:27;1228:2;;1279:1;1276;1269:12;1228:2;1312:6;1299:20;1289:30;;1339:18;1331:6;1328:30;1325:2;;;1371:1;1368;1361:12;1325:2;1405:4;1397:6;1393:17;1381:29;;1455:3;1448;1440:6;1436:16;1426:8;1422:31;1419:40;1416:2;;;1472:1;1469;1462:12;1416:2;1221:261;;;;;;1491:442;;1593:3;1586:4;1578:6;1574:17;1570:27;1560:2;;1611:1;1608;1601:12;1560:2;1648:6;1635:20;1670:65;1685:49;1727:6;1685:49;;;1670:65;;;1661:74;;1755:6;1748:5;1741:21;1791:4;1783:6;1779:17;1824:4;1817:5;1813:16;1859:3;1850:6;1845:3;1841:16;1838:25;1835:2;;;1876:1;1873;1866:12;1835:2;1886:41;1920:6;1915:3;1910;1886:41;;;1553:380;;;;;;;;1941:130;;2021:6;2008:20;1999:29;;2033:33;2060:5;2033:33;;;1993:78;;;;;2078:128;;2157:6;2144:20;2135:29;;2169:32;2195:5;2169:32;;;2129:77;;;;;2213:241;;2317:2;2305:9;2296:7;2292:23;2288:32;2285:2;;;2333:1;2330;2323:12;2285:2;2368:1;2385:53;2430:7;2421:6;2410:9;2406:22;2385:53;;;2375:63;;2347:97;2279:175;;;;;2461:366;;;2582:2;2570:9;2561:7;2557:23;2553:32;2550:2;;;2598:1;2595;2588:12;2550:2;2633:1;2650:53;2695:7;2686:6;2675:9;2671:22;2650:53;;;2640:63;;2612:97;2740:2;2758:53;2803:7;2794:6;2783:9;2779:22;2758:53;;;2748:63;;2719:98;2544:283;;;;;;2834:491;;;;2972:2;2960:9;2951:7;2947:23;2943:32;2940:2;;;2988:1;2985;2978:12;2940:2;3023:1;3040:53;3085:7;3076:6;3065:9;3061:22;3040:53;;;3030:63;;3002:97;3130:2;3148:53;3193:7;3184:6;3173:9;3169:22;3148:53;;;3138:63;;3109:98;3238:2;3256:53;3301:7;3292:6;3281:9;3277:22;3256:53;;;3246:63;;3217:98;2934:391;;;;;;3332:721;;;;;3496:3;3484:9;3475:7;3471:23;3467:33;3464:2;;;3513:1;3510;3503:12;3464:2;3548:1;3565:53;3610:7;3601:6;3590:9;3586:22;3565:53;;;3555:63;;3527:97;3655:2;3673:53;3718:7;3709:6;3698:9;3694:22;3673:53;;;3663:63;;3634:98;3763:2;3781:53;3826:7;3817:6;3806:9;3802:22;3781:53;;;3771:63;;3742:98;3899:2;3888:9;3884:18;3871:32;3923:18;3915:6;3912:30;3909:2;;;3955:1;3952;3945:12;3909:2;3975:62;4029:7;4020:6;4009:9;4005:22;3975:62;;;3965:72;;3850:193;3458:595;;;;;;;;4060:360;;;4178:2;4166:9;4157:7;4153:23;4149:32;4146:2;;;4194:1;4191;4184:12;4146:2;4229:1;4246:53;4291:7;4282:6;4271:9;4267:22;4246:53;;;4236:63;;4208:97;4336:2;4354:50;4396:7;4387:6;4376:9;4372:22;4354:50;;;4344:60;;4315:95;4140:280;;;;;;4427:492;;;;4568:2;4556:9;4547:7;4543:23;4539:32;4536:2;;;4584:1;4581;4574:12;4536:2;4619:1;4636:53;4681:7;4672:6;4661:9;4657:22;4636:53;;;4626:63;;4598:97;4754:2;4743:9;4739:18;4726:32;4778:18;4770:6;4767:30;4764:2;;;4810:1;4807;4800:12;4764:2;4838:65;4895:7;4886:6;4875:9;4871:22;4838:65;;;4828:75;;;;4705:204;4530:389;;;;;;4926:366;;;5047:2;5035:9;5026:7;5022:23;5018:32;5015:2;;;5063:1;5060;5053:12;5015:2;5098:1;5115:53;5160:7;5151:6;5140:9;5136:22;5115:53;;;5105:63;;5077:97;5205:2;5223:53;5268:7;5259:6;5248:9;5244:22;5223:53;;;5213:63;;5184:98;5009:283;;;;;;5299:257;;5411:2;5399:9;5390:7;5386:23;5382:32;5379:2;;;5427:1;5424;5417:12;5379:2;5462:1;5479:61;5532:7;5523:6;5512:9;5508:22;5479:61;;;5469:71;;5441:105;5373:183;;;;;5563:239;;5666:2;5654:9;5645:7;5641:23;5637:32;5634:2;;;5682:1;5679;5672:12;5634:2;5717:1;5734:52;5778:7;5769:6;5758:9;5754:22;5734:52;;;5724:62;;5696:96;5628:174;;;;;5809:261;;5923:2;5911:9;5902:7;5898:23;5894:32;5891:2;;;5939:1;5936;5929:12;5891:2;5974:1;5991:63;6046:7;6037:6;6026:9;6022:22;5991:63;;;5981:73;;5953:107;5885:185;;;;;6077:949;;;;;;6266:3;6254:9;6245:7;6241:23;6237:33;6234:2;;;6283:1;6280;6273:12;6234:2;6346:1;6335:9;6331:17;6318:31;6369:18;6361:6;6358:30;6355:2;;;6401:1;6398;6391:12;6355:2;6421:63;6476:7;6467:6;6456:9;6452:22;6421:63;;;6411:73;;6297:193;6549:2;6538:9;6534:18;6521:32;6573:18;6565:6;6562:30;6559:2;;;6605:1;6602;6595:12;6559:2;6625:63;6680:7;6671:6;6660:9;6656:22;6625:63;;;6615:73;;6500:194;6725:2;6743:52;6787:7;6778:6;6767:9;6763:22;6743:52;;;6733:62;;6704:97;6832:2;6850:52;6894:7;6885:6;6874:9;6870:22;6850:52;;;6840:62;;6811:97;6939:3;6958:52;7002:7;6993:6;6982:9;6978:22;6958:52;;;6948:62;;6918:98;6228:798;;;;;;;;;7033:1179;;;;;;;7248:3;7236:9;7227:7;7223:23;7219:33;7216:2;;;7265:1;7262;7255:12;7216:2;7328:1;7317:9;7313:17;7300:31;7351:18;7343:6;7340:30;7337:2;;;7383:1;7380;7373:12;7337:2;7403:63;7458:7;7449:6;7438:9;7434:22;7403:63;;;7393:73;;7279:193;7531:2;7520:9;7516:18;7503:32;7555:18;7547:6;7544:30;7541:2;;;7587:1;7584;7577:12;7541:2;7607:63;7662:7;7653:6;7642:9;7638:22;7607:63;;;7597:73;;7482:194;7707:2;7725:52;7769:7;7760:6;7749:9;7745:22;7725:52;;;7715:62;;7686:97;7814:2;7832:52;7876:7;7867:6;7856:9;7852:22;7832:52;;;7822:62;;7793:97;7921:3;7940:52;7984:7;7975:6;7964:9;7960:22;7940:52;;;7930:62;;7900:98;8057:3;8046:9;8042:19;8029:33;8082:18;8074:6;8071:30;8068:2;;;8114:1;8111;8104:12;8068:2;8134:62;8188:7;8179:6;8168:9;8164:22;8134:62;;;8124:72;;8008:194;7210:1002;;;;;;;;;8219:1181;;;;;;;8435:3;8423:9;8414:7;8410:23;8406:33;8403:2;;;8452:1;8449;8442:12;8403:2;8515:1;8504:9;8500:17;8487:31;8538:18;8530:6;8527:30;8524:2;;;8570:1;8567;8560:12;8524:2;8590:63;8645:7;8636:6;8625:9;8621:22;8590:63;;;8580:73;;8466:193;8718:2;8707:9;8703:18;8690:32;8742:18;8734:6;8731:30;8728:2;;;8774:1;8771;8764:12;8728:2;8794:63;8849:7;8840:6;8829:9;8825:22;8794:63;;;8784:73;;8669:194;8894:2;8912:52;8956:7;8947:6;8936:9;8932:22;8912:52;;;8902:62;;8873:97;9001:2;9019:52;9063:7;9054:6;9043:9;9039:22;9019:52;;;9009:62;;8980:97;9108:3;9127:52;9171:7;9162:6;9151:9;9147:22;9127:52;;;9117:62;;9087:98;9244:3;9233:9;9229:19;9216:33;9269:18;9261:6;9258:30;9255:2;;;9301:1;9298;9291:12;9255:2;9321:63;9376:7;9367:6;9356:9;9352:22;9321:63;;;9311:73;;9195:195;8397:1003;;;;;;;;;9407:241;;9511:2;9499:9;9490:7;9486:23;9482:32;9479:2;;;9527:1;9524;9517:12;9479:2;9562:1;9579:53;9624:7;9615:6;9604:9;9600:22;9579:53;;;9569:63;;9541:97;9473:175;;;;;9656:181;;9769:62;9827:3;9819:6;9769:62;;;9755:76;;9748:89;;;;;9846:173;;9933:46;9975:3;9967:6;9933:46;;;10008:4;10003:3;9999:14;9985:28;;9926:93;;;;;10027:113;10110:24;10128:5;10110:24;;;10105:3;10098:37;10092:48;;;10176:896;;10333:60;10387:5;10333:60;;;10406:92;10491:6;10486:3;10406:92;;;10399:99;;10521:3;10563:4;10555:6;10551:17;10546:3;10542:27;10590:62;10646:5;10590:62;;;10672:7;10700:1;10685:348;10710:6;10707:1;10704:13;10685:348;;;10772:9;10766:4;10762:20;10757:3;10750:33;10817:6;10811:13;10839:76;10910:4;10895:13;10839:76;;;10831:84;;10932:66;10991:6;10932:66;;;10922:76;;11021:4;11016:3;11012:14;11005:21;;10742:291;10732:1;10729;10725:9;10720:14;;10685:348;;;10689:14;11046:4;11039:11;;11063:3;11056:10;;10312:760;;;;;;;;;;11111:690;;11256:54;11304:5;11256:54;;;11323:86;11402:6;11397:3;11323:86;;;11316:93;;11430:56;11480:5;11430:56;;;11506:7;11534:1;11519:260;11544:6;11541:1;11538:13;11519:260;;;11611:6;11605:13;11632:63;11691:3;11676:13;11632:63;;;11625:70;;11712:60;11765:6;11712:60;;;11702:70;;11576:203;11566:1;11563;11559:9;11554:14;;11519:260;;;11523:14;11792:3;11785:10;;11235:566;;;;;;;;11809:104;11886:21;11901:5;11886:21;;;11881:3;11874:34;11868:45;;;11920:343;;12030:38;12062:5;12030:38;;;12080:70;12143:6;12138:3;12080:70;;;12073:77;;12155:52;12200:6;12195:3;12188:4;12181:5;12177:16;12155:52;;;12228:29;12250:6;12228:29;;;12223:3;12219:39;12212:46;;12010:253;;;;;;12270:174;12377:61;12432:5;12377:61;;;12372:3;12365:74;12359:85;;;12476:313;;12610:89;12692:6;12687:3;12610:89;;;12603:96;;12711:43;12747:6;12742:3;12735:5;12711:43;;;12776:6;12771:3;12767:16;12760:23;;12596:193;;;;;;12797:347;;12909:39;12942:5;12909:39;;;12960:71;13024:6;13019:3;12960:71;;;12953:78;;13036:52;13081:6;13076:3;13069:4;13062:5;13058:16;13036:52;;;13109:29;13131:6;13109:29;;;13104:3;13100:39;13093:46;;12889:255;;;;;;13151:360;;13281:39;13314:5;13281:39;;;13332:89;13414:6;13409:3;13332:89;;;13325:96;;13426:52;13471:6;13466:3;13459:4;13452:5;13448:16;13426:52;;;13499:6;13494:3;13490:16;13483:23;;13261:250;;;;;;13518:319;;13616:35;13645:5;13616:35;;;13663:61;13717:6;13712:3;13663:61;;;13656:68;;13729:52;13774:6;13769:3;13762:4;13755:5;13751:16;13729:52;;;13802:29;13824:6;13802:29;;;13797:3;13793:39;13786:46;;13596:241;;;;;;13845:465;;14005:67;14069:2;14064:3;14005:67;;;13998:74;;14105:66;14101:1;14096:3;14092:11;14085:87;14206:66;14201:2;14196:3;14192:12;14185:88;14301:2;14296:3;14292:12;14285:19;;13991:319;;;;14319:465;;14479:67;14543:2;14538:3;14479:67;;;14472:74;;14579:66;14575:1;14570:3;14566:11;14559:87;14680:66;14675:2;14670:3;14666:12;14659:88;14775:2;14770:3;14766:12;14759:19;;14465:319;;;;14793:465;;14953:67;15017:2;15012:3;14953:67;;;14946:74;;15053:66;15049:1;15044:3;15040:11;15033:87;15154:66;15149:2;15144:3;15140:12;15133:88;15249:2;15244:3;15240:12;15233:19;;14939:319;;;;15267:465;;15427:67;15491:2;15486:3;15427:67;;;15420:74;;15527:66;15523:1;15518:3;15514:11;15507:87;15628:66;15623:2;15618:3;15614:12;15607:88;15723:2;15718:3;15714:12;15707:19;;15413:319;;;;15741:364;;15901:67;15965:2;15960:3;15901:67;;;15894:74;;16001:66;15997:1;15992:3;15988:11;15981:87;16096:2;16091:3;16087:12;16080:19;;15887:218;;;;16114:465;;16274:67;16338:2;16333:3;16274:67;;;16267:74;;16374:66;16370:1;16365:3;16361:11;16354:87;16475:66;16470:2;16465:3;16461:12;16454:88;16570:2;16565:3;16561:12;16554:19;;16260:319;;;;16588:465;;16748:67;16812:2;16807:3;16748:67;;;16741:74;;16848:66;16844:1;16839:3;16835:11;16828:87;16949:66;16944:2;16939:3;16935:12;16928:88;17044:2;17039:3;17035:12;17028:19;;16734:319;;;;17062:465;;17222:67;17286:2;17281:3;17222:67;;;17215:74;;17322:66;17318:1;17313:3;17309:11;17302:87;17423:66;17418:2;17413:3;17409:12;17402:88;17518:2;17513:3;17509:12;17502:19;;17208:319;;;;17536:364;;17696:67;17760:2;17755:3;17696:67;;;17689:74;;17796:66;17792:1;17787:3;17783:11;17776:87;17891:2;17886:3;17882:12;17875:19;;17682:218;;;;17909:465;;18069:67;18133:2;18128:3;18069:67;;;18062:74;;18169:66;18165:1;18160:3;18156:11;18149:87;18270:66;18265:2;18260:3;18256:12;18249:88;18365:2;18360:3;18356:12;18349:19;;18055:319;;;;18383:465;;18543:67;18607:2;18602:3;18543:67;;;18536:74;;18643:66;18639:1;18634:3;18630:11;18623:87;18744:66;18739:2;18734:3;18730:12;18723:88;18839:2;18834:3;18830:12;18823:19;;18529:319;;;;18857:465;;19017:67;19081:2;19076:3;19017:67;;;19010:74;;19117:66;19113:1;19108:3;19104:11;19097:87;19218:66;19213:2;19208:3;19204:12;19197:88;19313:2;19308:3;19304:12;19297:19;;19003:319;;;;19331:364;;19491:67;19555:2;19550:3;19491:67;;;19484:74;;19591:66;19587:1;19582:3;19578:11;19571:87;19686:2;19681:3;19677:12;19670:19;;19477:218;;;;19704:465;;19864:67;19928:2;19923:3;19864:67;;;19857:74;;19964:66;19960:1;19955:3;19951:11;19944:87;20065:66;20060:2;20055:3;20051:12;20044:88;20160:2;20155:3;20151:12;20144:19;;19850:319;;;;20178:465;;20338:67;20402:2;20397:3;20338:67;;;20331:74;;20438:66;20434:1;20429:3;20425:11;20418:87;20539:66;20534:2;20529:3;20525:12;20518:88;20634:2;20629:3;20625:12;20618:19;;20324:319;;;;20652:465;;20812:67;20876:2;20871:3;20812:67;;;20805:74;;20912:66;20908:1;20903:3;20899:11;20892:87;21013:66;21008:2;21003:3;20999:12;20992:88;21108:2;21103:3;21099:12;21092:19;;20798:319;;;;21126:364;;21286:67;21350:2;21345:3;21286:67;;;21279:74;;21386:66;21382:1;21377:3;21373:11;21366:87;21481:2;21476:3;21472:12;21465:19;;21272:218;;;;21499:465;;21659:67;21723:2;21718:3;21659:67;;;21652:74;;21759:66;21755:1;21750:3;21746:11;21739:87;21860:66;21855:2;21850:3;21846:12;21839:88;21955:2;21950:3;21946:12;21939:19;;21645:319;;;;21973:465;;22133:67;22197:2;22192:3;22133:67;;;22126:74;;22233:66;22229:1;22224:3;22220:11;22213:87;22334:66;22329:2;22324:3;22320:12;22313:88;22429:2;22424:3;22420:12;22413:19;;22119:319;;;;22447:465;;22607:67;22671:2;22666:3;22607:67;;;22600:74;;22707:66;22703:1;22698:3;22694:11;22687:87;22808:66;22803:2;22798:3;22794:12;22787:88;22903:2;22898:3;22894:12;22887:19;;22593:319;;;;22921:364;;23081:67;23145:2;23140:3;23081:67;;;23074:74;;23181:66;23177:1;23172:3;23168:11;23161:87;23276:2;23271:3;23267:12;23260:19;;23067:218;;;;23294:465;;23454:67;23518:2;23513:3;23454:67;;;23447:74;;23554:66;23550:1;23545:3;23541:11;23534:87;23655:66;23650:2;23645:3;23641:12;23634:88;23750:2;23745:3;23741:12;23734:19;;23440:319;;;;23768:465;;23928:67;23992:2;23987:3;23928:67;;;23921:74;;24028:66;24024:1;24019:3;24015:11;24008:87;24129:66;24124:2;24119:3;24115:12;24108:88;24224:2;24219:3;24215:12;24208:19;;23914:319;;;;24242:465;;24402:67;24466:2;24461:3;24402:67;;;24395:74;;24502:66;24498:1;24493:3;24489:11;24482:87;24603:66;24598:2;24593:3;24589:12;24582:88;24698:2;24693:3;24689:12;24682:19;;24388:319;;;;24715:103;24788:24;24806:5;24788:24;;;24783:3;24776:37;24770:48;;;24825:113;24908:24;24926:5;24908:24;;;24903:3;24896:37;24890:48;;;24945:110;25026:23;25043:5;25026:23;;;25021:3;25014:36;25008:47;;;25062:286;;25218:105;25319:3;25310:6;25302;25218:105;;;25211:112;;25340:3;25333:10;;25199:149;;;;;;25355:266;;25501:95;25592:3;25583:6;25501:95;;;25494:102;;25613:3;25606:10;;25482:139;;;;;25628:213;;25746:2;25735:9;25731:18;25723:26;;25760:71;25828:1;25817:9;25813:17;25804:6;25760:71;;;25717:124;;;;;25848:631;;26068:3;26057:9;26053:19;26045:27;;26083:71;26151:1;26140:9;26136:17;26127:6;26083:71;;;26165:72;26233:2;26222:9;26218:18;26209:6;26165:72;;;26248;26316:2;26305:9;26301:18;26292:6;26248:72;;;26368:9;26362:4;26358:20;26353:2;26342:9;26338:18;26331:48;26393:76;26464:4;26455:6;26393:76;;;26385:84;;26039:440;;;;;;;;26486:935;;26778:3;26767:9;26763:19;26755:27;;26793:71;26861:1;26850:9;26846:17;26837:6;26793:71;;;26912:9;26906:4;26902:20;26897:2;26886:9;26882:18;26875:48;26937:78;27010:4;27001:6;26937:78;;;26929:86;;27063:9;27057:4;27053:20;27048:2;27037:9;27033:18;27026:48;27088:78;27161:4;27152:6;27088:78;;;27080:86;;27177:70;27243:2;27232:9;27228:18;27219:6;27177:70;;;27258:71;27324:3;27313:9;27309:19;27300:6;27258:71;;;27340;27406:3;27395:9;27391:19;27382:6;27340:71;;;26749:672;;;;;;;;;;27428:385;;27608:2;27597:9;27593:18;27585:26;;27658:9;27652:4;27648:20;27644:1;27633:9;27629:17;27622:47;27683:120;27798:4;27789:6;27683:120;;;27675:128;;27579:234;;;;;27820:361;;27988:2;27977:9;27973:18;27965:26;;28038:9;28032:4;28028:20;28024:1;28013:9;28009:17;28002:47;28063:108;28166:4;28157:6;28063:108;;;28055:116;;27959:222;;;;;28188:201;;28300:2;28289:9;28285:18;28277:26;;28314:65;28376:1;28365:9;28361:17;28352:6;28314:65;;;28271:118;;;;;28396:261;;28538:2;28527:9;28523:18;28515:26;;28552:95;28644:1;28633:9;28629:17;28620:6;28552:95;;;28509:148;;;;;28664:301;;28802:2;28791:9;28787:18;28779:26;;28852:9;28846:4;28842:20;28838:1;28827:9;28823:17;28816:47;28877:78;28950:4;28941:6;28877:78;;;28869:86;;28773:192;;;;;28972:407;;29163:2;29152:9;29148:18;29140:26;;29213:9;29207:4;29203:20;29199:1;29188:9;29184:17;29177:47;29238:131;29364:4;29238:131;;;29230:139;;29134:245;;;;29386:407;;29577:2;29566:9;29562:18;29554:26;;29627:9;29621:4;29617:20;29613:1;29602:9;29598:17;29591:47;29652:131;29778:4;29652:131;;;29644:139;;29548:245;;;;29800:407;;29991:2;29980:9;29976:18;29968:26;;30041:9;30035:4;30031:20;30027:1;30016:9;30012:17;30005:47;30066:131;30192:4;30066:131;;;30058:139;;29962:245;;;;30214:407;;30405:2;30394:9;30390:18;30382:26;;30455:9;30449:4;30445:20;30441:1;30430:9;30426:17;30419:47;30480:131;30606:4;30480:131;;;30472:139;;30376:245;;;;30628:407;;30819:2;30808:9;30804:18;30796:26;;30869:9;30863:4;30859:20;30855:1;30844:9;30840:17;30833:47;30894:131;31020:4;30894:131;;;30886:139;;30790:245;;;;31042:407;;31233:2;31222:9;31218:18;31210:26;;31283:9;31277:4;31273:20;31269:1;31258:9;31254:17;31247:47;31308:131;31434:4;31308:131;;;31300:139;;31204:245;;;;31456:407;;31647:2;31636:9;31632:18;31624:26;;31697:9;31691:4;31687:20;31683:1;31672:9;31668:17;31661:47;31722:131;31848:4;31722:131;;;31714:139;;31618:245;;;;31870:407;;32061:2;32050:9;32046:18;32038:26;;32111:9;32105:4;32101:20;32097:1;32086:9;32082:17;32075:47;32136:131;32262:4;32136:131;;;32128:139;;32032:245;;;;32284:407;;32475:2;32464:9;32460:18;32452:26;;32525:9;32519:4;32515:20;32511:1;32500:9;32496:17;32489:47;32550:131;32676:4;32550:131;;;32542:139;;32446:245;;;;32698:407;;32889:2;32878:9;32874:18;32866:26;;32939:9;32933:4;32929:20;32925:1;32914:9;32910:17;32903:47;32964:131;33090:4;32964:131;;;32956:139;;32860:245;;;;33112:407;;33303:2;33292:9;33288:18;33280:26;;33353:9;33347:4;33343:20;33339:1;33328:9;33324:17;33317:47;33378:131;33504:4;33378:131;;;33370:139;;33274:245;;;;33526:407;;33717:2;33706:9;33702:18;33694:26;;33767:9;33761:4;33757:20;33753:1;33742:9;33738:17;33731:47;33792:131;33918:4;33792:131;;;33784:139;;33688:245;;;;33940:407;;34131:2;34120:9;34116:18;34108:26;;34181:9;34175:4;34171:20;34167:1;34156:9;34152:17;34145:47;34206:131;34332:4;34206:131;;;34198:139;;34102:245;;;;34354:407;;34545:2;34534:9;34530:18;34522:26;;34595:9;34589:4;34585:20;34581:1;34570:9;34566:17;34559:47;34620:131;34746:4;34620:131;;;34612:139;;34516:245;;;;34768:407;;34959:2;34948:9;34944:18;34936:26;;35009:9;35003:4;34999:20;34995:1;34984:9;34980:17;34973:47;35034:131;35160:4;35034:131;;;35026:139;;34930:245;;;;35182:407;;35373:2;35362:9;35358:18;35350:26;;35423:9;35417:4;35413:20;35409:1;35398:9;35394:17;35387:47;35448:131;35574:4;35448:131;;;35440:139;;35344:245;;;;35596:407;;35787:2;35776:9;35772:18;35764:26;;35837:9;35831:4;35827:20;35823:1;35812:9;35808:17;35801:47;35862:131;35988:4;35862:131;;;35854:139;;35758:245;;;;36010:407;;36201:2;36190:9;36186:18;36178:26;;36251:9;36245:4;36241:20;36237:1;36226:9;36222:17;36215:47;36276:131;36402:4;36276:131;;;36268:139;;36172:245;;;;36424:407;;36615:2;36604:9;36600:18;36592:26;;36665:9;36659:4;36655:20;36651:1;36640:9;36636:17;36629:47;36690:131;36816:4;36690:131;;;36682:139;;36586:245;;;;36838:407;;37029:2;37018:9;37014:18;37006:26;;37079:9;37073:4;37069:20;37065:1;37054:9;37050:17;37043:47;37104:131;37230:4;37104:131;;;37096:139;;37000:245;;;;37252:407;;37443:2;37432:9;37428:18;37420:26;;37493:9;37487:4;37483:20;37479:1;37468:9;37464:17;37457:47;37518:131;37644:4;37518:131;;;37510:139;;37414:245;;;;37666:407;;37857:2;37846:9;37842:18;37834:26;;37907:9;37901:4;37897:20;37893:1;37882:9;37878:17;37871:47;37932:131;38058:4;37932:131;;;37924:139;;37828:245;;;;38080:407;;38271:2;38260:9;38256:18;38248:26;;38321:9;38315:4;38311:20;38307:1;38296:9;38292:17;38285:47;38346:131;38472:4;38346:131;;;38338:139;;38242:245;;;;38494:407;;38685:2;38674:9;38670:18;38662:26;;38735:9;38729:4;38725:20;38721:1;38710:9;38706:17;38699:47;38760:131;38886:4;38760:131;;;38752:139;;38656:245;;;;38908:213;;39026:2;39015:9;39011:18;39003:26;;39040:71;39108:1;39097:9;39093:17;39084:6;39040:71;;;38997:124;;;;;39128:256;;39190:2;39184:9;39174:19;;39228:4;39220:6;39216:17;39327:6;39315:10;39312:22;39291:18;39279:10;39276:34;39273:62;39270:2;;;39348:1;39345;39338:12;39270:2;39368:10;39364:2;39357:22;39168:216;;;;;39391:321;;39534:18;39526:6;39523:30;39520:2;;;39566:1;39563;39556:12;39520:2;39633:4;39629:9;39622:4;39614:6;39610:17;39606:33;39598:41;;39697:4;39691;39687:15;39679:23;;39457:255;;;;39719:322;;39863:18;39855:6;39852:30;39849:2;;;39895:1;39892;39885:12;39849:2;39962:4;39958:9;39951:4;39943:6;39939:17;39935:33;39927:41;;40026:4;40020;40016:15;40008:23;;39786:255;;;;40048:157;;40140:3;40132:11;;40178:4;40173:3;40169:14;40161:22;;40126:79;;;;40212:151;;40298:3;40290:11;;40336:4;40331:3;40327:14;40319:22;;40284:79;;;;40370:143;;40485:5;40479:12;40469:22;;40450:63;;;;40520:137;;40629:5;40623:12;40613:22;;40594:63;;;;40664:121;;40757:5;40751:12;40741:22;;40722:63;;;;40792:118;;40882:5;40876:12;40866:22;;40847:63;;;;40917:122;;41011:5;41005:12;40995:22;;40976:63;;;;41046:114;;41150:4;41145:3;41141:14;41133:22;;41127:33;;;;41167:108;;41265:4;41260:3;41256:14;41248:22;;41242:33;;;;41283:184;;41419:6;41414:3;41407:19;41456:4;41451:3;41447:14;41432:29;;41400:67;;;;;41476:178;;41606:6;41601:3;41594:19;41643:4;41638:3;41634:14;41619:29;;41587:67;;;;;41663:162;;41777:6;41772:3;41765:19;41814:4;41809:3;41805:14;41790:29;;41758:67;;;;;41834:153;;41939:6;41934:3;41927:19;41976:4;41971:3;41967:14;41952:29;;41920:67;;;;;41996:163;;42111:6;42106:3;42099:19;42148:4;42143:3;42139:14;42124:29;;42092:67;;;;;42168:145;;42304:3;42289:18;;42282:31;;;;;42321:91;;42383:24;42401:5;42383:24;;;42372:35;;42366:46;;;;42419:85;;42492:5;42485:13;42478:21;42467:32;;42461:43;;;;42511:144;;42583:66;42576:5;42572:78;42561:89;;42555:100;;;;42662:121;;42735:42;42728:5;42724:54;42713:65;;42707:76;;;;42790:72;;42852:5;42841:16;;42835:27;;;;42869:92;;42941:14;42934:5;42930:26;42919:37;;42913:48;;;;42968:169;;43071:61;43126:5;43071:61;;;43058:74;;43052:85;;;;43144:132;;43247:24;43265:5;43247:24;;;43234:37;;43228:48;;;;43284:145;43365:6;43360:3;43355;43342:30;43421:1;43412:6;43407:3;43403:16;43396:27;43335:94;;;;43438:268;43503:1;43510:101;43524:6;43521:1;43518:13;43510:101;;;43600:1;43595:3;43591:11;43585:18;43581:1;43576:3;43572:11;43565:39;43546:2;43543:1;43539:10;43534:15;;43510:101;;;43626:6;43623:1;43620:13;43617:2;;;43691:1;43682:6;43677:3;43673:16;43666:27;43617:2;43487:219;;;;;43714:97;;43802:2;43798:7;43793:2;43786:5;43782:14;43778:28;43768:38;;43762:49;;;;43819:117;43888:24;43906:5;43888:24;;;43881:5;43878:35;43868:2;;43927:1;43924;43917:12;43868:2;43862:74;;43943:111;44009:21;44024:5;44009:21;;;44002:5;43999:32;43989:2;;44045:1;44042;44035:12;43989:2;43983:71;;44061:115;44129:23;44146:5;44129:23;;;44122:5;44119:34;44109:2;;44167:1;44164;44157:12;44109:2;44103:73;;44183:117;44252:24;44270:5;44252:24;;;44245:5;44242:35;44232:2;;44291:1;44288;44281:12;44232:2;44226:74;;44307:115;44375:23;44392:5;44375:23;;;44368:5;44365:34;44355:2;;44413:1;44410;44403:12;44355:2;44349:73;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n */\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2093
      ]
    },
    "id": 2094,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2037,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "id": 2038,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:9"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2039,
        "nodeType": "ImportDirective",
        "scope": 2094,
        "sourceUnit": 1876,
        "src": "60:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2040,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1875,
              "src": "311:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1875",
                "typeString": "contract ERC721"
              }
            },
            "id": 2041,
            "nodeType": "InheritanceSpecifier",
            "src": "311:6:9"
          }
        ],
        "contractDependencies": [
          142,
          1875,
          1885,
          1988
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol",
        "fullyImplemented": true,
        "id": 2093,
        "linearizedBaseContracts": [
          2093,
          1875,
          1988,
          142,
          1885
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2043,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2093,
            "src": "343:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2042,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "343:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2045,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2093,
            "src": "390:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2044,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "390:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2048,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2093,
            "src": "679:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2046,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "679:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2047,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "735:10:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2075,
              "nodeType": "Block",
              "src": "888:249:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2057,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2043,
                      "src": "899:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2058,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "907:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "899:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2060,
                  "nodeType": "ExpressionStatement",
                  "src": "899:12:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2061,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2045,
                      "src": "921:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2062,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2052,
                      "src": "931:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "921:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2064,
                  "nodeType": "ExpressionStatement",
                  "src": "921:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2066,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "1044:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2065,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1025:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2068,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:49:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2072,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2054,
                        "src": "1113:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2069,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2389,
                        "src": "1085:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2093",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 326,
                      "src": "1085:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:44:9"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2076,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2050,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2076,
                  "src": "814:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2052,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2076,
                  "src": "834:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2054,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2076,
                  "src": "856:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "813:67:9"
            },
            "returnParameters": {
              "id": 2056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:9"
            },
            "scope": 2093,
            "src": "801:336:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2083,
              "nodeType": "Block",
              "src": "1296:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2081,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2043,
                    "src": "1313:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2080,
                  "id": 2082,
                  "nodeType": "Return",
                  "src": "1306:12:9"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2084,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:9"
            },
            "returnParameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2079,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2084,
                  "src": "1281:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2078,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1280:15:9"
            },
            "scope": 2093,
            "src": "1242:83:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2091,
              "nodeType": "Block",
              "src": "1490:31:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2089,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2045,
                    "src": "1507:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2088,
                  "id": 2090,
                  "nodeType": "Return",
                  "src": "1500:14:9"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2092,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:2:9"
            },
            "returnParameters": {
              "id": 2088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2087,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2092,
                  "src": "1475:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2086,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:15:9"
            },
            "scope": 2093,
            "src": "1434:87:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2094,
        "src": "285:1239:9"
      }
    ],
    "src": "0:1525:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2093
      ]
    },
    "id": 2094,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2037,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "id": 2038,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:9"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2039,
        "nodeType": "ImportDirective",
        "scope": 2094,
        "sourceUnit": 1876,
        "src": "60:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2040,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1875,
              "src": "311:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1875",
                "typeString": "contract ERC721"
              }
            },
            "id": 2041,
            "nodeType": "InheritanceSpecifier",
            "src": "311:6:9"
          }
        ],
        "contractDependencies": [
          142,
          1875,
          1885,
          1988
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol",
        "fullyImplemented": true,
        "id": 2093,
        "linearizedBaseContracts": [
          2093,
          1875,
          1988,
          142,
          1885
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2043,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2093,
            "src": "343:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2042,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "343:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2045,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2093,
            "src": "390:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2044,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "390:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2048,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2093,
            "src": "679:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2046,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "679:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2047,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "735:10:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2075,
              "nodeType": "Block",
              "src": "888:249:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2057,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2043,
                      "src": "899:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2058,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "907:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "899:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2060,
                  "nodeType": "ExpressionStatement",
                  "src": "899:12:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2061,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2045,
                      "src": "921:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2062,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2052,
                      "src": "931:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "921:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2064,
                  "nodeType": "ExpressionStatement",
                  "src": "921:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2066,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "1044:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2065,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1025:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2068,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:49:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2072,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2054,
                        "src": "1113:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2069,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2389,
                        "src": "1085:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2093",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 326,
                      "src": "1085:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:44:9"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2076,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2050,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2076,
                  "src": "814:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2052,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2076,
                  "src": "834:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2054,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2076,
                  "src": "856:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "813:67:9"
            },
            "returnParameters": {
              "id": 2056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:9"
            },
            "scope": 2093,
            "src": "801:336:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2083,
              "nodeType": "Block",
              "src": "1296:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2081,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2043,
                    "src": "1313:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2080,
                  "id": 2082,
                  "nodeType": "Return",
                  "src": "1306:12:9"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2084,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:9"
            },
            "returnParameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2079,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2084,
                  "src": "1281:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2078,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1280:15:9"
            },
            "scope": 2093,
            "src": "1242:83:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2091,
              "nodeType": "Block",
              "src": "1490:31:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2089,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2045,
                    "src": "1507:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2088,
                  "id": 2090,
                  "nodeType": "Return",
                  "src": "1500:14:9"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2092,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:2:9"
            },
            "returnParameters": {
              "id": 2088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2087,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2092,
                  "src": "1475:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2086,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:15:9"
            },
            "scope": 2093,
            "src": "1434:87:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2094,
        "src": "285:1239:9"
      }
    ],
    "src": "0:1525:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-09-13T03:36:11.916Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "isMinter(address)": {
        "details": "Checks if minter isWhitelisted()"
      },
      "isWhitelisted(address)": {
        "details": "Checks Registry contract for whitelisted status",
        "params": {
          "target": "The address to check"
        }
      },
      "mint(string,string,uint48,uint48,uint48)": {
        "details": "Function to mint tokens.",
        "return": "tokenId"
      },
      "mintWithTokenURI(string,string,uint48,uint48,uint48,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause actions on this contract"
      },
      "safeMint(string,string,uint48,uint48,uint48)": {
        "details": "Function to safely mint tokens.",
        "return": "tokenId"
      },
      "safeMint(string,string,uint48,uint48,uint48,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check."
        },
        "return": "tokenId"
      },
      "safeMintWithTokenURI(string,string,uint48,uint48,uint48,string)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots on      We're not grabbing this from the Registry in case the user has private"
      },
      "tokenMinterPropertyNames(address,string)": {
        "details": "Look up all Property Names a Minter has tokenized on a content ID"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls.",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause the smart contract."
      },
      "updateRegistryAddress(address)": {
        "details": "Update address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(uint256)": {
        "notice": "Customized for Microsponsors"
      },
      "safeMintWithTokenURI(string,string,uint48,uint48,uint48,string)": {
        "notice": "Customized for Microsponsors from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol"
      },
      "unpause()": {
        "notice": "This is public rather than external so it can be called by  derived contracts."
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol"
  }
}