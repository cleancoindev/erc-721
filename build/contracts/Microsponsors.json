{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "auctionEndTime",
          "type": "uint32"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "auctionEndTime",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        }
      ],
      "name": "tokenMinterPropertyNames",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "auctionEndTime",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "auctionEndTime",
          "type": "uint32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "auctionEndTime",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "safeMintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "propertyName",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"auctionEndTime\",\"type\":\"uint32\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"auctionEndTime\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"tokenMinterPropertyNames\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"auctionEndTime\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"auctionEndTime\",\"type\":\"uint32\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"auctionEndTime\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"propertyName\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"isMinter(address)\":{\"details\":\"Checks if minter isWhitelisted()\"},\"isWhitelisted(address)\":{\"details\":\"Checks Registry contract for whitelisted status\",\"params\":{\"target\":\"The address to check\"}},\"mint(string,bytes32,uint32,uint32,uint32)\":{\"details\":\"Function to mint tokens.\",\"return\":\"tokenId\"},\"mintWithTokenURI(string,bytes32,uint32,uint32,uint32,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause actions on this contract\"},\"safeMint(string,bytes32,uint32,uint32,uint32)\":{\"details\":\"Function to safely mint tokens.\",\"return\":\"tokenId\"},\"safeMint(string,bytes32,uint32,uint32,uint32,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\"},\"return\":\"tokenId\"},\"safeMintWithTokenURI(string,bytes32,uint32,uint32,uint32,string)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots on      We're not grabbing this from the Registry in case the user has private\"},\"tokenMinterPropertyNames(address,string)\":{\"details\":\"Look up all Property Names a Minter has tokenized on a content ID\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls.\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause the smart contract.\"},\"updateRegistryAddress(address)\":{\"details\":\"Update address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}}}},\"userdoc\":{\"methods\":{\"burn(uint256)\":{\"notice\":\"Customized for Microsponsors\"},\"safeMintWithTokenURI(string,bytes32,uint32,uint32,uint32,string)\":{\"notice\":\"Customized for Microsponsors from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol\"},\"unpause()\":{\"notice\":\"This is public rather than external so it can be called by  derived contracts.\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0xa567fc822e2a4e729a7b9ced209948dc558e8027e3569f999b45c025e1c46015\",\"urls\":[\"bzz-raw://bba4b31cfb6c7bd23c9533517dd8ed8040aac33ef9b765161394f9d38a19b3bb\",\"dweb:/ipfs/QmeB58sYSd8exbEHZdxUz8LUsNZ7Gro251vTPP59P9enVV\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0x3a7de85066f743d397f8b6f5a9a07ada0b0b60ac3b62441be14112a2c6b94306\",\"urls\":[\"bzz-raw://f4917a4e90595f44ce1e86179981e2532630452a9c4973ac06dfa154cd7966e6\",\"dweb:/ipfs/QmaFEK1GEV6hQN3WjDULRsDXQwJvDterEMJA6u5bjVHdhC\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "285:1239:9:-;;;3483:5:3;3462:26;;;;;;;;;;;;;;;;;;;;801:336:9;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:336:9;;;;;;;;;;;;;;;;;;;;;;;;720:40:2;387:10;739:20;;720:18;;;:40;;:::i;:::-;4538::3;4410:10;4557:20;;4538:18;;;:40;;:::i;:::-;4631:12;:10;;;:12;;:::i;:::-;4623:5;;:20;;;;;;;;;;;;;;;;;;907:4:9;899:5;:12;;;;;;;;;;;;:::i;:::-;;931:6;921:7;:16;;;;;;;;;;;;:::i;:::-;;1025:49;735:10;1044:29;;1025:18;;;:49;;:::i;:::-;1085:44;1113:15;1085:27;;;;;:44;;:::i;:::-;801:336;;;285:1239;;1444:190:2;1534:10;1519:25;;:11;:25;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1623:4;1587:20;:33;1608:11;1587:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1444:190;:::o;5115:90:3:-;5160:7;5187:10;5180:17;;5115:90;:::o;6150:144::-;5757:5;;;;;;;;;;;5741:21;;:12;:10;;;:12;;:::i;:::-;:21;;;5720:95;;;;;;;;;;;;;;;;;;;;;;6276:10;6248:8;;:39;;;;;;;;;;;;;;;;;;6150:144;:::o;285:1239:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;840:1;829:9;825:17;819:24;863:18;855:6;852:30;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;1071:18;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1493:74;;1600:66;1596:1;1591:3;1587:11;1580:87;1695:2;1690:3;1686:12;1679:19;;1486:218;;;;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1866:74;;1973:66;1969:1;1964:3;1960:11;1953:87;2068:2;2063:3;2059:12;2052:19;;1859:218;;;;2085:407;;2276:2;2265:9;2261:18;2253:26;;2326:9;2320:4;2316:20;2312:1;2301:9;2297:17;2290:47;2351:131;2477:4;2351:131;;;2343:139;;2247:245;;;;2499:407;;2690:2;2679:9;2675:18;2667:26;;2740:9;2734:4;2730:20;2726:1;2715:9;2711:17;2704:47;2765:131;2891:4;2765:131;;;2757:139;;2661:245;;;;2913:256;;2975:2;2969:9;2959:19;;3013:4;3005:6;3001:17;3112:6;3100:10;3097:22;3076:18;3064:10;3061:34;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3153:10;3149:2;3142:22;2953:216;;;;;3176:322;;3320:18;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;3419:4;3415:9;3408:4;3400:6;3396:17;3392:33;3384:41;;3483:4;3477;3473:15;3465:23;;3243:255;;;;3506:163;;3621:6;3616:3;3609:19;3658:4;3653:3;3649:14;3634:29;;3602:67;;;;;3677:91;;3739:24;3757:5;3739:24;;;3728:35;;3722:46;;;;3775:121;;3848:42;3841:5;3837:54;3826:65;;3820:76;;;;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4066:1;4061:3;4057:11;4051:18;4047:1;4042:3;4038:11;4031:39;4012:2;4009:1;4005:10;4000:15;;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;285:1239:9;;;;;;;",
  "deployedSourceMap": "285:1239:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;285:1239:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1242:83:9;;;:::i;:::-;;;;;;;;;;;;;;;;22110:236:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;21275:550;;;;;;;;;;;;;;;;:::i;:::-;;18491:98;;;:::i;:::-;;;;;;;;;;;;;;;;23909:561;;;;;;;;;;;;;;;;:::i;:::-;;6462:120;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;33330:128;;;:::i;:::-;;25119:134;;;;;;;;;;;;;;;;:::i;:::-;;31256:230;;;;;;;;;;;;;;;;:::i;:::-;;8929:566;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3462:26;;;:::i;:::-;;;;;;;;;;;;;;;;19275:280;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18798:258;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9656:599;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;17952:406;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1093:32;;;:::i;:::-;;;;;;;;;;;;;;;;33072:80;;;:::i;:::-;;19958:867;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1024:20;;;:::i;:::-;;;;;;;;;;;;;;;;8197:643;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1434:87:9;;;:::i;:::-;;;;;;;;;;;;;;;;22639:309:3;;;;;;;;;;;;;;;;:::i;:::-;;17537:330;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6937:108;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7454:558;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;25975:594;;;;;;;;;;;;;;;;:::i;:::-;;6150:144;;;;;;;;;;;;;;;;:::i;:::-;;14014:231;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10619:651;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;16690:627;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;23287:185;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5839:167;;;;;;;;;;;;;;;;:::i;:::-;;917:133:2;987:4;1010:20;:33;1031:11;1010:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1003:40;;917:133;;;:::o;1242:83:9:-;1281:13;1313:5;1306:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1242:83;:::o;22110:236:3:-;22169:7;22210:16;22218:7;22210;:16::i;:::-;22189:107;;;;;;;;;;;;;;;;;;;;;;22314:15;:24;22330:7;22314:24;;;;;;;;;;;;;;;;;;;;;22307:31;;22110:236;;;:::o;21275:550::-;6765:27;6779:12;:10;:12::i;:::-;6765:13;:27::i;:::-;6744:107;;;;;;;;;;;;;;;;;;;;;;32828:6;;;;;;;;;;;32827:7;32819:16;;;;;;21397:18;21418:16;21426:7;21418;:16::i;:::-;21397:37;;21472:10;21466:16;;:2;:16;;;;21445:92;;;;;;;;;;;;;;;;;;;;;;21585:10;21569:26;;:12;:10;:12::i;:::-;:26;;;:72;;;;21599:42;21616:10;21628:12;:10;:12::i;:::-;21599:16;:42::i;:::-;21569:72;21548:181;;;;;;;;;;;;;;;;;;;;;;21767:2;21740:15;:24;21756:7;21740:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;21809:7;21805:2;21784:33;;21793:10;21784:33;;;;;;;;;;;;32845:1;21275:550;;:::o;18491:98::-;18535:7;18562:19;:9;:17;:19::i;:::-;18555:26;;18491:98;:::o;23909:561::-;32828:6;;;;;;;;;;;32827:7;32819:16;;;;;;24047:41;24066:12;:10;:12::i;:::-;24080:7;24047:18;:41::i;:::-;24026:137;;;;;;;;;;;;;;;;;;;;;;24195:19;24209:4;24195:13;:19::i;:::-;24174:118;;;;;;;;;;;;;;;;;;;;;;24324:17;24338:2;24324:13;:17::i;:::-;24303:116;;;;;;;;;;;;;;;;;;;;;;24430:32;24444:4;24450:2;24454:7;24430:13;:32::i;:::-;23909:561;;;:::o;6462:120::-;6522:4;6545:8;;;;;;;;;;;:22;;;6568:6;6545:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6545:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6545:30:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6545:30:3;;;;;;;;;6538:37;;6462:120;;;:::o;33330:128::-;5757:5;;;;;;;;;;;5741:21;;:12;:10;:12::i;:::-;:21;;;5720:95;;;;;;;;;;;;;;;;;;;;;;32969:6;;;;;;;;;;;32961:15;;;;;;33446:5;33437:6;;:14;;;;;;;;;;;;;;;;;;33330:128::o;25119:134::-;25206:39;25223:4;25229:2;25233:7;25206:39;;;;;;;;;;;;:16;:39::i;:::-;25119:134;;;:::o;31256:230::-;32828:6;;;;;;;;;;;32827:7;32819:16;;;;;;31340:41;31359:12;:10;:12::i;:::-;31373:7;31340:18;:41::i;:::-;31319:134;;;;;;;;;;;;;;;;;;;;;;31464:14;31470:7;31464:5;:14::i;:::-;31256:230;:::o;8929:566::-;9170:7;7218:22;7227:12;:10;:12::i;:::-;7218:8;:22::i;:::-;7197:122;;;;;;;;;;;;;;;;;;;;;;32828:6;;;;;;;;;;;32827:7;32819:16;;;;;;9215:47;9232:9;9243;9254:7;9215:16;:47::i;:::-;9194:119;;;;;;;;;;;;;;;;;;;;;;9324:15;9342:23;9352:12;:10;:12::i;:::-;9342:9;:23::i;:::-;9324:41;;9375:87;9393:7;9402:9;9413:12;9427:9;9438:7;9447:14;9375:17;:87::i;:::-;9480:7;9473:14;;;8929:566;;;;;;;:::o;3462:26::-;;;;;;;;;;;;;:::o;19275:280::-;19330:7;19350:18;19371:11;:20;19383:7;19371:20;;;;;;;;;;;;;;;;;;;;;19350:41;;19444:1;19422:24;;:10;:24;;;;19401:118;;;;;;;;;;;;;;;;;;;;;;19537:10;19530:17;;;19275:280;;;:::o;18798:258::-;18858:7;18921:1;18899:24;;:10;:24;;;;18878:113;;;;;;;;;;;;;;;;;;;;;;19009:39;:17;:29;19027:10;19009:29;;;;;;;;;;;;;;;:37;:39::i;:::-;19002:46;;18798:258;;;:::o;9656:599::-;9924:7;7218:22;7227:12;:10;:12::i;:::-;7218:8;:22::i;:::-;7197:122;;;;;;;;;;;;;;;;;;;;;;32828:6;;;;;;;;;;;32827:7;32819:16;;;;;;9969:47;9986:9;9997;10008:7;9969:16;:47::i;:::-;9948:119;;;;;;;;;;;;;;;;;;;;;;10078:15;10096:29;10106:12;:10;:12::i;:::-;10120:4;10096:9;:29::i;:::-;10078:47;;10135:87;10153:7;10162:9;10173:12;10187:9;10198:7;10207:14;10135:17;:87::i;:::-;10240:7;10233:14;;;9656:599;;;;;;;;:::o;17952:406::-;18074:16;18103:29;18135:27;:35;18163:6;18135:35;;;;;;;;;;;;;;;18171:9;;18135:46;;;;;;;;;;;;;;;;;;;;;18103:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18191:18;18226:1;:8;18212:23;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18212:23:3;;;;18191:44;;18251:6;18260:1;18251:10;;18246:86;18267:1;:8;18263:1;:12;18246:86;;;18304:1;18306;18304:4;;;;;;;;;;;;;;:17;;;18296:1;18298;18296:4;;;;;;;;;;;;;:25;;;;;18277:3;;;;;;;18246:86;;;;18349:1;18342:8;;;;17952:406;;;;;:::o;1093:32::-;;;;;;;;;;;;;:::o;33072:80::-;5757:5;;;;;;;;;;;5741:21;;:12;:10;:12::i;:::-;:21;;;5720:95;;;;;;;;;;;;;;;;;;;;;;32828:6;;;;;;;;;;;32827:7;32819:16;;;;;;33141:4;33132:6;;:13;;;;;;;;;;;;;;;;;;33072:80::o;19958:867::-;20023:16;20051:18;20072:21;20082:10;20072:9;:21::i;:::-;20051:42;;20122:1;20108:10;:15;20104:715;;;20197:1;20183:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20183:16:3;;;;20176:23;;;;;20104:715;20230:23;20270:10;20256:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20256:25:3;;;;20230:51;;20295:19;20317:13;:11;:13::i;:::-;20295:35;;20344:19;20366:1;20344:23;;20521:15;20566:1;20556:11;;20551:230;20580:11;20569:7;:22;20551:230;;20650:10;20626:34;;:11;:20;20638:7;20626:20;;;;;;;;;;;;;;;;;;;;;:34;;;20622:145;;;20706:7;20684:6;20691:11;20684:19;;;;;;;;;;;;;:29;;;;;20735:13;;;;;;;20622:145;20593:9;;;;;;;20551:230;;;20802:6;20795:13;;;;;;;19958:867;;;;:::o;1024:20::-;;;;;;;;;;;;;:::o;8197:643::-;8478:7;7218:22;7227:12;:10;:12::i;:::-;7218:8;:22::i;:::-;7197:122;;;;;;;;;;;;;;;;;;;;;;32828:6;;;;;;;;;;;32827:7;32819:16;;;;;;8523:47;8540:9;8551;8562:7;8523:16;:47::i;:::-;8502:119;;;;;;;;;;;;;;;;;;;;;;8632:15;8650:19;8656:12;:10;:12::i;:::-;8650:5;:19::i;:::-;8632:37;;8679:87;8697:7;8706:9;8717:12;8731:9;8742:7;8751:14;8679:17;:87::i;:::-;8776:31;8789:7;8798:8;8776:12;:31::i;:::-;8825:7;8818:14;;;8197:643;;;;;;;;:::o;1434:87:9:-;1475:13;1507:7;1500:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:87;:::o;22639:309:3:-;6765:27;6779:12;:10;:12::i;:::-;6765:13;:27::i;:::-;6744:107;;;;;;;;;;;;;;;;;;;;;;32828:6;;;;;;;;;;;32827:7;32819:16;;;;;;22783:12;:10;:12::i;:::-;22777:18;;:2;:18;;;;22769:56;;;;;;;;;;;;;;;;;;;;;;22875:8;22836:18;:32;22855:12;:10;:12::i;:::-;22836:32;;;;;;;;;;;;;;;:36;22869:2;22836:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;22927:2;22898:42;;22913:12;:10;:12::i;:::-;22898:42;;;22931:8;22898:42;;;;;;;;;;;;;;;22639:309;;:::o;17537:330::-;17607:15;17635:26;17664:24;:32;17689:6;17664:32;;;;;;;;;;;;;;;17635:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17706:17;17739:1;:8;17726:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17706:42;;17764:6;17773:1;17764:10;;17759:82;17780:1;:8;17776:1;:12;17759:82;;;17816:1;17818;17816:4;;;;;;;;;;;;;;:14;;;17809:1;17811;17809:4;;;;;;;;;;;;;:21;;;;17790:3;;;;;;;17759:82;;;;17858:1;17851:8;;;;17537:330;;;:::o;6937:108::-;6993:4;7016:22;7030:7;7016:13;:22::i;:::-;7009:29;;6937:108;;;:::o;7454:558::-;7691:7;7218:22;7227:12;:10;:12::i;:::-;7218:8;:22::i;:::-;7197:122;;;;;;;;;;;;;;;;;;;;;;32828:6;;;;;;;;;;;32827:7;32819:16;;;;;;7736:47;7753:9;7764;7775:7;7736:16;:47::i;:::-;7715:119;;;;;;;;;;;;;;;;;;;;;;7845:15;7863:19;7869:12;:10;:12::i;:::-;7863:5;:19::i;:::-;7845:37;;7892:87;7910:7;7919:9;7930:12;7944:9;7955:7;7964:14;7892:17;:87::i;:::-;7997:7;7990:14;;;7454:558;;;;;;;:::o;25975:594::-;32828:6;;;;;;;;;;;32827:7;32819:16;;;;;;26136:19;26150:4;26136:13;:19::i;:::-;26115:118;;;;;;;;;;;;;;;;;;;;;;26265:17;26279:2;26265:13;:17::i;:::-;26244:116;;;;;;;;;;;;;;;;;;;;;;26392:41;26411:12;:10;:12::i;:::-;26425:7;26392:18;:41::i;:::-;26371:137;;;;;;;;;;;;;;;;;;;;;;26519:42;26537:4;26543:2;26547:7;26556:4;26519:17;:42::i;:::-;25975:594;;;;:::o;6150:144::-;5757:5;;;;;;;;;;;5741:21;;:12;:10;:12::i;:::-;:21;;;5720:95;;;;;;;;;;;;;;;;;;;;;;6276:10;6248:8;;:39;;;;;;;;;;;;;;;;;;6150:144;:::o;14014:231::-;14072:13;14119:16;14127:7;14119;:16::i;:::-;14098:102;;;;;;;;;;;;;;;;;;;;;;14218:10;:19;14229:7;14218:19;;;;;;;;;;;14211:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14014:231;;;:::o;10619:651::-;10904:7;7218:22;7227:12;:10;:12::i;:::-;7218:8;:22::i;:::-;7197:122;;;;;;;;;;;;;;;;;;;;;;32828:6;;;;;;;;;;;32827:7;32819:16;;;;;;10949:47;10966:9;10977;10988:7;10949:16;:47::i;:::-;10928:119;;;;;;;;;;;;;;;;;;;;;;11058:15;11076:23;11086:12;:10;:12::i;:::-;11076:9;:23::i;:::-;11058:41;;11109:87;11127:7;11136:9;11147:12;11161:9;11172:7;11181:14;11109:17;:87::i;:::-;11206:31;11219:7;11228:8;11206:12;:31::i;:::-;11255:7;11248:14;;;10619:651;;;;;;;;:::o;16690:627::-;16766:14;16794:23;16831:20;16865:16;16895:14;16948:16;16956:7;16948;:16::i;:::-;16927:111;;;;;;;;;;;;;;;;;;;;;;17070:16;:25;17087:7;17070:25;;;;;;;;;;;:32;;;;;;;;;;;;17116:16;:25;17133:7;17116:25;;;;;;;;;;;:35;;17165:16;:25;17182:7;17165:25;;;;;;;;;;;:38;;;17217:16;:25;17234:7;17217:25;;;;;;;;;;;:35;;;;;;;;;;;;17266:16;:25;17283:7;17266:25;;;;;;;;;;;:33;;;;;;;;;;;;17049:260;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16690:627;;;;;;;:::o;23287:185::-;23396:4;23424:18;:30;23443:10;23424:30;;;;;;;;;;;;;;;:40;23455:8;23424:40;;;;;;;;;;;;;;;;;;;;;;;;;23417:47;;23287:185;;;;:::o;5839:167::-;5757:5;;;;;;;;;;;5741:21;;:12;:10;:12::i;:::-;:21;;;5720:95;;;;;;;;;;;;;;;;;;;;;;5955:1;5935:22;;:8;:22;;;5931:69;;5981:8;5973:5;;:16;;;;;;;;;;;;;;;;;;5931:69;5839:167;:::o;27784:165::-;27841:4;27858:18;27879:11;:20;27891:7;27879:20;;;;;;;;;;;;;;;;;;;;;27858:41;;27939:1;27917:24;;:10;:24;;;;27910:31;;;27784:165;;;:::o;5115:90::-;5160:7;5187:10;5180:17;;5115:90;:::o;1061:112:1:-;1126:7;1152;:14;;;1145:21;;1061:112;;;:::o;28310:411:3:-;28419:4;28461:16;28469:7;28461;:16::i;:::-;28440:107;;;;;;;;;;;;;;;;;;;;;;28558:18;28579:16;28587:7;28579;:16::i;:::-;28558:37;;28626:10;28615:21;;:7;:21;;;:56;;;;28664:7;28640:31;;:20;28652:7;28640:11;:20::i;:::-;:31;;;28615:56;:97;;;;28675:37;28692:10;28704:7;28675:16;:37::i;:::-;28615:97;28607:106;;;28310:411;;;;:::o;29098:518::-;29225:4;29205:24;;:16;29213:7;29205;:16::i;:::-;:24;;;29184:112;;;;;;;;;;;;;;;;;;;;;;29342:1;29328:16;;:2;:16;;;;29307:99;;;;;;;;;;;;;;;;;;;;;;29417:23;29432:7;29417:14;:23::i;:::-;29451:35;:17;:23;29469:4;29451:23;;;;;;;;;;;;;;;:33;:35::i;:::-;29496:33;:17;:21;29514:2;29496:21;;;;;;;;;;;;;;;:31;:33::i;:::-;29563:2;29540:11;:20;29552:7;29540:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;29600:7;29596:2;29581:27;;29590:4;29581:27;;;;;;;;;;;;29098:518;;;:::o;32538:92::-;32590:32;32596:16;32604:7;32596;:16::i;:::-;32614:7;32590:5;:32::i;:::-;32538:92;:::o;14303:446::-;14441:4;14479:8;;;;;;;;;;;:38;;;14518:9;14479:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14479:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14479:49:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14479:49:3;;;;;;;;;14458:142;;;;;;;;;;;;;;;;;;;;;;14642:9;14632:19;;:7;:19;;;14611:108;;;;;;;;;;;;;;;;;;;;;;14737:4;14730:11;;14303:446;;;;;:::o;11763:136::-;11812:7;11832:15;11850:17;11860:2;11850:17;;;;;;;;;;;;:9;:17::i;:::-;11832:35;;11884:7;11877:14;;;11763:136;;;:::o;15640:1043::-;15883:16;15891:7;15883;:16::i;:::-;15862:99;;;;;;;;;;;;;;;;;;;;;;15972:25;;:::i;:::-;16000:286;;;;;;;;16039:12;:10;:12::i;:::-;16000:286;;;;;;16084:9;16000:286;;;;16130:12;16000:286;;;;16175:9;16000:286;;;;;;16215:7;16000:286;;;;;;16260:14;16000:286;;;;;15972:314;;16325:9;16297:16;:25;16314:7;16297:25;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16350;16377:9;16350:26;:37::i;:::-;16345:142;;16403:24;:38;16428:12;:10;:12::i;:::-;16403:38;;;;;;;;;;;;;;;16448:26;;;;;;;;16464:9;16448:26;;;16403:73;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16403:73:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;16345:142;16502:54;16532:9;16543:12;16502:29;:54::i;:::-;16497:179;;16572:27;:41;16600:12;:10;:12::i;:::-;16572:41;;;;;;;;;;;;;;;16614:9;16572:52;;;;;;;;;;;;;;;;;;;;16631:32;;;;;;;;16650:12;16631:32;;;16572:93;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16572::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16497:179;15640:1043;;;;;;;:::o;12463:309::-;12531:7;12551:15;12569:9;12575:2;12569:5;:9::i;:::-;12551:27;;12610:53;12641:1;12645:2;12649:7;12658:4;12610:22;:53::i;:::-;12589:150;;;;;;;;;;;;;;;;;;;;;;12757:7;12750:14;;;12463:309;;;;:::o;12958:366::-;13003:7;13045:1;13031:16;;:2;:16;;;;13023:61;;;;;;;;;;;;;;;;;;;;;;13095:21;:9;:19;:21::i;:::-;13126:15;13144:19;:9;:17;:19::i;:::-;13126:37;;13197:2;13174:11;:20;13186:7;13174:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13209:33;:17;:21;13227:2;13209:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13283:7;13279:2;13258:33;;13275:1;13258:33;;;;;;;;;;;;13309:7;13302:14;;;12958:366;;;:::o;13593:221::-;13692:16;13700:7;13692;:16::i;:::-;13671:99;;;;;;;;;;;;;;;;;;;;;;13803:3;13781:10;:19;13792:7;13781:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;13593:221;;:::o;27273:316::-;27394:32;27408:4;27414:2;27418:7;27394:13;:32::i;:::-;27458:47;27481:4;27487:2;27491:7;27500:4;27458:22;:47::i;:::-;27437:144;;;;;;;;;;;;;;;;;;;;;;27273:316;;;;:::o;30723:173::-;30823:1;30787:38;;:15;:24;30803:7;30787:24;;;;;;;;;;;;;;;;;;;;;:38;;;30783:106;;30876:1;30841:15;:24;30857:7;30841:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;30783:106;30723:173;:::o;1274:108:1:-;1354:21;1373:1;1354:7;:14;;;:18;;:21;;;;:::i;:::-;1337:7;:14;;:38;;;;1274:108;:::o;1179:89::-;1260:1;1242:7;:14;;;:19;;;;;;;;;;;1179:89;:::o;31760:597:3:-;31873:10;31853:30;;:16;31861:7;31853;:16::i;:::-;:30;;;31832:114;;;;;;;;;;;;;;;;;;;;;;31957:23;31972:7;31957:14;:23::i;:::-;31991:41;:17;:29;32009:10;31991:29;;;;;;;;;;;;;;;:39;:41::i;:::-;32073:1;32042:11;:20;32054:7;32042:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;32164:1;32133:10;:19;32144:7;32133:19;;;;;;;;;;;32127:33;;;;;;;;;;;;;;;;:38;32123:95;;32188:10;:19;32199:7;32188:19;;;;;;;;;;;;32181:26;;;;:::i;:::-;32123:95;32267:16;:25;32284:7;32267:25;;;;;;;;;;;;32260:32;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32341:7;32337:1;32308:41;;32317:10;32308:41;;;;;;;;;;;;31760:597;;:::o;14756:413::-;14855:4;14872:26;14901:24;:36;14926:10;14901:36;;;;;;;;;;;;;;;14872:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14947:15;14965:5;14947:23;;14985:6;14994:1;14985:10;;14980:155;15001:1;:8;14997:1;:12;14980:155;;;15034:39;15047:9;15058:1;15060;15058:4;;;;;;;;;;;;;;:14;;;15034:12;:39::i;:::-;15030:95;;;15106:4;15093:17;;15030:95;15011:3;;;;;;;14980:155;;;;15152:10;15145:17;;;;14756:413;;;:::o;15176:457::-;15308:4;15325:29;15357:27;:39;15385:10;15357:39;;;;;;;;;;;;;;;15397:9;15357:50;;;;;;;;;;;;;;;;;;;;15325:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15417:15;15435:5;15417:23;;15455:6;15464:1;15455:10;;15450:149;15471:1;:8;15467:1;:12;15450:149;;;15520:1;15522;15520:4;;;;;;;;;;;;;;:17;;;15504:12;:33;15500:89;;;15570:4;15557:17;;15500:89;15481:3;;;;;;;15450:149;;;;15616:10;15609:17;;;;15176:457;;;;:::o;30204:357::-;30332:4;30358:15;:2;:13;;;:15::i;:::-;30353:58;;30396:4;30389:11;;;;30353:58;30421:13;30453:2;30437:36;;;30474:12;:10;:12::i;:::-;30488:4;30494:7;30503:4;30437:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30437:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30437:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;30437:71:3;;;;;;;;;30421:87;;1347:10;30536:16;;30526:26;;;:6;:26;;;;30518:35;;;30204:357;;;;;;;:::o;1276:134:11:-;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1353:50;;1276:134;;;;:::o;33492:230:3:-;33617:4;33709:1;33691:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;33691:21:3;;;33681:32;;;;;;33673:1;33655:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;33655:21:3;;;33645:32;;;;;;:68;33637:78;;33492:230;;;;:::o;559:797:0:-;619:4;1064:16;1090:19;1112:66;1090:88;;;;1279:7;1267:20;1255:32;;1318:3;1306:15;;:8;:15;;:42;;;;;1337:11;1325:8;:23;;1306:42;1298:51;;;;559:797;;;:::o;1846:187:11:-;1932:7;1964:1;1959;:6;;1967:12;1951:29;;;;;;;;;;;;;;;;;;;;;;;;;1990:9;2006:1;2002;:5;1990:17;;2025:1;2018:8;;;1846:187;;;;;:::o;285:1239:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:128;;354:6;348:13;339:22;;366:30;390:5;366:30;;;333:68;;;;;408:130;;488:6;475:20;466:29;;500:33;527:5;500:33;;;460:78;;;;;545:128;;624:6;611:20;602:29;;636:32;662:5;636:32;;;596:77;;;;;680:132;;763:6;757:13;748:22;;775:32;801:5;775:32;;;742:70;;;;;820:440;;921:3;914:4;906:6;902:17;898:27;888:2;;939:1;936;929:12;888:2;976:6;963:20;998:64;1013:48;1054:6;1013:48;;;998:64;;;989:73;;1082:6;1075:5;1068:21;1118:4;1110:6;1106:17;1151:4;1144:5;1140:16;1186:3;1177:6;1172:3;1168:16;1165:25;1162:2;;;1203:1;1200;1193:12;1162:2;1213:41;1247:6;1242:3;1237;1213:41;;;881:379;;;;;;;;1283:336;;;1398:3;1391:4;1383:6;1379:17;1375:27;1365:2;;1416:1;1413;1406:12;1365:2;1449:6;1436:20;1426:30;;1476:18;1468:6;1465:30;1462:2;;;1508:1;1505;1498:12;1462:2;1542:4;1534:6;1530:17;1518:29;;1592:3;1585;1577:6;1573:16;1563:8;1559:31;1556:40;1553:2;;;1609:1;1606;1599:12;1553:2;1358:261;;;;;;1628:442;;1730:3;1723:4;1715:6;1711:17;1707:27;1697:2;;1748:1;1745;1738:12;1697:2;1785:6;1772:20;1807:65;1822:49;1864:6;1822:49;;;1807:65;;;1798:74;;1892:6;1885:5;1878:21;1928:4;1920:6;1916:17;1961:4;1954:5;1950:16;1996:3;1987:6;1982:3;1978:16;1975:25;1972:2;;;2013:1;2010;2003:12;1972:2;2023:41;2057:6;2052:3;2047;2023:41;;;1690:380;;;;;;;;2078:130;;2158:6;2145:20;2136:29;;2170:33;2197:5;2170:33;;;2130:78;;;;;2215:128;;2294:6;2281:20;2272:29;;2306:32;2332:5;2306:32;;;2266:77;;;;;2350:241;;2454:2;2442:9;2433:7;2429:23;2425:32;2422:2;;;2470:1;2467;2460:12;2422:2;2505:1;2522:53;2567:7;2558:6;2547:9;2543:22;2522:53;;;2512:63;;2484:97;2416:175;;;;;2598:366;;;2719:2;2707:9;2698:7;2694:23;2690:32;2687:2;;;2735:1;2732;2725:12;2687:2;2770:1;2787:53;2832:7;2823:6;2812:9;2808:22;2787:53;;;2777:63;;2749:97;2877:2;2895:53;2940:7;2931:6;2920:9;2916:22;2895:53;;;2885:63;;2856:98;2681:283;;;;;;2971:491;;;;3109:2;3097:9;3088:7;3084:23;3080:32;3077:2;;;3125:1;3122;3115:12;3077:2;3160:1;3177:53;3222:7;3213:6;3202:9;3198:22;3177:53;;;3167:63;;3139:97;3267:2;3285:53;3330:7;3321:6;3310:9;3306:22;3285:53;;;3275:63;;3246:98;3375:2;3393:53;3438:7;3429:6;3418:9;3414:22;3393:53;;;3383:63;;3354:98;3071:391;;;;;;3469:721;;;;;3633:3;3621:9;3612:7;3608:23;3604:33;3601:2;;;3650:1;3647;3640:12;3601:2;3685:1;3702:53;3747:7;3738:6;3727:9;3723:22;3702:53;;;3692:63;;3664:97;3792:2;3810:53;3855:7;3846:6;3835:9;3831:22;3810:53;;;3800:63;;3771:98;3900:2;3918:53;3963:7;3954:6;3943:9;3939:22;3918:53;;;3908:63;;3879:98;4036:2;4025:9;4021:18;4008:32;4060:18;4052:6;4049:30;4046:2;;;4092:1;4089;4082:12;4046:2;4112:62;4166:7;4157:6;4146:9;4142:22;4112:62;;;4102:72;;3987:193;3595:595;;;;;;;;4197:360;;;4315:2;4303:9;4294:7;4290:23;4286:32;4283:2;;;4331:1;4328;4321:12;4283:2;4366:1;4383:53;4428:7;4419:6;4408:9;4404:22;4383:53;;;4373:63;;4345:97;4473:2;4491:50;4533:7;4524:6;4513:9;4509:22;4491:50;;;4481:60;;4452:95;4277:280;;;;;;4564:492;;;;4705:2;4693:9;4684:7;4680:23;4676:32;4673:2;;;4721:1;4718;4711:12;4673:2;4756:1;4773:53;4818:7;4809:6;4798:9;4794:22;4773:53;;;4763:63;;4735:97;4891:2;4880:9;4876:18;4863:32;4915:18;4907:6;4904:30;4901:2;;;4947:1;4944;4937:12;4901:2;4975:65;5032:7;5023:6;5012:9;5008:22;4975:65;;;4965:75;;;;4842:204;4667:389;;;;;;5063:366;;;5184:2;5172:9;5163:7;5159:23;5155:32;5152:2;;;5200:1;5197;5190:12;5152:2;5235:1;5252:53;5297:7;5288:6;5277:9;5273:22;5252:53;;;5242:63;;5214:97;5342:2;5360:53;5405:7;5396:6;5385:9;5381:22;5360:53;;;5350:63;;5321:98;5146:283;;;;;;5436:257;;5548:2;5536:9;5527:7;5523:23;5519:32;5516:2;;;5564:1;5561;5554:12;5516:2;5599:1;5616:61;5669:7;5660:6;5649:9;5645:22;5616:61;;;5606:71;;5578:105;5510:183;;;;;5700:239;;5803:2;5791:9;5782:7;5778:23;5774:32;5771:2;;;5819:1;5816;5809:12;5771:2;5854:1;5871:52;5915:7;5906:6;5895:9;5891:22;5871:52;;;5861:62;;5833:96;5765:174;;;;;5946:261;;6060:2;6048:9;6039:7;6035:23;6031:32;6028:2;;;6076:1;6073;6066:12;6028:2;6111:1;6128:63;6183:7;6174:6;6163:9;6159:22;6128:63;;;6118:73;;6090:107;6022:185;;;;;6214:843;;;;;;6393:3;6381:9;6372:7;6368:23;6364:33;6361:2;;;6410:1;6407;6400:12;6361:2;6473:1;6462:9;6458:17;6445:31;6496:18;6488:6;6485:30;6482:2;;;6528:1;6525;6518:12;6482:2;6548:63;6603:7;6594:6;6583:9;6579:22;6548:63;;;6538:73;;6424:193;6648:2;6666:53;6711:7;6702:6;6691:9;6687:22;6666:53;;;6656:63;;6627:98;6756:2;6774:52;6818:7;6809:6;6798:9;6794:22;6774:52;;;6764:62;;6735:97;6863:2;6881:52;6925:7;6916:6;6905:9;6901:22;6881:52;;;6871:62;;6842:97;6970:3;6989:52;7033:7;7024:6;7013:9;7009:22;6989:52;;;6979:62;;6949:98;6355:702;;;;;;;;;7064:1073;;;;;;;7269:3;7257:9;7248:7;7244:23;7240:33;7237:2;;;7286:1;7283;7276:12;7237:2;7349:1;7338:9;7334:17;7321:31;7372:18;7364:6;7361:30;7358:2;;;7404:1;7401;7394:12;7358:2;7424:63;7479:7;7470:6;7459:9;7455:22;7424:63;;;7414:73;;7300:193;7524:2;7542:53;7587:7;7578:6;7567:9;7563:22;7542:53;;;7532:63;;7503:98;7632:2;7650:52;7694:7;7685:6;7674:9;7670:22;7650:52;;;7640:62;;7611:97;7739:2;7757:52;7801:7;7792:6;7781:9;7777:22;7757:52;;;7747:62;;7718:97;7846:3;7865:52;7909:7;7900:6;7889:9;7885:22;7865:52;;;7855:62;;7825:98;7982:3;7971:9;7967:19;7954:33;8007:18;7999:6;7996:30;7993:2;;;8039:1;8036;8029:12;7993:2;8059:62;8113:7;8104:6;8093:9;8089:22;8059:62;;;8049:72;;7933:194;7231:906;;;;;;;;;8144:1075;;;;;;;8350:3;8338:9;8329:7;8325:23;8321:33;8318:2;;;8367:1;8364;8357:12;8318:2;8430:1;8419:9;8415:17;8402:31;8453:18;8445:6;8442:30;8439:2;;;8485:1;8482;8475:12;8439:2;8505:63;8560:7;8551:6;8540:9;8536:22;8505:63;;;8495:73;;8381:193;8605:2;8623:53;8668:7;8659:6;8648:9;8644:22;8623:53;;;8613:63;;8584:98;8713:2;8731:52;8775:7;8766:6;8755:9;8751:22;8731:52;;;8721:62;;8692:97;8820:2;8838:52;8882:7;8873:6;8862:9;8858:22;8838:52;;;8828:62;;8799:97;8927:3;8946:52;8990:7;8981:6;8970:9;8966:22;8946:52;;;8936:62;;8906:98;9063:3;9052:9;9048:19;9035:33;9088:18;9080:6;9077:30;9074:2;;;9120:1;9117;9110:12;9074:2;9140:63;9195:7;9186:6;9175:9;9171:22;9140:63;;;9130:73;;9014:195;8312:907;;;;;;;;;9226:241;;9330:2;9318:9;9309:7;9305:23;9301:32;9298:2;;;9346:1;9343;9336:12;9298:2;9381:1;9398:53;9443:7;9434:6;9423:9;9419:22;9398:53;;;9388:63;;9360:97;9292:175;;;;;9475:173;;9562:46;9604:3;9596:6;9562:46;;;9637:4;9632:3;9628:14;9614:28;;9555:93;;;;;9657:181;;9770:62;9828:3;9820:6;9770:62;;;9756:76;;9749:89;;;;;9847:173;;9934:46;9976:3;9968:6;9934:46;;;10009:4;10004:3;10000:14;9986:28;;9927:93;;;;;10028:113;10111:24;10129:5;10111:24;;;10106:3;10099:37;10093:48;;;10179:690;;10324:54;10372:5;10324:54;;;10391:86;10470:6;10465:3;10391:86;;;10384:93;;10498:56;10548:5;10498:56;;;10574:7;10602:1;10587:260;10612:6;10609:1;10606:13;10587:260;;;10679:6;10673:13;10700:63;10759:3;10744:13;10700:63;;;10693:70;;10780:60;10833:6;10780:60;;;10770:70;;10644:203;10634:1;10631;10627:9;10622:14;;10587:260;;;10591:14;10860:3;10853:10;;10303:566;;;;;;;;10906:896;;11063:60;11117:5;11063:60;;;11136:92;11221:6;11216:3;11136:92;;;11129:99;;11251:3;11293:4;11285:6;11281:17;11276:3;11272:27;11320:62;11376:5;11320:62;;;11402:7;11430:1;11415:348;11440:6;11437:1;11434:13;11415:348;;;11502:9;11496:4;11492:20;11487:3;11480:33;11547:6;11541:13;11569:76;11640:4;11625:13;11569:76;;;11561:84;;11662:66;11721:6;11662:66;;;11652:76;;11751:4;11746:3;11742:14;11735:21;;11472:291;11462:1;11459;11455:9;11450:14;;11415:348;;;11419:14;11776:4;11769:11;;11793:3;11786:10;;11042:760;;;;;;;;;;11841:690;;11986:54;12034:5;11986:54;;;12053:86;12132:6;12127:3;12053:86;;;12046:93;;12160:56;12210:5;12160:56;;;12236:7;12264:1;12249:260;12274:6;12271:1;12268:13;12249:260;;;12341:6;12335:13;12362:63;12421:3;12406:13;12362:63;;;12355:70;;12442:60;12495:6;12442:60;;;12432:70;;12306:203;12296:1;12293;12289:9;12284:14;;12249:260;;;12253:14;12522:3;12515:10;;11965:566;;;;;;;;12539:104;12616:21;12631:5;12616:21;;;12611:3;12604:34;12598:45;;;12650:103;12723:24;12741:5;12723:24;;;12718:3;12711:37;12705:48;;;12760:113;12843:24;12861:5;12843:24;;;12838:3;12831:37;12825:48;;;12880:343;;12990:38;13022:5;12990:38;;;13040:70;13103:6;13098:3;13040:70;;;13033:77;;13115:52;13160:6;13155:3;13148:4;13141:5;13137:16;13115:52;;;13188:29;13210:6;13188:29;;;13183:3;13179:39;13172:46;;12970:253;;;;;;13230:174;13337:61;13392:5;13337:61;;;13332:3;13325:74;13319:85;;;13436:313;;13570:89;13652:6;13647:3;13570:89;;;13563:96;;13671:43;13707:6;13702:3;13695:5;13671:43;;;13736:6;13731:3;13727:16;13720:23;;13556:193;;;;;;13757:347;;13869:39;13902:5;13869:39;;;13920:71;13984:6;13979:3;13920:71;;;13913:78;;13996:52;14041:6;14036:3;14029:4;14022:5;14018:16;13996:52;;;14069:29;14091:6;14069:29;;;14064:3;14060:39;14053:46;;13849:255;;;;;;14111:360;;14241:39;14274:5;14241:39;;;14292:89;14374:6;14369:3;14292:89;;;14285:96;;14386:52;14431:6;14426:3;14419:4;14412:5;14408:16;14386:52;;;14459:6;14454:3;14450:16;14443:23;;14221:250;;;;;;14478:319;;14576:35;14605:5;14576:35;;;14623:61;14677:6;14672:3;14623:61;;;14616:68;;14689:52;14734:6;14729:3;14722:4;14715:5;14711:16;14689:52;;;14762:29;14784:6;14762:29;;;14757:3;14753:39;14746:46;;14556:241;;;;;;14805:465;;14965:67;15029:2;15024:3;14965:67;;;14958:74;;15065:66;15061:1;15056:3;15052:11;15045:87;15166:66;15161:2;15156:3;15152:12;15145:88;15261:2;15256:3;15252:12;15245:19;;14951:319;;;;15279:465;;15439:67;15503:2;15498:3;15439:67;;;15432:74;;15539:66;15535:1;15530:3;15526:11;15519:87;15640:66;15635:2;15630:3;15626:12;15619:88;15735:2;15730:3;15726:12;15719:19;;15425:319;;;;15753:465;;15913:67;15977:2;15972:3;15913:67;;;15906:74;;16013:66;16009:1;16004:3;16000:11;15993:87;16114:66;16109:2;16104:3;16100:12;16093:88;16209:2;16204:3;16200:12;16193:19;;15899:319;;;;16227:465;;16387:67;16451:2;16446:3;16387:67;;;16380:74;;16487:66;16483:1;16478:3;16474:11;16467:87;16588:66;16583:2;16578:3;16574:12;16567:88;16683:2;16678:3;16674:12;16667:19;;16373:319;;;;16701:364;;16861:67;16925:2;16920:3;16861:67;;;16854:74;;16961:66;16957:1;16952:3;16948:11;16941:87;17056:2;17051:3;17047:12;17040:19;;16847:218;;;;17074:465;;17234:67;17298:2;17293:3;17234:67;;;17227:74;;17334:66;17330:1;17325:3;17321:11;17314:87;17435:66;17430:2;17425:3;17421:12;17414:88;17530:2;17525:3;17521:12;17514:19;;17220:319;;;;17548:465;;17708:67;17772:2;17767:3;17708:67;;;17701:74;;17808:66;17804:1;17799:3;17795:11;17788:87;17909:66;17904:2;17899:3;17895:12;17888:88;18004:2;17999:3;17995:12;17988:19;;17694:319;;;;18022:465;;18182:67;18246:2;18241:3;18182:67;;;18175:74;;18282:66;18278:1;18273:3;18269:11;18262:87;18383:66;18378:2;18373:3;18369:12;18362:88;18478:2;18473:3;18469:12;18462:19;;18168:319;;;;18496:364;;18656:67;18720:2;18715:3;18656:67;;;18649:74;;18756:66;18752:1;18747:3;18743:11;18736:87;18851:2;18846:3;18842:12;18835:19;;18642:218;;;;18869:465;;19029:67;19093:2;19088:3;19029:67;;;19022:74;;19129:66;19125:1;19120:3;19116:11;19109:87;19230:66;19225:2;19220:3;19216:12;19209:88;19325:2;19320:3;19316:12;19309:19;;19015:319;;;;19343:465;;19503:67;19567:2;19562:3;19503:67;;;19496:74;;19603:66;19599:1;19594:3;19590:11;19583:87;19704:66;19699:2;19694:3;19690:12;19683:88;19799:2;19794:3;19790:12;19783:19;;19489:319;;;;19817:465;;19977:67;20041:2;20036:3;19977:67;;;19970:74;;20077:66;20073:1;20068:3;20064:11;20057:87;20178:66;20173:2;20168:3;20164:12;20157:88;20273:2;20268:3;20264:12;20257:19;;19963:319;;;;20291:364;;20451:67;20515:2;20510:3;20451:67;;;20444:74;;20551:66;20547:1;20542:3;20538:11;20531:87;20646:2;20641:3;20637:12;20630:19;;20437:218;;;;20664:465;;20824:67;20888:2;20883:3;20824:67;;;20817:74;;20924:66;20920:1;20915:3;20911:11;20904:87;21025:66;21020:2;21015:3;21011:12;21004:88;21120:2;21115:3;21111:12;21104:19;;20810:319;;;;21138:465;;21298:67;21362:2;21357:3;21298:67;;;21291:74;;21398:66;21394:1;21389:3;21385:11;21378:87;21499:66;21494:2;21489:3;21485:12;21478:88;21594:2;21589:3;21585:12;21578:19;;21284:319;;;;21612:465;;21772:67;21836:2;21831:3;21772:67;;;21765:74;;21872:66;21868:1;21863:3;21859:11;21852:87;21973:66;21968:2;21963:3;21959:12;21952:88;22068:2;22063:3;22059:12;22052:19;;21758:319;;;;22086:364;;22246:67;22310:2;22305:3;22246:67;;;22239:74;;22346:66;22342:1;22337:3;22333:11;22326:87;22441:2;22436:3;22432:12;22425:19;;22232:218;;;;22459:465;;22619:67;22683:2;22678:3;22619:67;;;22612:74;;22719:66;22715:1;22710:3;22706:11;22699:87;22820:66;22815:2;22810:3;22806:12;22799:88;22915:2;22910:3;22906:12;22899:19;;22605:319;;;;22933:465;;23093:67;23157:2;23152:3;23093:67;;;23086:74;;23193:66;23189:1;23184:3;23180:11;23173:87;23294:66;23289:2;23284:3;23280:12;23273:88;23389:2;23384:3;23380:12;23373:19;;23079:319;;;;23407:465;;23567:67;23631:2;23626:3;23567:67;;;23560:74;;23667:66;23663:1;23658:3;23654:11;23647:87;23768:66;23763:2;23758:3;23754:12;23747:88;23863:2;23858:3;23854:12;23847:19;;23553:319;;;;23881:364;;24041:67;24105:2;24100:3;24041:67;;;24034:74;;24141:66;24137:1;24132:3;24128:11;24121:87;24236:2;24231:3;24227:12;24220:19;;24027:218;;;;24254:465;;24414:67;24478:2;24473:3;24414:67;;;24407:74;;24514:66;24510:1;24505:3;24501:11;24494:87;24615:66;24610:2;24605:3;24601:12;24594:88;24710:2;24705:3;24701:12;24694:19;;24400:319;;;;24728:465;;24888:67;24952:2;24947:3;24888:67;;;24881:74;;24988:66;24984:1;24979:3;24975:11;24968:87;25089:66;25084:2;25079:3;25075:12;25068:88;25184:2;25179:3;25175:12;25168:19;;24874:319;;;;25202:465;;25362:67;25426:2;25421:3;25362:67;;;25355:74;;25462:66;25458:1;25453:3;25449:11;25442:87;25563:66;25558:2;25553:3;25549:12;25542:88;25658:2;25653:3;25649:12;25642:19;;25348:319;;;;25675:103;25748:24;25766:5;25748:24;;;25743:3;25736:37;25730:48;;;25785:113;25868:24;25886:5;25868:24;;;25863:3;25856:37;25850:48;;;25905:110;25986:23;26003:5;25986:23;;;25981:3;25974:36;25968:47;;;26022:286;;26178:105;26279:3;26270:6;26262;26178:105;;;26171:112;;26300:3;26293:10;;26159:149;;;;;;26315:266;;26461:95;26552:3;26543:6;26461:95;;;26454:102;;26573:3;26566:10;;26442:139;;;;;26588:213;;26706:2;26695:9;26691:18;26683:26;;26720:71;26788:1;26777:9;26773:17;26764:6;26720:71;;;26677:124;;;;;26808:631;;27028:3;27017:9;27013:19;27005:27;;27043:71;27111:1;27100:9;27096:17;27087:6;27043:71;;;27125:72;27193:2;27182:9;27178:18;27169:6;27125:72;;;27208;27276:2;27265:9;27261:18;27252:6;27208:72;;;27328:9;27322:4;27318:20;27313:2;27302:9;27298:18;27291:48;27353:76;27424:4;27415:6;27353:76;;;27345:84;;26999:440;;;;;;;;27446:739;;27692:3;27681:9;27677:19;27669:27;;27707:71;27775:1;27764:9;27760:17;27751:6;27707:71;;;27826:9;27820:4;27816:20;27811:2;27800:9;27796:18;27789:48;27851:78;27924:4;27915:6;27851:78;;;27843:86;;27940:72;28008:2;27997:9;27993:18;27984:6;27940:72;;;28023:70;28089:2;28078:9;28074:18;28065:6;28023:70;;;28104:71;28170:3;28159:9;28155:19;28146:6;28104:71;;;27663:522;;;;;;;;;28192:361;;28360:2;28349:9;28345:18;28337:26;;28410:9;28404:4;28400:20;28396:1;28385:9;28381:17;28374:47;28435:108;28538:4;28529:6;28435:108;;;28427:116;;28331:222;;;;;28560:385;;28740:2;28729:9;28725:18;28717:26;;28790:9;28784:4;28780:20;28776:1;28765:9;28761:17;28754:47;28815:120;28930:4;28921:6;28815:120;;;28807:128;;28711:234;;;;;28952:361;;29120:2;29109:9;29105:18;29097:26;;29170:9;29164:4;29160:20;29156:1;29145:9;29141:17;29134:47;29195:108;29298:4;29289:6;29195:108;;;29187:116;;29091:222;;;;;29320:201;;29432:2;29421:9;29417:18;29409:26;;29446:65;29508:1;29497:9;29493:17;29484:6;29446:65;;;29403:118;;;;;29528:261;;29670:2;29659:9;29655:18;29647:26;;29684:95;29776:1;29765:9;29761:17;29752:6;29684:95;;;29641:148;;;;;29796:301;;29934:2;29923:9;29919:18;29911:26;;29984:9;29978:4;29974:20;29970:1;29959:9;29955:17;29948:47;30009:78;30082:4;30073:6;30009:78;;;30001:86;;29905:192;;;;;30104:407;;30295:2;30284:9;30280:18;30272:26;;30345:9;30339:4;30335:20;30331:1;30320:9;30316:17;30309:47;30370:131;30496:4;30370:131;;;30362:139;;30266:245;;;;30518:407;;30709:2;30698:9;30694:18;30686:26;;30759:9;30753:4;30749:20;30745:1;30734:9;30730:17;30723:47;30784:131;30910:4;30784:131;;;30776:139;;30680:245;;;;30932:407;;31123:2;31112:9;31108:18;31100:26;;31173:9;31167:4;31163:20;31159:1;31148:9;31144:17;31137:47;31198:131;31324:4;31198:131;;;31190:139;;31094:245;;;;31346:407;;31537:2;31526:9;31522:18;31514:26;;31587:9;31581:4;31577:20;31573:1;31562:9;31558:17;31551:47;31612:131;31738:4;31612:131;;;31604:139;;31508:245;;;;31760:407;;31951:2;31940:9;31936:18;31928:26;;32001:9;31995:4;31991:20;31987:1;31976:9;31972:17;31965:47;32026:131;32152:4;32026:131;;;32018:139;;31922:245;;;;32174:407;;32365:2;32354:9;32350:18;32342:26;;32415:9;32409:4;32405:20;32401:1;32390:9;32386:17;32379:47;32440:131;32566:4;32440:131;;;32432:139;;32336:245;;;;32588:407;;32779:2;32768:9;32764:18;32756:26;;32829:9;32823:4;32819:20;32815:1;32804:9;32800:17;32793:47;32854:131;32980:4;32854:131;;;32846:139;;32750:245;;;;33002:407;;33193:2;33182:9;33178:18;33170:26;;33243:9;33237:4;33233:20;33229:1;33218:9;33214:17;33207:47;33268:131;33394:4;33268:131;;;33260:139;;33164:245;;;;33416:407;;33607:2;33596:9;33592:18;33584:26;;33657:9;33651:4;33647:20;33643:1;33632:9;33628:17;33621:47;33682:131;33808:4;33682:131;;;33674:139;;33578:245;;;;33830:407;;34021:2;34010:9;34006:18;33998:26;;34071:9;34065:4;34061:20;34057:1;34046:9;34042:17;34035:47;34096:131;34222:4;34096:131;;;34088:139;;33992:245;;;;34244:407;;34435:2;34424:9;34420:18;34412:26;;34485:9;34479:4;34475:20;34471:1;34460:9;34456:17;34449:47;34510:131;34636:4;34510:131;;;34502:139;;34406:245;;;;34658:407;;34849:2;34838:9;34834:18;34826:26;;34899:9;34893:4;34889:20;34885:1;34874:9;34870:17;34863:47;34924:131;35050:4;34924:131;;;34916:139;;34820:245;;;;35072:407;;35263:2;35252:9;35248:18;35240:26;;35313:9;35307:4;35303:20;35299:1;35288:9;35284:17;35277:47;35338:131;35464:4;35338:131;;;35330:139;;35234:245;;;;35486:407;;35677:2;35666:9;35662:18;35654:26;;35727:9;35721:4;35717:20;35713:1;35702:9;35698:17;35691:47;35752:131;35878:4;35752:131;;;35744:139;;35648:245;;;;35900:407;;36091:2;36080:9;36076:18;36068:26;;36141:9;36135:4;36131:20;36127:1;36116:9;36112:17;36105:47;36166:131;36292:4;36166:131;;;36158:139;;36062:245;;;;36314:407;;36505:2;36494:9;36490:18;36482:26;;36555:9;36549:4;36545:20;36541:1;36530:9;36526:17;36519:47;36580:131;36706:4;36580:131;;;36572:139;;36476:245;;;;36728:407;;36919:2;36908:9;36904:18;36896:26;;36969:9;36963:4;36959:20;36955:1;36944:9;36940:17;36933:47;36994:131;37120:4;36994:131;;;36986:139;;36890:245;;;;37142:407;;37333:2;37322:9;37318:18;37310:26;;37383:9;37377:4;37373:20;37369:1;37358:9;37354:17;37347:47;37408:131;37534:4;37408:131;;;37400:139;;37304:245;;;;37556:407;;37747:2;37736:9;37732:18;37724:26;;37797:9;37791:4;37787:20;37783:1;37772:9;37768:17;37761:47;37822:131;37948:4;37822:131;;;37814:139;;37718:245;;;;37970:407;;38161:2;38150:9;38146:18;38138:26;;38211:9;38205:4;38201:20;38197:1;38186:9;38182:17;38175:47;38236:131;38362:4;38236:131;;;38228:139;;38132:245;;;;38384:407;;38575:2;38564:9;38560:18;38552:26;;38625:9;38619:4;38615:20;38611:1;38600:9;38596:17;38589:47;38650:131;38776:4;38650:131;;;38642:139;;38546:245;;;;38798:407;;38989:2;38978:9;38974:18;38966:26;;39039:9;39033:4;39029:20;39025:1;39014:9;39010:17;39003:47;39064:131;39190:4;39064:131;;;39056:139;;38960:245;;;;39212:407;;39403:2;39392:9;39388:18;39380:26;;39453:9;39447:4;39443:20;39439:1;39428:9;39424:17;39417:47;39478:131;39604:4;39478:131;;;39470:139;;39374:245;;;;39626:407;;39817:2;39806:9;39802:18;39794:26;;39867:9;39861:4;39857:20;39853:1;39842:9;39838:17;39831:47;39892:131;40018:4;39892:131;;;39884:139;;39788:245;;;;40040:213;;40158:2;40147:9;40143:18;40135:26;;40172:71;40240:1;40229:9;40225:17;40216:6;40172:71;;;40129:124;;;;;40260:256;;40322:2;40316:9;40306:19;;40360:4;40352:6;40348:17;40459:6;40447:10;40444:22;40423:18;40411:10;40408:34;40405:62;40402:2;;;40480:1;40477;40470:12;40402:2;40500:10;40496:2;40489:22;40300:216;;;;;40523:321;;40666:18;40658:6;40655:30;40652:2;;;40698:1;40695;40688:12;40652:2;40765:4;40761:9;40754:4;40746:6;40742:17;40738:33;40730:41;;40829:4;40823;40819:15;40811:23;;40589:255;;;;40851:322;;40995:18;40987:6;40984:30;40981:2;;;41027:1;41024;41017:12;40981:2;41094:4;41090:9;41083:4;41075:6;41071:17;41067:33;41059:41;;41158:4;41152;41148:15;41140:23;;40918:255;;;;41180:151;;41266:3;41258:11;;41304:4;41299:3;41295:14;41287:22;;41252:79;;;;41338:157;;41430:3;41422:11;;41468:4;41463:3;41459:14;41451:22;;41416:79;;;;41502:151;;41588:3;41580:11;;41626:4;41621:3;41617:14;41609:22;;41574:79;;;;41660:137;;41769:5;41763:12;41753:22;;41734:63;;;;41804:143;;41919:5;41913:12;41903:22;;41884:63;;;;41954:137;;42063:5;42057:12;42047:22;;42028:63;;;;42098:121;;42191:5;42185:12;42175:22;;42156:63;;;;42226:118;;42316:5;42310:12;42300:22;;42281:63;;;;42351:122;;42445:5;42439:12;42429:22;;42410:63;;;;42480:108;;42578:4;42573:3;42569:14;42561:22;;42555:33;;;;42595:114;;42699:4;42694:3;42690:14;42682:22;;42676:33;;;;42716:108;;42814:4;42809:3;42805:14;42797:22;;42791:33;;;;42832:178;;42962:6;42957:3;42950:19;42999:4;42994:3;42990:14;42975:29;;42943:67;;;;;43019:184;;43155:6;43150:3;43143:19;43192:4;43187:3;43183:14;43168:29;;43136:67;;;;;43212:178;;43342:6;43337:3;43330:19;43379:4;43374:3;43370:14;43355:29;;43323:67;;;;;43399:162;;43513:6;43508:3;43501:19;43550:4;43545:3;43541:14;43526:29;;43494:67;;;;;43570:153;;43675:6;43670:3;43663:19;43712:4;43707:3;43703:14;43688:29;;43656:67;;;;;43732:163;;43847:6;43842:3;43835:19;43884:4;43879:3;43875:14;43860:29;;43828:67;;;;;43904:145;;44040:3;44025:18;;44018:31;;;;;44057:91;;44119:24;44137:5;44119:24;;;44108:35;;44102:46;;;;44155:85;;44228:5;44221:13;44214:21;44203:32;;44197:43;;;;44247:72;;44309:5;44298:16;;44292:27;;;;44326:144;;44398:66;44391:5;44387:78;44376:89;;44370:100;;;;44477:121;;44550:42;44543:5;44539:54;44528:65;;44522:76;;;;44605:72;;44667:5;44656:16;;44650:27;;;;44684:88;;44756:10;44749:5;44745:22;44734:33;;44728:44;;;;44779:169;;44882:61;44937:5;44882:61;;;44869:74;;44863:85;;;;44955:132;;45058:24;45076:5;45058:24;;;45045:37;;45039:48;;;;45095:145;45176:6;45171:3;45166;45153:30;45232:1;45223:6;45218:3;45214:16;45207:27;45146:94;;;;45249:268;45314:1;45321:101;45335:6;45332:1;45329:13;45321:101;;;45411:1;45406:3;45402:11;45396:18;45392:1;45387:3;45383:11;45376:39;45357:2;45354:1;45350:10;45345:15;;45321:101;;;45437:6;45434:1;45431:13;45428:2;;;45502:1;45493:6;45488:3;45484:16;45477:27;45428:2;45298:219;;;;;45525:97;;45613:2;45609:7;45604:2;45597:5;45593:14;45589:28;45579:38;;45573:49;;;;45630:117;45699:24;45717:5;45699:24;;;45692:5;45689:35;45679:2;;45738:1;45735;45728:12;45679:2;45673:74;;45754:111;45820:21;45835:5;45820:21;;;45813:5;45810:32;45800:2;;45856:1;45853;45846:12;45800:2;45794:71;;45872:117;45941:24;45959:5;45941:24;;;45934:5;45931:35;45921:2;;45980:1;45977;45970:12;45921:2;45915:74;;45996:115;46064:23;46081:5;46064:23;;;46057:5;46054:34;46044:2;;46102:1;46099;46092:12;46044:2;46038:73;;46118:117;46187:24;46205:5;46187:24;;;46180:5;46177:35;46167:2;;46226:1;46223;46216:12;46167:2;46161:74;;46242:115;46310:23;46327:5;46310:23;;;46303:5;46300:34;46290:2;;46348:1;46345;46338:12;46290:2;46284:73;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n */\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2086
      ]
    },
    "id": 2087,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2030,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "id": 2031,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:9"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2032,
        "nodeType": "ImportDirective",
        "scope": 2087,
        "sourceUnit": 1869,
        "src": "60:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2033,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1868,
              "src": "311:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1868",
                "typeString": "contract ERC721"
              }
            },
            "id": 2034,
            "nodeType": "InheritanceSpecifier",
            "src": "311:6:9"
          }
        ],
        "contractDependencies": [
          142,
          1868,
          1878,
          1981
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol",
        "fullyImplemented": true,
        "id": 2086,
        "linearizedBaseContracts": [
          2086,
          1868,
          1981,
          142,
          1878
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2036,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2086,
            "src": "343:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2035,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "343:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2038,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2086,
            "src": "390:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2037,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "390:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2041,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2086,
            "src": "679:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2039,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "679:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2040,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "735:10:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2068,
              "nodeType": "Block",
              "src": "888:249:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2050,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2036,
                      "src": "899:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2051,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2043,
                      "src": "907:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "899:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2053,
                  "nodeType": "ExpressionStatement",
                  "src": "899:12:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2054,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2038,
                      "src": "921:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2055,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2045,
                      "src": "931:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "921:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2057,
                  "nodeType": "ExpressionStatement",
                  "src": "921:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2059,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2041,
                        "src": "1044:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2058,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1025:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2061,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:49:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2065,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2047,
                        "src": "1113:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2062,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2382,
                        "src": "1085:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2086",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 326,
                      "src": "1085:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:44:9"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2069,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2069,
                  "src": "814:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2045,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2069,
                  "src": "834:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2044,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2047,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2069,
                  "src": "856:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "813:67:9"
            },
            "returnParameters": {
              "id": 2049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:9"
            },
            "scope": 2086,
            "src": "801:336:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2076,
              "nodeType": "Block",
              "src": "1296:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2074,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2036,
                    "src": "1313:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2073,
                  "id": 2075,
                  "nodeType": "Return",
                  "src": "1306:12:9"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:9"
            },
            "returnParameters": {
              "id": 2073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2072,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2077,
                  "src": "1281:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2071,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1280:15:9"
            },
            "scope": 2086,
            "src": "1242:83:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2084,
              "nodeType": "Block",
              "src": "1490:31:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2082,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2038,
                    "src": "1507:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2081,
                  "id": 2083,
                  "nodeType": "Return",
                  "src": "1500:14:9"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:2:9"
            },
            "returnParameters": {
              "id": 2081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2080,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2085,
                  "src": "1475:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2079,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:15:9"
            },
            "scope": 2086,
            "src": "1434:87:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2087,
        "src": "285:1239:9"
      }
    ],
    "src": "0:1525:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2086
      ]
    },
    "id": 2087,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2030,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "id": 2031,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:9"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2032,
        "nodeType": "ImportDirective",
        "scope": 2087,
        "sourceUnit": 1869,
        "src": "60:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2033,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1868,
              "src": "311:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1868",
                "typeString": "contract ERC721"
              }
            },
            "id": 2034,
            "nodeType": "InheritanceSpecifier",
            "src": "311:6:9"
          }
        ],
        "contractDependencies": [
          142,
          1868,
          1878,
          1981
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol",
        "fullyImplemented": true,
        "id": 2086,
        "linearizedBaseContracts": [
          2086,
          1868,
          1981,
          142,
          1878
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2036,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2086,
            "src": "343:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2035,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "343:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2038,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2086,
            "src": "390:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2037,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "390:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2041,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2086,
            "src": "679:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2039,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "679:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2040,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "735:10:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2068,
              "nodeType": "Block",
              "src": "888:249:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2050,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2036,
                      "src": "899:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2051,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2043,
                      "src": "907:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "899:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2053,
                  "nodeType": "ExpressionStatement",
                  "src": "899:12:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2054,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2038,
                      "src": "921:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2055,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2045,
                      "src": "931:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "921:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2057,
                  "nodeType": "ExpressionStatement",
                  "src": "921:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2059,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2041,
                        "src": "1044:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2058,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1025:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2061,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:49:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2065,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2047,
                        "src": "1113:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2062,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2382,
                        "src": "1085:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2086",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 326,
                      "src": "1085:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:44:9"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2069,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2069,
                  "src": "814:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2045,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2069,
                  "src": "834:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2044,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2047,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2069,
                  "src": "856:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "813:67:9"
            },
            "returnParameters": {
              "id": 2049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:9"
            },
            "scope": 2086,
            "src": "801:336:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2076,
              "nodeType": "Block",
              "src": "1296:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2074,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2036,
                    "src": "1313:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2073,
                  "id": 2075,
                  "nodeType": "Return",
                  "src": "1306:12:9"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:9"
            },
            "returnParameters": {
              "id": 2073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2072,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2077,
                  "src": "1281:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2071,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1280:15:9"
            },
            "scope": 2086,
            "src": "1242:83:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2084,
              "nodeType": "Block",
              "src": "1490:31:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2082,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2038,
                    "src": "1507:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2081,
                  "id": 2083,
                  "nodeType": "Return",
                  "src": "1500:14:9"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:2:9"
            },
            "returnParameters": {
              "id": 2081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2080,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2085,
                  "src": "1475:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2079,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:15:9"
            },
            "scope": 2086,
            "src": "1434:87:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2087,
        "src": "285:1239:9"
      }
    ],
    "src": "0:1525:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-09-13T00:08:59.580Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "isMinter(address)": {
        "details": "Checks if minter isWhitelisted()"
      },
      "isWhitelisted(address)": {
        "details": "Checks Registry contract for whitelisted status",
        "params": {
          "target": "The address to check"
        }
      },
      "mint(string,bytes32,uint32,uint32,uint32)": {
        "details": "Function to mint tokens.",
        "return": "tokenId"
      },
      "mintWithTokenURI(string,bytes32,uint32,uint32,uint32,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause actions on this contract"
      },
      "safeMint(string,bytes32,uint32,uint32,uint32)": {
        "details": "Function to safely mint tokens.",
        "return": "tokenId"
      },
      "safeMint(string,bytes32,uint32,uint32,uint32,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check."
        },
        "return": "tokenId"
      },
      "safeMintWithTokenURI(string,bytes32,uint32,uint32,uint32,string)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots on      We're not grabbing this from the Registry in case the user has private"
      },
      "tokenMinterPropertyNames(address,string)": {
        "details": "Look up all Property Names a Minter has tokenized on a content ID"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls.",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause the smart contract."
      },
      "updateRegistryAddress(address)": {
        "details": "Update address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(uint256)": {
        "notice": "Customized for Microsponsors"
      },
      "safeMintWithTokenURI(string,bytes32,uint32,uint32,uint32,string)": {
        "notice": "Customized for Microsponsors from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol"
      },
      "unpause()": {
        "notice": "This is public rather than external so it can be called by  derived contracts."
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol"
  }
}