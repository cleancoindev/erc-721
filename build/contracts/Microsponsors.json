{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "safeMintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokensMintedBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        }
      ],
      "name": "tokenMinterPropertyNames",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "updateMintFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokensMintedBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"tokenMinterPropertyNames\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"updateMintFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Customized for MicrosponsorsBurns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"isMinter(address)\":{\"details\":\"Checks if minter isWhitelisted()\"},\"isWhitelisted(address)\":{\"details\":\"Checks Registry contract for whitelisted status\",\"params\":{\"target\":\"The address to check\"}},\"mint(string,string,uint48,uint48,uint48,uint16)\":{\"details\":\"Function to mint tokens.\",\"return\":\"tokenId\"},\"mintWithTokenURI(string,string,uint48,uint48,uint48,uint16,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause actions on this contract\"},\"safeMint(string,string,uint48,uint48,uint48,uint16)\":{\"details\":\"Function to safely mint tokens.\",\"return\":\"tokenId\"},\"safeMint(string,string,uint48,uint48,uint48,uint16,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\"},\"return\":\"tokenId\"},\"safeMintWithTokenURI(string,string,uint48,uint48,uint48,uint16,string)\":{\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations.\"},\"tokenMinterPropertyNames(address,string)\":{\"details\":\"Look up all Property Names a Minter has created Time Slots for      with a particular Content ID\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"uint256 ID of the token to query\"},\"return\":\"URI for a given token ID.\"},\"tokensMintedBy(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\"},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership1(address)\":{\"details\":\"Transfer owner (admin) functions to another address\",\"params\":{\"newOwner\":\"Address of new owner/ admin of contract\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause the smart contract.\"},\"updateMintFee(uint256)\":{\"details\":\"Update the fee (in wei) charged for minting a single token\"},\"updateRegistryAddress(address)\":{\"details\":\"Update contract address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}}}},\"userdoc\":{\"methods\":{\"tokenURI(uint256)\":{\"notice\":\"Throws if the token ID does not exist. May return an empty string.\"},\"tokensMintedBy(address)\":{\"notice\":\"Return all the Token IDs minted by a given account.\"},\"unpause()\":{\"notice\":\"This is public rather than external so it can be called by  derived contracts.\"},\"withdrawBalance()\":{\"notice\":\"* Withdraw **\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Copyright 2019 Niche Networks, Inc. (owns & operates Microsponsors.io) Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0x48884a01412f3ec0ab37310d058dfb24502aeab18685e8b61d15e80aebe42198\",\"urls\":[\"bzz-raw://c771678c68a370bdf5fb07e62ec30be4f030e13893bdac58c8fbb4773c53fa7a\",\"dweb:/ipfs/QmcpAL9vqis8sCoMdS43A3BcgTEMcRMYeKzmNDGBgTYBqE\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0xee1474cc2965cd0fee4ece3b5cea8e6e3cdd3c9bf90397ac2031854f8ee505f0\",\"urls\":[\"bzz-raw://0cb86c75c22289965bf20286fa52a5fe53079a056e63cabfa6add525515700f6\",\"dweb:/ipfs/QmdNm2iVrj73otSN5WQtNUQTjMyF858HwB8RoJJC4vHs1h\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "0x6080604052655af3107a4000600855600f805460ff191690553480156200002557600080fd5b50604051620041ac380380620041ac8339810160408190526200004891620003fc565b6200007c7f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b036200018c16565b620000b07f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b036200018c16565b620000c36001600160e01b036200023116565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000ed62000231565b600280546001600160a01b0319166001600160a01b0392909216919091179055825162000122906010906020860190620002eb565b50815162000138906011906020850190620002eb565b506200016d7f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b036200018c16565b62000183816200023660201b6200167f1760201c565b505050620005d0565b7fffffffff000000000000000000000000000000000000000000000000000000008082161415620001f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001eb90620004f5565b60405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b335b90565b6001546001600160a01b0316620002556001600160e01b036200023116565b6001600160a01b031614806200029057506002546001600160a01b0316620002856001600160e01b036200023116565b6001600160a01b0316145b620002c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001eb9062000507565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200032e57805160ff19168380011785556200035e565b828001600101855582156200035e579182015b828111156200035e57825182559160200191906001019062000341565b506200036c92915062000370565b5090565b6200023391905b808211156200036c576000815560010162000377565b80516200039a81620005b6565b92915050565b600082601f830112620003b257600080fd5b8151620003c9620003c38262000540565b62000519565b91508082526020830160208301858383011115620003e657600080fd5b620003f383828462000583565b50505092915050565b6000806000606084860312156200041257600080fd5b83516001600160401b038111156200042957600080fd5b6200043786828701620003a0565b93505060208401516001600160401b038111156200045457600080fd5b6200046286828701620003a0565b925050604062000475868287016200038d565b9150509250925092565b60006200048e601c8362000568565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000815260200192915050565b6000620004c9601b8362000568565b7f4552433732313a204f4e4c595f434f4e54524143545f4f574e45520000000000815260200192915050565b602080825281016200039a816200047f565b602080825281016200039a81620004ba565b6040518181016001600160401b03811182821017156200053857600080fd5b604052919050565b60006001600160401b038211156200055757600080fd5b506020601f91909101601f19160190565b90815260200190565b60006001600160a01b0382166200039a565b60005b83811015620005a057818101518382015260200162000586565b83811115620005b0576000848401525b50505050565b620005c18162000571565b8114620005cd57600080fd5b50565b613bcc80620005e06000396000f3fe6080604052600436106102305760003560e01c8063736889141161012e578063b88d4fde116100ab578063e2b375a91161006f578063e2b375a91461062e578063e5c249241461064e578063e982d5a914610682578063e985e9c5146106a2578063f91869d4146106c257610230565b8063b88d4fde146105a8578063bac10839146105c8578063bffb18f6146105db578063c57a8825146105ee578063c87b56dd1461060e57610230565b80638462151c116100f25780638462151c1461051357806395d89b4114610533578063a22cb46514610548578063a4ede12814610568578063aa271e1a1461058857610230565b8063736889141461047a5780637affcb9a1461048f5780637b103999146104bc57806384017e52146104de5780638456cb59146104fe57610230565b80632a0c7799116101bc578063527097251161018057806352709725146103fb5780635c975abb146104105780635fd8c710146104255780636352211e1461043a57806370a082311461045a57610230565b80632a0c7799146103595780633af32abf146103865780633f4ba83a146103a657806342842e0e146103bb57806342966c68146103db57610230565b8063095ea7b311610203578063095ea7b3146102da57806313966db5146102fc57806318160ddd1461031157806319f9eb021461032657806323b872dd1461033957610230565b806301ffc9a71461023557806305fe1a201461026b57806306fdde031461028b578063081812fc146102ad575b600080fd5b34801561024157600080fd5b50610255610250366004612c80565b6106d5565b6040516102629190613883565b60405180910390f35b61027e610279366004612d72565b6106f8565b6040516102629190613a50565b34801561029757600080fd5b506102a06107aa565b604051610262919061389f565b3480156102b957600080fd5b506102cd6102c8366004612e55565b610841565b604051610262919061378a565b3480156102e657600080fd5b506102fa6102f5366004612c32565b610884565b005b34801561030857600080fd5b5061027e6109a0565b34801561031d57600080fd5b5061027e6109a6565b61027e610334366004612d72565b6109b7565b34801561034557600080fd5b506102fa610354366004612ae6565b610a39565b34801561036557600080fd5b50610379610374366004612a8e565b610ad0565b6040516102629190613872565b34801561039257600080fd5b506102556103a1366004612a8e565b610bd8565b3480156103b257600080fd5b506102fa610c5f565b3480156103c757600080fd5b506102fa6103d6366004612ae6565b610cd9565b3480156103e757600080fd5b506102fa6103f6366004612e55565b610cf4565b34801561040757600080fd5b506102cd610d37565b34801561041c57600080fd5b50610255610d46565b34801561043157600080fd5b506102fa610d4f565b34801561044657600080fd5b506102cd610455366004612e55565b610e2b565b34801561046657600080fd5b5061027e610475366004612a8e565b610e46565b34801561048657600080fd5b506102cd610e8f565b34801561049b57600080fd5b506104af6104aa366004612bdc565b610e9e565b6040516102629190613861565b3480156104c857600080fd5b506104d161103e565b6040516102629190613891565b3480156104ea57600080fd5b506102fa6104f9366004612e55565b61104d565b34801561050a57600080fd5b506102fa6110b1565b34801561051f57600080fd5b5061037961052e366004612a8e565b61112f565b34801561053f57600080fd5b506102a06111e9565b34801561055457600080fd5b506102fa610563366004612bac565b61124a565b34801561057457600080fd5b506104af610583366004612a8e565b61134f565b34801561059457600080fd5b506102556105a3366004612a8e565b6114c5565b3480156105b457600080fd5b506102fa6105c3366004612b33565b6114d0565b61027e6105d6366004612cbc565b611569565b61027e6105e9366004612cbc565b611602565b3480156105fa57600080fd5b506102fa610609366004612a8e565b61167f565b34801561061a57600080fd5b506102a0610629366004612e55565b611700565b34801561063a57600080fd5b506102fa610649366004612a8e565b6117c6565b34801561065a57600080fd5b5061066e610669366004612e55565b611854565b604051610262989796959493929190613798565b34801561068e57600080fd5b506102fa61069d366004612a8e565b611a70565b3480156106ae57600080fd5b506102556106bd366004612aac565b611afe565b61027e6106d0366004612d72565b611b2c565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60006107056105a3611bc0565b61072a5760405162461bcd60e51b8152600401610721906138d0565b60405180910390fd5b600f5460ff161561073a57600080fd5b60085434101561074957600080fd5b61075588878787611bc4565b6107715760405162461bcd60e51b815260040161072190613960565b600061078361077e611bc0565b611ccb565b9050610794818a8a8a8a8a8a611daa565b61079e8184612028565b98975050505050505050565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108365780601f1061080b57610100808354040283529160200191610836565b820191906000526020600020905b81548152906001019060200180831161081957829003601f168201915b505050505090505b90565b600061084c8261206c565b6108685760405162461bcd60e51b8152600401610721906139b0565b506000908152600d60205260409020546001600160a01b031690565b61088f6103a1611bc0565b6108ab5760405162461bcd60e51b815260040161072190613a40565b600f5460ff16156108bb57600080fd5b60006108c682610e2b565b9050806001600160a01b0316836001600160a01b031614156108fa5760405162461bcd60e51b8152600401610721906139d0565b806001600160a01b031661090c611bc0565b6001600160a01b031614806109285750610928816106bd611bc0565b6109445760405162461bcd60e51b815260040161072190613990565b6000828152600d602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60085481565b60006109b26004612089565b905090565b60006109c46105a3611bc0565b6109e05760405162461bcd60e51b8152600401610721906138d0565b600f5460ff16156109f057600080fd5b6008543410156109ff57600080fd5b610a0b88878787611bc4565b610a275760405162461bcd60e51b815260040161072190613960565b6000610783610a34611bc0565b61208d565b600f5460ff1615610a4957600080fd5b610a5a610a54611bc0565b826120b0565b610a765760405162461bcd60e51b8152600401610721906139e0565b610a7f83610bd8565b610a9b5760405162461bcd60e51b815260040161072190613950565b610aa482610bd8565b610ac05760405162461bcd60e51b815260040161072190613950565b610acb83838361212d565b505050565b60606001600160a01b038216610af85760405162461bcd60e51b8152600401610721906138f0565b6001600160a01b0382166000908152600760205260408120610b1990612089565b905080610b3b5760408051600080825260208201909252905b509150506106f3565b606081604051908082528060200260200182016040528015610b67578160200160208202803883390190505b5090506000610b746109a6565b9050600060015b828111610bcb576000818152600960205260409020546001600160a01b0388811691161415610bc35780848381518110610bb157fe5b60209081029190910101526001909101905b600101610b7b565b83955050505050506106f3565b600354604051633af32abf60e01b81526000916001600160a01b031690633af32abf90610c0990859060040161378a565b60206040518083038186803b158015610c2157600080fd5b505afa158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c599190810190612c62565b92915050565b6001546001600160a01b0316610c73611bc0565b6001600160a01b03161480610ca257506002546001600160a01b0316610c97611bc0565b6001600160a01b0316145b610cbe5760405162461bcd60e51b815260040161072190613980565b600f5460ff16610ccd57600080fd5b600f805460ff19169055565b610acb838383604051806020016040528060008152506114d0565b600f5460ff1615610d0457600080fd5b610d0f610a54611bc0565b610d2b5760405162461bcd60e51b815260040161072190613a20565b610d3481612233565b50565b6002546001600160a01b031681565b600f5460ff1681565b6001546001600160a01b0316610d63611bc0565b6001600160a01b03161480610d9257506002546001600160a01b0316610d87611bc0565b6001600160a01b0316145b610dae5760405162461bcd60e51b815260040161072190613980565b60405130319060009033908390610dc49061377f565b60006040518083038185875af1925050503d8060008114610e01576040519150601f19603f3d011682016040523d82523d6000602084013e610e06565b606091505b5050905080610e275760405162461bcd60e51b8152600401610721906138e0565b5050565b6000908152600560205260409020546001600160a01b031690565b60006001600160a01b038216610e6e5760405162461bcd60e51b8152600401610721906138f0565b6001600160a01b0382166000908152600660205260409020610c5990612089565b6001546001600160a01b031681565b6001600160a01b0383166000908152600a60205260409081902090516060918291610ecc9086908690613766565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610fb157600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015610f995780601f10610f6e57610100808354040283529160200191610f99565b820191906000526020600020905b815481529060010190602001808311610f7c57829003601f168201915b50505050508152505081526020019060010190610efa565b50505050905060608151604051908082528060200260200182016040528015610fee57816020015b6060815260200190600190039081610fd95790505b50905060005b82518110156110345782818151811061100957fe5b60200260200101516000015182828151811061102157fe5b6020908102919091010152600101610ff4565b5095945050505050565b6003546001600160a01b031681565b6001546001600160a01b0316611061611bc0565b6001600160a01b0316148061109057506002546001600160a01b0316611085611bc0565b6001600160a01b0316145b6110ac5760405162461bcd60e51b815260040161072190613980565b600855565b6001546001600160a01b03166110c5611bc0565b6001600160a01b031614806110f457506002546001600160a01b03166110e9611bc0565b6001600160a01b0316145b6111105760405162461bcd60e51b815260040161072190613980565b600f5460ff161561112057600080fd5b600f805460ff19166001179055565b6060600061113c83610e46565b905080611159576040805160008082526020820190925290610b32565b606081604051908082528060200260200182016040528015611185578160200160208202803883390190505b50905060006111926109a6565b9050600060015b828111610bcb576000818152600560205260409020546001600160a01b03888116911614156111e157808483815181106111cf57fe5b60209081029190910101526001909101905b600101611199565b60118054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108365780601f1061080b57610100808354040283529160200191610836565b6112556103a1611bc0565b6112715760405162461bcd60e51b815260040161072190613a40565b600f5460ff161561128157600080fd5b611289611bc0565b6001600160a01b0316826001600160a01b031614156112ba5760405162461bcd60e51b815260040161072190613920565b80600e60006112c7611bc0565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561130b611bc0565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113439190613883565b60405180910390a35050565b6001600160a01b0381166000908152600b602090815260408083208054825181850281018501909352808352606094859484015b8282101561143a57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156114225780601f106113f757610100808354040283529160200191611422565b820191906000526020600020905b81548152906001019060200180831161140557829003601f168201915b50505050508152505081526020019060010190611383565b5050505090506060815160405190808252806020026020018201604052801561147757816020015b60608152602001906001900390816114625790505b50905060005b82518110156114bd5782818151811061149257fe5b6020026020010151600001518282815181106114aa57fe5b602090810291909101015260010161147d565b509392505050565b6000610c5982610bd8565b600f5460ff16156114e057600080fd5b6114e984610bd8565b6115055760405162461bcd60e51b815260040161072190613950565b61150e83610bd8565b61152a5760405162461bcd60e51b815260040161072190613950565b61153b611535611bc0565b836120b0565b6115575760405162461bcd60e51b8152600401610721906139e0565b61156384848484612245565b50505050565b60006115766105a3611bc0565b6115925760405162461bcd60e51b8152600401610721906138d0565b600f5460ff16156115a257600080fd5b6008543410156115b157600080fd5b6115bd87868686611bc4565b6115d95760405162461bcd60e51b815260040161072190613960565b60006115e6610a34611bc0565b90506115f781898989898989611daa565b979650505050505050565b600061160f6105a3611bc0565b61162b5760405162461bcd60e51b8152600401610721906138d0565b600f5460ff161561163b57600080fd5b60085434101561164a57600080fd5b61165687868686611bc4565b6116725760405162461bcd60e51b815260040161072190613960565b60006115e661077e611bc0565b6001546001600160a01b0316611693611bc0565b6001600160a01b031614806116c257506002546001600160a01b03166116b7611bc0565b6001600160a01b0316145b6116de5760405162461bcd60e51b815260040161072190613980565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b606061170b8261206c565b6117275760405162461bcd60e51b815260040161072190613a30565b6000828152600c602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156117ba5780601f1061178f576101008083540402835291602001916117ba565b820191906000526020600020905b81548152906001019060200180831161179d57829003601f168201915b50505050509050919050565b6001546001600160a01b03166117da611bc0565b6001600160a01b0316148061180957506002546001600160a01b03166117fe611bc0565b6001600160a01b0316145b6118255760405162461bcd60e51b815260040161072190613980565b6001600160a01b03811615610d3457600280546001600160a01b0383166001600160a01b031990911617905550565b6000806060806000806000806118698961206c565b6118855760405162461bcd60e51b8152600401610721906138b0565b61188d612884565b60008a815260096020908152604091829020825160e08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f81018690048602830186019096528582529194929385810193919291908301828280156119455780601f1061191a57610100808354040283529160200191611945565b820191906000526020600020905b81548152906001019060200180831161192857829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156119d75780601f106119ac576101008083540402835291602001916119d7565b820191906000526020600020905b8154815290600101906020018083116119ba57829003601f168201915b50505091835250506003919091015465ffffffffffff80821660208401526601000000000000820481166040840152600160601b8204166060830152600160901b900461ffff166080909101528051909150611a328b610e2b565b602083015160408401516060850151608086015160a087015160c090970151959e50939c50919a509850965094509092509050919395975091939597565b6001546001600160a01b0316611a84611bc0565b6001600160a01b03161480611ab357506002546001600160a01b0316611aa8611bc0565b6001600160a01b0316145b611acf5760405162461bcd60e51b815260040161072190613980565b6001600160a01b03811615610d3457600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205460ff1690565b6000611b396105a3611bc0565b611b555760405162461bcd60e51b8152600401610721906138d0565b600f5460ff1615611b6557600080fd5b600854341015611b7457600080fd5b611b8088878787611bc4565b611b9c5760405162461bcd60e51b815260040161072190613960565b6000611baf611ba9611bc0565b84612278565b905061079e818a8a8a8a8a8a611daa565b3390565b6003546040516323dd3a3d60e11b81526000916001600160a01b0316906347ba747a90611bf590889060040161389f565b60206040518083038186803b158015611c0d57600080fd5b505afa158015611c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c459190810190612c62565b611c615760405162461bcd60e51b815260040161072190613970565b8165ffffffffffff168465ffffffffffff1611611c905760405162461bcd60e51b815260040161072190613930565b8365ffffffffffff168365ffffffffffff1611611cbf5760405162461bcd60e51b815260040161072190613900565b5060015b949350505050565b60006001600160a01b038216611cf35760405162461bcd60e51b8152600401610721906139a0565b611cfd60046122af565b6000611d096004612089565b600081815260056020908152604080832080546001600160a01b0319166001600160a01b038916908117909155835260069091529020909150611d4b906122af565b6001600160a01b0383166000908152600760205260409020611d6c906122af565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b611db38761206c565b611dcf5760405162461bcd60e51b815260040161072190613a10565b611dd7612884565b6040518060e00160405280611dea611bc0565b6001600160a01b03908116825260208083018b905260408084018b905265ffffffffffff8a811660608601528981166080860152881660a085015261ffff871660c09094019390935260008c81526009825292909220835181546001600160a01b031916921691909117815582820151805193945084939192611e75926001850192909101906128c1565b5060408201518051611e919160028401916020909101906128c1565b50606082015160039091018054608084015160a085015160c09095015161ffff16600160901b0261ffff60901b1965ffffffffffff968716600160601b0265ffffffffffff60601b199388166601000000000000026bffffffffffff000000000000199890971665ffffffffffff19909516949094179690961694909417161792909216179055611f21876122b8565b611f8a57600b6000611f31611bc0565b6001600160a01b031681526020808201929092526040908101600090812082518085019093528a8352805460018101808355918352918490208351805192959190930192611f8592849291909101906128c1565b505050505b611f9487876123e3565b61201e57600a6000611fa4611bc0565b6001600160a01b03166001600160a01b0316815260200190815260200160002087604051611fd29190613773565b9081526040805191829003602090810183208382019092528883528154600181018084556000938452928290208451805194959491909201926120199284929101906128c1565b505050505b5050505050505050565b6120318261206c565b61204d5760405162461bcd60e51b815260040161072190613a00565b6000828152600c602090815260409091208251610acb928401906128c1565b6000908152600560205260409020546001600160a01b0316151590565b5490565b6000806120a98360405180602001604052806000815250612278565b9392505050565b60006120bb8261206c565b6120d75760405162461bcd60e51b815260040161072190613940565b60006120e283610e2b565b9050806001600160a01b0316846001600160a01b0316148061211d5750836001600160a01b031661211284610841565b6001600160a01b0316145b80611cc35750611cc38185611afe565b826001600160a01b031661214082610e2b565b6001600160a01b0316146121665760405162461bcd60e51b8152600401610721906139c0565b6001600160a01b03821661218c5760405162461bcd60e51b815260040161072190613910565b6121958161252a565b6001600160a01b03831660009081526006602052604090206121b690612565565b6001600160a01b03821660009081526006602052604090206121d7906122af565b60008181526005602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610d3461223f82610e2b565b8261257c565b61225084848461212d565b61225c848484846126bb565b6115635760405162461bcd60e51b8152600401610721906138c0565b60008061228484611ccb565b905061229360008583866126bb565b6120a95760405162461bcd60e51b8152600401610721906138c0565b80546001019055565b336000908152600b602090815260408083208054825181850281018501909352808352606093859084015b8282101561239a57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156123825780601f1061235757610100808354040283529160200191612382565b820191906000526020600020905b81548152906001019060200180831161236557829003601f168201915b505050505081525050815260200190600101906122e3565b5092935060009250829150505b82518110156114bd576123d1858483815181106123c057fe5b602002602001015160000151612786565b156123db57600191505b6001016123a7565b336000908152600a6020526040808220905160609190612404908690613773565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156124e957600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156124d15780601f106124a6576101008083540402835291602001916124d1565b820191906000526020600020905b8154815290600101906020018083116124b457829003601f168201915b50505050508152505081526020019060010190612432565b5092935060009250829150505b82518110156125215761250f858483815181106123c057fe5b1561251957600191505b6001016124f6565b50949350505050565b6000818152600d60205260409020546001600160a01b031615610d34576000908152600d6020526040902080546001600160a01b0319169055565b805461257890600163ffffffff6127df16565b9055565b816001600160a01b031661258f82610e2b565b6001600160a01b0316146125b55760405162461bcd60e51b8152600401610721906139f0565b6125be8161252a565b6001600160a01b03821660009081526006602052604090206125df90612565565b600081815260056020908152604080832080546001600160a01b0319169055600c9091529020546002600019600183161561010002019091160415612635576000818152600c602052604081206126359161293f565b600081815260096020526040812080546001600160a01b03191681559061265f600183018261293f565b61266d60028301600061293f565b5060030180546001600160a01b031916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006126cf846001600160a01b0316612821565b6126db57506001611cc3565b6000846001600160a01b031663150b7a026126f4611bc0565b8887876040518563ffffffff1660e01b8152600401612716949392919061381d565b602060405180830381600087803b15801561273057600080fd5b505af1158015612744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127689190810190612c9e565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b6000816040516020016127999190613773565b60405160208183030381529060405280519060200120836040516020016127c09190613773565b6040516020818303038152906040528051906020012014905092915050565b60006120a983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612858565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611cc35750141592915050565b6000818484111561287c5760405162461bcd60e51b8152600401610721919061389f565b505050900390565b6040805160e08101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061290257805160ff191683800117855561292f565b8280016001018555821561292f579182015b8281111561292f578251825591602001919060010190612914565b5061293b92915061297f565b5090565b50805460018160011615610100020316600290046000825580601f106129655750610d34565b601f016020900490600052602060002090810190610d3491905b61083e91905b8082111561293b5760008155600101612985565b8035610c5981613b48565b8035610c5981613b5c565b8051610c5981613b5c565b8035610c5981613b65565b8051610c5981613b65565b600082601f8301126129e157600080fd5b81356129f46129ef82613a85565b613a5e565b91508082526020830160208301858383011115612a1057600080fd5b612a1b838284613b06565b50505092915050565b60008083601f840112612a3657600080fd5b50813567ffffffffffffffff811115612a4e57600080fd5b602083019150836001820283011115612a6657600080fd5b9250929050565b8035610c5981613b6e565b8035610c5981613b77565b8035610c5981613b80565b600060208284031215612aa057600080fd5b6000611cc38484612999565b60008060408385031215612abf57600080fd5b6000612acb8585612999565b9250506020612adc85828601612999565b9150509250929050565b600080600060608486031215612afb57600080fd5b6000612b078686612999565b9350506020612b1886828701612999565b9250506040612b2986828701612a78565b9150509250925092565b60008060008060808587031215612b4957600080fd5b6000612b558787612999565b9450506020612b6687828801612999565b9350506040612b7787828801612a78565b925050606085013567ffffffffffffffff811115612b9457600080fd5b612ba0878288016129d0565b91505092959194509250565b60008060408385031215612bbf57600080fd5b6000612bcb8585612999565b9250506020612adc858286016129a4565b600080600060408486031215612bf157600080fd5b6000612bfd8686612999565b935050602084013567ffffffffffffffff811115612c1a57600080fd5b612c2686828701612a24565b92509250509250925092565b60008060408385031215612c4557600080fd5b6000612c518585612999565b9250506020612adc85828601612a78565b600060208284031215612c7457600080fd5b6000611cc384846129af565b600060208284031215612c9257600080fd5b6000611cc384846129ba565b600060208284031215612cb057600080fd5b6000611cc384846129c5565b60008060008060008060c08789031215612cd557600080fd5b863567ffffffffffffffff811115612cec57600080fd5b612cf889828a016129d0565b965050602087013567ffffffffffffffff811115612d1557600080fd5b612d2189828a016129d0565b9550506040612d3289828a01612a83565b9450506060612d4389828a01612a83565b9350506080612d5489828a01612a83565b92505060a0612d6589828a01612a6d565b9150509295509295509295565b600080600080600080600060e0888a031215612d8d57600080fd5b873567ffffffffffffffff811115612da457600080fd5b612db08a828b016129d0565b975050602088013567ffffffffffffffff811115612dcd57600080fd5b612dd98a828b016129d0565b9650506040612dea8a828b01612a83565b9550506060612dfb8a828b01612a83565b9450506080612e0c8a828b01612a83565b93505060a0612e1d8a828b01612a6d565b92505060c088013567ffffffffffffffff811115612e3a57600080fd5b612e468a828b016129d0565b91505092959891949750929550565b600060208284031215612e6757600080fd5b6000611cc38484612a78565b60006120a98383612f72565b6000612e8b8383613754565b505060200190565b612e9c81613ac0565b82525050565b6000612ead82613ab3565b612eb78185613ab7565b935083602082028501612ec985613aad565b8060005b85811015612f035784840389528151612ee68582612e73565b9450612ef183613aad565b60209a909a0199925050600101612ecd565b5091979650505050505050565b6000612f1b82613ab3565b612f258185613ab7565b9350612f3083613aad565b8060005b83811015612f5e578151612f488882612e7f565b9750612f5383613aad565b925050600101612f34565b509495945050505050565b612e9c81613acb565b6000612f7d82613ab3565b612f878185613ab7565b9350612f97818560208601613b12565b612fa081613b3e565b9093019392505050565b612e9c81613afb565b6000612fbf83856106f3565b9350612fcc838584613b06565b50500190565b6000612fdd82613ab3565b612fe781856106f3565b9350612ff7818560208601613b12565b9290920192915050565b600061300e601d83613ab7565b7f4552433732313a204e6f6e2d6578697374656e7420546f6b656e204944000000815260200192915050565b6000613047603283613ab7565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b602082015260400192915050565b600061309b603583613ab7565b7f4552433732313a2063616c6c6572206973206e6f742077686974656c697374658152746420666f7220746865204d696e74657220726f6c6560581b602082015260400192915050565b60006130f2600f83613ab7565b6e15da5d1a191c985dc819985a5b1959608a1b815260200192915050565b600061311d602583613ab7565b7f4552433732313a2063616e6e6f7420717565727920746865207a65726f206164815264647265737360d81b602082015260400192915050565b6000613164602a83613ab7565b7f4552433732313a2073746172742074696d65206d757374206265206265666f728152696520656e642074696d6560b01b602082015260400192915050565b60006131b0602483613ab7565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b602082015260400192915050565b60006131f6601983613ab7565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000815260200192915050565b600061322f603583613ab7565b7f4552433732313a2073746172742074696d65206d757374206265206166746572815274206974732061756374696f6e20656e642074696d6560581b602082015260400192915050565b6000613286602c83613ab7565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b60006132d4603483613ab7565b7f4552433732313a207472616e73666572207265737472696374656420746f2077815273686974656c69737465642061646472657373657360601b602082015260400192915050565b600061332a601983613ab7565b7f4552433732313a20696e76616c69642074696d6520736c6f7400000000000000815260200192915050565b6000613363602e83613ab7565b7f4552433732313a20636f6e74656e74206964206973206e6f742072656769737481526d32b932b2103a379031b0b63632b960911b602082015260400192915050565b60006133b3601b83613ab7565b7f4552433732313a204f4e4c595f434f4e54524143545f4f574e45520000000000815260200192915050565b60006133ec603e83613ab7565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f81527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015260400192915050565b600061344b602083613ab7565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373815260200192915050565b6000613484602c83613ab7565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b60006134d2602983613ab7565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981526839903737ba1037bbb760b91b602082015260400192915050565b600061351d601d83613ab7565b7f4552433732313a20617070726f76616c20697320726564756e64616e74000000815260200192915050565b6000610c596000836106f3565b6000613563603183613ab7565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f8152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b602082015260400192915050565b60006135b6602583613ab7565b7f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f8152643a1037bbb760d91b602082015260400192915050565b60006135fd602483613ab7565b7f4552433732313a2055524920736574206f66206e6f6e6578697374656e74207481526337b5b2b760e11b602082015260400192915050565b6000613643601a83613ab7565b7f4552433732313a206e6f6e2d6578697374656e7420746f6b656e000000000000815260200192915050565b600061367c602e83613ab7565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6581526d1c881b9bdc88185c1c1c9bdd995960921b602082015260400192915050565b60006136cc602783613ab7565b7f4552433732313a2055524920717565727920666f72206e6f6e6578697374656e8152663a103a37b5b2b760c91b602082015260400192915050565b6000613715602183613ab7565b7f4552433732313a2063616c6c6572206973206e6f742077686974656c697374658152601960fa1b602082015260400192915050565b612e9c81613add565b612e9c8161083e565b612e9c81613af0565b6000611cc3828486612fb3565b60006120a98284612fd2565b6000610c5982613549565b60208101610c598284612e93565b61010081016137a7828b612e93565b6137b4602083018a612e93565b81810360408301526137c68189612f72565b905081810360608301526137da8188612f72565b90506137e9608083018761375d565b6137f660a083018661375d565b61380360c083018561375d565b61381060e083018461374b565b9998505050505050505050565b6080810161382b8287612e93565b6138386020830186612e93565b6138456040830185613754565b81810360608301526138578184612f72565b9695505050505050565b602080825281016120a98184612ea2565b602080825281016120a98184612f10565b60208101610c598284612f69565b60208101610c598284612faa565b602080825281016120a98184612f72565b60208082528101610c5981613001565b60208082528101610c598161303a565b60208082528101610c598161308e565b60208082528101610c59816130e5565b60208082528101610c5981613110565b60208082528101610c5981613157565b60208082528101610c59816131a3565b60208082528101610c59816131e9565b60208082528101610c5981613222565b60208082528101610c5981613279565b60208082528101610c59816132c7565b60208082528101610c598161331d565b60208082528101610c5981613356565b60208082528101610c59816133a6565b60208082528101610c59816133df565b60208082528101610c598161343e565b60208082528101610c5981613477565b60208082528101610c59816134c5565b60208082528101610c5981613510565b60208082528101610c5981613556565b60208082528101610c59816135a9565b60208082528101610c59816135f0565b60208082528101610c5981613636565b60208082528101610c598161366f565b60208082528101610c59816136bf565b60208082528101610c5981613708565b60208101610c598284613754565b60405181810167ffffffffffffffff81118282101715613a7d57600080fd5b604052919050565b600067ffffffffffffffff821115613a9c57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610c5982613ae4565b151590565b6001600160e01b03191690565b61ffff1690565b6001600160a01b031690565b65ffffffffffff1690565b6000610c5982613ac0565b82818337506000910152565b60005b83811015613b2d578181015183820152602001613b15565b838111156115635750506000910152565b601f01601f191690565b613b5181613ac0565b8114610d3457600080fd5b613b5181613acb565b613b5181613ad0565b613b5181613add565b613b518161083e565b613b5181613af056fea365627a7a72315820f1e868db813037633aed9f81cf79367444a8ead9b480f6c89cf98bcc6d9093ab6c6578706572696d656e74616cf564736f6c634300050b0040",
  "deployedBytecode": "0x6080604052600436106102305760003560e01c8063736889141161012e578063b88d4fde116100ab578063e2b375a91161006f578063e2b375a91461062e578063e5c249241461064e578063e982d5a914610682578063e985e9c5146106a2578063f91869d4146106c257610230565b8063b88d4fde146105a8578063bac10839146105c8578063bffb18f6146105db578063c57a8825146105ee578063c87b56dd1461060e57610230565b80638462151c116100f25780638462151c1461051357806395d89b4114610533578063a22cb46514610548578063a4ede12814610568578063aa271e1a1461058857610230565b8063736889141461047a5780637affcb9a1461048f5780637b103999146104bc57806384017e52146104de5780638456cb59146104fe57610230565b80632a0c7799116101bc578063527097251161018057806352709725146103fb5780635c975abb146104105780635fd8c710146104255780636352211e1461043a57806370a082311461045a57610230565b80632a0c7799146103595780633af32abf146103865780633f4ba83a146103a657806342842e0e146103bb57806342966c68146103db57610230565b8063095ea7b311610203578063095ea7b3146102da57806313966db5146102fc57806318160ddd1461031157806319f9eb021461032657806323b872dd1461033957610230565b806301ffc9a71461023557806305fe1a201461026b57806306fdde031461028b578063081812fc146102ad575b600080fd5b34801561024157600080fd5b50610255610250366004612c80565b6106d5565b6040516102629190613883565b60405180910390f35b61027e610279366004612d72565b6106f8565b6040516102629190613a50565b34801561029757600080fd5b506102a06107aa565b604051610262919061389f565b3480156102b957600080fd5b506102cd6102c8366004612e55565b610841565b604051610262919061378a565b3480156102e657600080fd5b506102fa6102f5366004612c32565b610884565b005b34801561030857600080fd5b5061027e6109a0565b34801561031d57600080fd5b5061027e6109a6565b61027e610334366004612d72565b6109b7565b34801561034557600080fd5b506102fa610354366004612ae6565b610a39565b34801561036557600080fd5b50610379610374366004612a8e565b610ad0565b6040516102629190613872565b34801561039257600080fd5b506102556103a1366004612a8e565b610bd8565b3480156103b257600080fd5b506102fa610c5f565b3480156103c757600080fd5b506102fa6103d6366004612ae6565b610cd9565b3480156103e757600080fd5b506102fa6103f6366004612e55565b610cf4565b34801561040757600080fd5b506102cd610d37565b34801561041c57600080fd5b50610255610d46565b34801561043157600080fd5b506102fa610d4f565b34801561044657600080fd5b506102cd610455366004612e55565b610e2b565b34801561046657600080fd5b5061027e610475366004612a8e565b610e46565b34801561048657600080fd5b506102cd610e8f565b34801561049b57600080fd5b506104af6104aa366004612bdc565b610e9e565b6040516102629190613861565b3480156104c857600080fd5b506104d161103e565b6040516102629190613891565b3480156104ea57600080fd5b506102fa6104f9366004612e55565b61104d565b34801561050a57600080fd5b506102fa6110b1565b34801561051f57600080fd5b5061037961052e366004612a8e565b61112f565b34801561053f57600080fd5b506102a06111e9565b34801561055457600080fd5b506102fa610563366004612bac565b61124a565b34801561057457600080fd5b506104af610583366004612a8e565b61134f565b34801561059457600080fd5b506102556105a3366004612a8e565b6114c5565b3480156105b457600080fd5b506102fa6105c3366004612b33565b6114d0565b61027e6105d6366004612cbc565b611569565b61027e6105e9366004612cbc565b611602565b3480156105fa57600080fd5b506102fa610609366004612a8e565b61167f565b34801561061a57600080fd5b506102a0610629366004612e55565b611700565b34801561063a57600080fd5b506102fa610649366004612a8e565b6117c6565b34801561065a57600080fd5b5061066e610669366004612e55565b611854565b604051610262989796959493929190613798565b34801561068e57600080fd5b506102fa61069d366004612a8e565b611a70565b3480156106ae57600080fd5b506102556106bd366004612aac565b611afe565b61027e6106d0366004612d72565b611b2c565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60006107056105a3611bc0565b61072a5760405162461bcd60e51b8152600401610721906138d0565b60405180910390fd5b600f5460ff161561073a57600080fd5b60085434101561074957600080fd5b61075588878787611bc4565b6107715760405162461bcd60e51b815260040161072190613960565b600061078361077e611bc0565b611ccb565b9050610794818a8a8a8a8a8a611daa565b61079e8184612028565b98975050505050505050565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108365780601f1061080b57610100808354040283529160200191610836565b820191906000526020600020905b81548152906001019060200180831161081957829003601f168201915b505050505090505b90565b600061084c8261206c565b6108685760405162461bcd60e51b8152600401610721906139b0565b506000908152600d60205260409020546001600160a01b031690565b61088f6103a1611bc0565b6108ab5760405162461bcd60e51b815260040161072190613a40565b600f5460ff16156108bb57600080fd5b60006108c682610e2b565b9050806001600160a01b0316836001600160a01b031614156108fa5760405162461bcd60e51b8152600401610721906139d0565b806001600160a01b031661090c611bc0565b6001600160a01b031614806109285750610928816106bd611bc0565b6109445760405162461bcd60e51b815260040161072190613990565b6000828152600d602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60085481565b60006109b26004612089565b905090565b60006109c46105a3611bc0565b6109e05760405162461bcd60e51b8152600401610721906138d0565b600f5460ff16156109f057600080fd5b6008543410156109ff57600080fd5b610a0b88878787611bc4565b610a275760405162461bcd60e51b815260040161072190613960565b6000610783610a34611bc0565b61208d565b600f5460ff1615610a4957600080fd5b610a5a610a54611bc0565b826120b0565b610a765760405162461bcd60e51b8152600401610721906139e0565b610a7f83610bd8565b610a9b5760405162461bcd60e51b815260040161072190613950565b610aa482610bd8565b610ac05760405162461bcd60e51b815260040161072190613950565b610acb83838361212d565b505050565b60606001600160a01b038216610af85760405162461bcd60e51b8152600401610721906138f0565b6001600160a01b0382166000908152600760205260408120610b1990612089565b905080610b3b5760408051600080825260208201909252905b509150506106f3565b606081604051908082528060200260200182016040528015610b67578160200160208202803883390190505b5090506000610b746109a6565b9050600060015b828111610bcb576000818152600960205260409020546001600160a01b0388811691161415610bc35780848381518110610bb157fe5b60209081029190910101526001909101905b600101610b7b565b83955050505050506106f3565b600354604051633af32abf60e01b81526000916001600160a01b031690633af32abf90610c0990859060040161378a565b60206040518083038186803b158015610c2157600080fd5b505afa158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c599190810190612c62565b92915050565b6001546001600160a01b0316610c73611bc0565b6001600160a01b03161480610ca257506002546001600160a01b0316610c97611bc0565b6001600160a01b0316145b610cbe5760405162461bcd60e51b815260040161072190613980565b600f5460ff16610ccd57600080fd5b600f805460ff19169055565b610acb838383604051806020016040528060008152506114d0565b600f5460ff1615610d0457600080fd5b610d0f610a54611bc0565b610d2b5760405162461bcd60e51b815260040161072190613a20565b610d3481612233565b50565b6002546001600160a01b031681565b600f5460ff1681565b6001546001600160a01b0316610d63611bc0565b6001600160a01b03161480610d9257506002546001600160a01b0316610d87611bc0565b6001600160a01b0316145b610dae5760405162461bcd60e51b815260040161072190613980565b60405130319060009033908390610dc49061377f565b60006040518083038185875af1925050503d8060008114610e01576040519150601f19603f3d011682016040523d82523d6000602084013e610e06565b606091505b5050905080610e275760405162461bcd60e51b8152600401610721906138e0565b5050565b6000908152600560205260409020546001600160a01b031690565b60006001600160a01b038216610e6e5760405162461bcd60e51b8152600401610721906138f0565b6001600160a01b0382166000908152600660205260409020610c5990612089565b6001546001600160a01b031681565b6001600160a01b0383166000908152600a60205260409081902090516060918291610ecc9086908690613766565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610fb157600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015610f995780601f10610f6e57610100808354040283529160200191610f99565b820191906000526020600020905b815481529060010190602001808311610f7c57829003601f168201915b50505050508152505081526020019060010190610efa565b50505050905060608151604051908082528060200260200182016040528015610fee57816020015b6060815260200190600190039081610fd95790505b50905060005b82518110156110345782818151811061100957fe5b60200260200101516000015182828151811061102157fe5b6020908102919091010152600101610ff4565b5095945050505050565b6003546001600160a01b031681565b6001546001600160a01b0316611061611bc0565b6001600160a01b0316148061109057506002546001600160a01b0316611085611bc0565b6001600160a01b0316145b6110ac5760405162461bcd60e51b815260040161072190613980565b600855565b6001546001600160a01b03166110c5611bc0565b6001600160a01b031614806110f457506002546001600160a01b03166110e9611bc0565b6001600160a01b0316145b6111105760405162461bcd60e51b815260040161072190613980565b600f5460ff161561112057600080fd5b600f805460ff19166001179055565b6060600061113c83610e46565b905080611159576040805160008082526020820190925290610b32565b606081604051908082528060200260200182016040528015611185578160200160208202803883390190505b50905060006111926109a6565b9050600060015b828111610bcb576000818152600560205260409020546001600160a01b03888116911614156111e157808483815181106111cf57fe5b60209081029190910101526001909101905b600101611199565b60118054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108365780601f1061080b57610100808354040283529160200191610836565b6112556103a1611bc0565b6112715760405162461bcd60e51b815260040161072190613a40565b600f5460ff161561128157600080fd5b611289611bc0565b6001600160a01b0316826001600160a01b031614156112ba5760405162461bcd60e51b815260040161072190613920565b80600e60006112c7611bc0565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561130b611bc0565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113439190613883565b60405180910390a35050565b6001600160a01b0381166000908152600b602090815260408083208054825181850281018501909352808352606094859484015b8282101561143a57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156114225780601f106113f757610100808354040283529160200191611422565b820191906000526020600020905b81548152906001019060200180831161140557829003601f168201915b50505050508152505081526020019060010190611383565b5050505090506060815160405190808252806020026020018201604052801561147757816020015b60608152602001906001900390816114625790505b50905060005b82518110156114bd5782818151811061149257fe5b6020026020010151600001518282815181106114aa57fe5b602090810291909101015260010161147d565b509392505050565b6000610c5982610bd8565b600f5460ff16156114e057600080fd5b6114e984610bd8565b6115055760405162461bcd60e51b815260040161072190613950565b61150e83610bd8565b61152a5760405162461bcd60e51b815260040161072190613950565b61153b611535611bc0565b836120b0565b6115575760405162461bcd60e51b8152600401610721906139e0565b61156384848484612245565b50505050565b60006115766105a3611bc0565b6115925760405162461bcd60e51b8152600401610721906138d0565b600f5460ff16156115a257600080fd5b6008543410156115b157600080fd5b6115bd87868686611bc4565b6115d95760405162461bcd60e51b815260040161072190613960565b60006115e6610a34611bc0565b90506115f781898989898989611daa565b979650505050505050565b600061160f6105a3611bc0565b61162b5760405162461bcd60e51b8152600401610721906138d0565b600f5460ff161561163b57600080fd5b60085434101561164a57600080fd5b61165687868686611bc4565b6116725760405162461bcd60e51b815260040161072190613960565b60006115e661077e611bc0565b6001546001600160a01b0316611693611bc0565b6001600160a01b031614806116c257506002546001600160a01b03166116b7611bc0565b6001600160a01b0316145b6116de5760405162461bcd60e51b815260040161072190613980565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b606061170b8261206c565b6117275760405162461bcd60e51b815260040161072190613a30565b6000828152600c602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156117ba5780601f1061178f576101008083540402835291602001916117ba565b820191906000526020600020905b81548152906001019060200180831161179d57829003601f168201915b50505050509050919050565b6001546001600160a01b03166117da611bc0565b6001600160a01b0316148061180957506002546001600160a01b03166117fe611bc0565b6001600160a01b0316145b6118255760405162461bcd60e51b815260040161072190613980565b6001600160a01b03811615610d3457600280546001600160a01b0383166001600160a01b031990911617905550565b6000806060806000806000806118698961206c565b6118855760405162461bcd60e51b8152600401610721906138b0565b61188d612884565b60008a815260096020908152604091829020825160e08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f81018690048602830186019096528582529194929385810193919291908301828280156119455780601f1061191a57610100808354040283529160200191611945565b820191906000526020600020905b81548152906001019060200180831161192857829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156119d75780601f106119ac576101008083540402835291602001916119d7565b820191906000526020600020905b8154815290600101906020018083116119ba57829003601f168201915b50505091835250506003919091015465ffffffffffff80821660208401526601000000000000820481166040840152600160601b8204166060830152600160901b900461ffff166080909101528051909150611a328b610e2b565b602083015160408401516060850151608086015160a087015160c090970151959e50939c50919a509850965094509092509050919395975091939597565b6001546001600160a01b0316611a84611bc0565b6001600160a01b03161480611ab357506002546001600160a01b0316611aa8611bc0565b6001600160a01b0316145b611acf5760405162461bcd60e51b815260040161072190613980565b6001600160a01b03811615610d3457600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205460ff1690565b6000611b396105a3611bc0565b611b555760405162461bcd60e51b8152600401610721906138d0565b600f5460ff1615611b6557600080fd5b600854341015611b7457600080fd5b611b8088878787611bc4565b611b9c5760405162461bcd60e51b815260040161072190613960565b6000611baf611ba9611bc0565b84612278565b905061079e818a8a8a8a8a8a611daa565b3390565b6003546040516323dd3a3d60e11b81526000916001600160a01b0316906347ba747a90611bf590889060040161389f565b60206040518083038186803b158015611c0d57600080fd5b505afa158015611c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c459190810190612c62565b611c615760405162461bcd60e51b815260040161072190613970565b8165ffffffffffff168465ffffffffffff1611611c905760405162461bcd60e51b815260040161072190613930565b8365ffffffffffff168365ffffffffffff1611611cbf5760405162461bcd60e51b815260040161072190613900565b5060015b949350505050565b60006001600160a01b038216611cf35760405162461bcd60e51b8152600401610721906139a0565b611cfd60046122af565b6000611d096004612089565b600081815260056020908152604080832080546001600160a01b0319166001600160a01b038916908117909155835260069091529020909150611d4b906122af565b6001600160a01b0383166000908152600760205260409020611d6c906122af565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b611db38761206c565b611dcf5760405162461bcd60e51b815260040161072190613a10565b611dd7612884565b6040518060e00160405280611dea611bc0565b6001600160a01b03908116825260208083018b905260408084018b905265ffffffffffff8a811660608601528981166080860152881660a085015261ffff871660c09094019390935260008c81526009825292909220835181546001600160a01b031916921691909117815582820151805193945084939192611e75926001850192909101906128c1565b5060408201518051611e919160028401916020909101906128c1565b50606082015160039091018054608084015160a085015160c09095015161ffff16600160901b0261ffff60901b1965ffffffffffff968716600160601b0265ffffffffffff60601b199388166601000000000000026bffffffffffff000000000000199890971665ffffffffffff19909516949094179690961694909417161792909216179055611f21876122b8565b611f8a57600b6000611f31611bc0565b6001600160a01b031681526020808201929092526040908101600090812082518085019093528a8352805460018101808355918352918490208351805192959190930192611f8592849291909101906128c1565b505050505b611f9487876123e3565b61201e57600a6000611fa4611bc0565b6001600160a01b03166001600160a01b0316815260200190815260200160002087604051611fd29190613773565b9081526040805191829003602090810183208382019092528883528154600181018084556000938452928290208451805194959491909201926120199284929101906128c1565b505050505b5050505050505050565b6120318261206c565b61204d5760405162461bcd60e51b815260040161072190613a00565b6000828152600c602090815260409091208251610acb928401906128c1565b6000908152600560205260409020546001600160a01b0316151590565b5490565b6000806120a98360405180602001604052806000815250612278565b9392505050565b60006120bb8261206c565b6120d75760405162461bcd60e51b815260040161072190613940565b60006120e283610e2b565b9050806001600160a01b0316846001600160a01b0316148061211d5750836001600160a01b031661211284610841565b6001600160a01b0316145b80611cc35750611cc38185611afe565b826001600160a01b031661214082610e2b565b6001600160a01b0316146121665760405162461bcd60e51b8152600401610721906139c0565b6001600160a01b03821661218c5760405162461bcd60e51b815260040161072190613910565b6121958161252a565b6001600160a01b03831660009081526006602052604090206121b690612565565b6001600160a01b03821660009081526006602052604090206121d7906122af565b60008181526005602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610d3461223f82610e2b565b8261257c565b61225084848461212d565b61225c848484846126bb565b6115635760405162461bcd60e51b8152600401610721906138c0565b60008061228484611ccb565b905061229360008583866126bb565b6120a95760405162461bcd60e51b8152600401610721906138c0565b80546001019055565b336000908152600b602090815260408083208054825181850281018501909352808352606093859084015b8282101561239a57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156123825780601f1061235757610100808354040283529160200191612382565b820191906000526020600020905b81548152906001019060200180831161236557829003601f168201915b505050505081525050815260200190600101906122e3565b5092935060009250829150505b82518110156114bd576123d1858483815181106123c057fe5b602002602001015160000151612786565b156123db57600191505b6001016123a7565b336000908152600a6020526040808220905160609190612404908690613773565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156124e957600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156124d15780601f106124a6576101008083540402835291602001916124d1565b820191906000526020600020905b8154815290600101906020018083116124b457829003601f168201915b50505050508152505081526020019060010190612432565b5092935060009250829150505b82518110156125215761250f858483815181106123c057fe5b1561251957600191505b6001016124f6565b50949350505050565b6000818152600d60205260409020546001600160a01b031615610d34576000908152600d6020526040902080546001600160a01b0319169055565b805461257890600163ffffffff6127df16565b9055565b816001600160a01b031661258f82610e2b565b6001600160a01b0316146125b55760405162461bcd60e51b8152600401610721906139f0565b6125be8161252a565b6001600160a01b03821660009081526006602052604090206125df90612565565b600081815260056020908152604080832080546001600160a01b0319169055600c9091529020546002600019600183161561010002019091160415612635576000818152600c602052604081206126359161293f565b600081815260096020526040812080546001600160a01b03191681559061265f600183018261293f565b61266d60028301600061293f565b5060030180546001600160a01b031916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006126cf846001600160a01b0316612821565b6126db57506001611cc3565b6000846001600160a01b031663150b7a026126f4611bc0565b8887876040518563ffffffff1660e01b8152600401612716949392919061381d565b602060405180830381600087803b15801561273057600080fd5b505af1158015612744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127689190810190612c9e565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b6000816040516020016127999190613773565b60405160208183030381529060405280519060200120836040516020016127c09190613773565b6040516020818303038152906040528051906020012014905092915050565b60006120a983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612858565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611cc35750141592915050565b6000818484111561287c5760405162461bcd60e51b8152600401610721919061389f565b505050900390565b6040805160e08101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061290257805160ff191683800117855561292f565b8280016001018555821561292f579182015b8281111561292f578251825591602001919060010190612914565b5061293b92915061297f565b5090565b50805460018160011615610100020316600290046000825580601f106129655750610d34565b601f016020900490600052602060002090810190610d3491905b61083e91905b8082111561293b5760008155600101612985565b8035610c5981613b48565b8035610c5981613b5c565b8051610c5981613b5c565b8035610c5981613b65565b8051610c5981613b65565b600082601f8301126129e157600080fd5b81356129f46129ef82613a85565b613a5e565b91508082526020830160208301858383011115612a1057600080fd5b612a1b838284613b06565b50505092915050565b60008083601f840112612a3657600080fd5b50813567ffffffffffffffff811115612a4e57600080fd5b602083019150836001820283011115612a6657600080fd5b9250929050565b8035610c5981613b6e565b8035610c5981613b77565b8035610c5981613b80565b600060208284031215612aa057600080fd5b6000611cc38484612999565b60008060408385031215612abf57600080fd5b6000612acb8585612999565b9250506020612adc85828601612999565b9150509250929050565b600080600060608486031215612afb57600080fd5b6000612b078686612999565b9350506020612b1886828701612999565b9250506040612b2986828701612a78565b9150509250925092565b60008060008060808587031215612b4957600080fd5b6000612b558787612999565b9450506020612b6687828801612999565b9350506040612b7787828801612a78565b925050606085013567ffffffffffffffff811115612b9457600080fd5b612ba0878288016129d0565b91505092959194509250565b60008060408385031215612bbf57600080fd5b6000612bcb8585612999565b9250506020612adc858286016129a4565b600080600060408486031215612bf157600080fd5b6000612bfd8686612999565b935050602084013567ffffffffffffffff811115612c1a57600080fd5b612c2686828701612a24565b92509250509250925092565b60008060408385031215612c4557600080fd5b6000612c518585612999565b9250506020612adc85828601612a78565b600060208284031215612c7457600080fd5b6000611cc384846129af565b600060208284031215612c9257600080fd5b6000611cc384846129ba565b600060208284031215612cb057600080fd5b6000611cc384846129c5565b60008060008060008060c08789031215612cd557600080fd5b863567ffffffffffffffff811115612cec57600080fd5b612cf889828a016129d0565b965050602087013567ffffffffffffffff811115612d1557600080fd5b612d2189828a016129d0565b9550506040612d3289828a01612a83565b9450506060612d4389828a01612a83565b9350506080612d5489828a01612a83565b92505060a0612d6589828a01612a6d565b9150509295509295509295565b600080600080600080600060e0888a031215612d8d57600080fd5b873567ffffffffffffffff811115612da457600080fd5b612db08a828b016129d0565b975050602088013567ffffffffffffffff811115612dcd57600080fd5b612dd98a828b016129d0565b9650506040612dea8a828b01612a83565b9550506060612dfb8a828b01612a83565b9450506080612e0c8a828b01612a83565b93505060a0612e1d8a828b01612a6d565b92505060c088013567ffffffffffffffff811115612e3a57600080fd5b612e468a828b016129d0565b91505092959891949750929550565b600060208284031215612e6757600080fd5b6000611cc38484612a78565b60006120a98383612f72565b6000612e8b8383613754565b505060200190565b612e9c81613ac0565b82525050565b6000612ead82613ab3565b612eb78185613ab7565b935083602082028501612ec985613aad565b8060005b85811015612f035784840389528151612ee68582612e73565b9450612ef183613aad565b60209a909a0199925050600101612ecd565b5091979650505050505050565b6000612f1b82613ab3565b612f258185613ab7565b9350612f3083613aad565b8060005b83811015612f5e578151612f488882612e7f565b9750612f5383613aad565b925050600101612f34565b509495945050505050565b612e9c81613acb565b6000612f7d82613ab3565b612f878185613ab7565b9350612f97818560208601613b12565b612fa081613b3e565b9093019392505050565b612e9c81613afb565b6000612fbf83856106f3565b9350612fcc838584613b06565b50500190565b6000612fdd82613ab3565b612fe781856106f3565b9350612ff7818560208601613b12565b9290920192915050565b600061300e601d83613ab7565b7f4552433732313a204e6f6e2d6578697374656e7420546f6b656e204944000000815260200192915050565b6000613047603283613ab7565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b602082015260400192915050565b600061309b603583613ab7565b7f4552433732313a2063616c6c6572206973206e6f742077686974656c697374658152746420666f7220746865204d696e74657220726f6c6560581b602082015260400192915050565b60006130f2600f83613ab7565b6e15da5d1a191c985dc819985a5b1959608a1b815260200192915050565b600061311d602583613ab7565b7f4552433732313a2063616e6e6f7420717565727920746865207a65726f206164815264647265737360d81b602082015260400192915050565b6000613164602a83613ab7565b7f4552433732313a2073746172742074696d65206d757374206265206265666f728152696520656e642074696d6560b01b602082015260400192915050565b60006131b0602483613ab7565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b602082015260400192915050565b60006131f6601983613ab7565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000815260200192915050565b600061322f603583613ab7565b7f4552433732313a2073746172742074696d65206d757374206265206166746572815274206974732061756374696f6e20656e642074696d6560581b602082015260400192915050565b6000613286602c83613ab7565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b60006132d4603483613ab7565b7f4552433732313a207472616e73666572207265737472696374656420746f2077815273686974656c69737465642061646472657373657360601b602082015260400192915050565b600061332a601983613ab7565b7f4552433732313a20696e76616c69642074696d6520736c6f7400000000000000815260200192915050565b6000613363602e83613ab7565b7f4552433732313a20636f6e74656e74206964206973206e6f742072656769737481526d32b932b2103a379031b0b63632b960911b602082015260400192915050565b60006133b3601b83613ab7565b7f4552433732313a204f4e4c595f434f4e54524143545f4f574e45520000000000815260200192915050565b60006133ec603e83613ab7565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f81527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015260400192915050565b600061344b602083613ab7565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373815260200192915050565b6000613484602c83613ab7565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b60006134d2602983613ab7565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981526839903737ba1037bbb760b91b602082015260400192915050565b600061351d601d83613ab7565b7f4552433732313a20617070726f76616c20697320726564756e64616e74000000815260200192915050565b6000610c596000836106f3565b6000613563603183613ab7565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f8152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b602082015260400192915050565b60006135b6602583613ab7565b7f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f8152643a1037bbb760d91b602082015260400192915050565b60006135fd602483613ab7565b7f4552433732313a2055524920736574206f66206e6f6e6578697374656e74207481526337b5b2b760e11b602082015260400192915050565b6000613643601a83613ab7565b7f4552433732313a206e6f6e2d6578697374656e7420746f6b656e000000000000815260200192915050565b600061367c602e83613ab7565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6581526d1c881b9bdc88185c1c1c9bdd995960921b602082015260400192915050565b60006136cc602783613ab7565b7f4552433732313a2055524920717565727920666f72206e6f6e6578697374656e8152663a103a37b5b2b760c91b602082015260400192915050565b6000613715602183613ab7565b7f4552433732313a2063616c6c6572206973206e6f742077686974656c697374658152601960fa1b602082015260400192915050565b612e9c81613add565b612e9c8161083e565b612e9c81613af0565b6000611cc3828486612fb3565b60006120a98284612fd2565b6000610c5982613549565b60208101610c598284612e93565b61010081016137a7828b612e93565b6137b4602083018a612e93565b81810360408301526137c68189612f72565b905081810360608301526137da8188612f72565b90506137e9608083018761375d565b6137f660a083018661375d565b61380360c083018561375d565b61381060e083018461374b565b9998505050505050505050565b6080810161382b8287612e93565b6138386020830186612e93565b6138456040830185613754565b81810360608301526138578184612f72565b9695505050505050565b602080825281016120a98184612ea2565b602080825281016120a98184612f10565b60208101610c598284612f69565b60208101610c598284612faa565b602080825281016120a98184612f72565b60208082528101610c5981613001565b60208082528101610c598161303a565b60208082528101610c598161308e565b60208082528101610c59816130e5565b60208082528101610c5981613110565b60208082528101610c5981613157565b60208082528101610c59816131a3565b60208082528101610c59816131e9565b60208082528101610c5981613222565b60208082528101610c5981613279565b60208082528101610c59816132c7565b60208082528101610c598161331d565b60208082528101610c5981613356565b60208082528101610c59816133a6565b60208082528101610c59816133df565b60208082528101610c598161343e565b60208082528101610c5981613477565b60208082528101610c59816134c5565b60208082528101610c5981613510565b60208082528101610c5981613556565b60208082528101610c59816135a9565b60208082528101610c59816135f0565b60208082528101610c5981613636565b60208082528101610c598161366f565b60208082528101610c59816136bf565b60208082528101610c5981613708565b60208101610c598284613754565b60405181810167ffffffffffffffff81118282101715613a7d57600080fd5b604052919050565b600067ffffffffffffffff821115613a9c57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610c5982613ae4565b151590565b6001600160e01b03191690565b61ffff1690565b6001600160a01b031690565b65ffffffffffff1690565b6000610c5982613ac0565b82818337506000910152565b60005b83811015613b2d578181015183820152602001613b15565b838111156115635750506000910152565b601f01601f191690565b613b5181613ac0565b8114610d3457600080fd5b613b5181613acb565b613b5181613ad0565b613b5181613add565b613b518161083e565b613b5181613af056fea365627a7a72315820f1e868db813037633aed9f81cf79367444a8ead9b480f6c89cf98bcc6d9093ab6c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "925:1239:8:-;;;2088:15:3;2063:40;;4391:26;;;-1:-1:-1;;4391:26:3;;;1441:336:8;5:2:-1;;;;30:1;27;20:12;5:2;1441:336:8;;;;;;;;;;;;;;;;;;;;;720:40:2;739:20;-1:-1:-1;;;;;720:18:2;:40;:::i;:::-;5467::3;5486:20;-1:-1:-1;;;;;5467:18:3;:40;:::i;:::-;5587:12;-1:-1:-1;;;;;5587:10:3;:12;:::i;:::-;5578:6;:21;;-1:-1:-1;;;;;;5578:21:3;-1:-1:-1;;;;;5578:21:3;;;;;;;;;;5618:12;:10;:12::i;:::-;5609:6;:21;;-1:-1:-1;;;;;;5609:21:3;-1:-1:-1;;;;;5609:21:3;;;;;;;;;;1539:12:8;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1561:16:8;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1665:49:8;1684:29;-1:-1:-1;;;;;1665:18:8;:49;:::i;:::-;1725:44;1753:15;1725:27;;;;;:44;;:::i;:::-;1441:336;;;925:1239;;1444:190:2;1519:25;;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1587:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1587:40:2;1623:4;1587:40;;;1444:190::o;6104:90:3:-;6176:10;6104:90;;:::o;7440:144::-;6685:6;;-1:-1:-1;;;;;6685:6:3;6669:12;-1:-1:-1;;;;;6669:10:3;:12;:::i;:::-;-1:-1:-1;;;;;6669:22:3;;6668:52;;;-1:-1:-1;6713:6:3;;-1:-1:-1;;;;;6713:6:3;6697:12;-1:-1:-1;;;;;6697:10:3;:12;:::i;:::-;-1:-1:-1;;;;;6697:22:3;;6668:52;6647:126;;;;;;;;;;;;;;7538:8;:39;;-1:-1:-1;;;;;;7538:39:3;-1:-1:-1;;;;;7538:39:3;;;;;;;;;;7440:144::o;925:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;925:1239:8;;;-1:-1:-1;925:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;819:24;;-1:-1;;;;;852:30;;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;-1:-1;;;;;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1600:66;1580:87;;1695:2;1686:12;;1486:218;-1:-1;;1486:218;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1973:66;1953:87;;2068:2;2059:12;;1859:218;-1:-1;;1859:218;2085:407;2276:2;2290:47;;;2261:18;;2351:131;2261:18;2351:131;;2499:407;2690:2;2704:47;;;2675:18;;2765:131;2675:18;2765:131;;2913:256;2975:2;2969:9;3001:17;;;-1:-1;;;;;3061:34;;3097:22;;;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3149;3142:22;2953:216;;-1:-1;2953:216;3176:322;;-1:-1;;;;;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;-1:-1;3483:4;3419;3396:17;;;;-1:-1;;3392:33;3473:15;;3243:255;3506:163;3609:19;;;3658:4;3649:14;;3602:67;3677:91;;-1:-1;;;;;3837:54;;3739:24;3820:76;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4057:11;;;4051:18;4038:11;;;4031:39;4012:2;4005:10;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;;925:1239:8;;;;;;",
  "deployedSourceMap": "925:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;917:133:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9763:756:3;;;;;;;;;:::i;:::-;;;;;;;;1882:83:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1882:83:8;;;:::i;:::-;;;;;;;;25798:236:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25798:236:3;;;;;;;;:::i;:::-;;;;;;;;24963:550;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;24963:550:3;;;;;;;;:::i;:::-;;2063:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2063:40:3;;;:::i;22324:98::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22324:98:3;;;:::i;12263:764::-;;;;;;;;;:::i;27597:561::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;27597:561:3;;;;;;;;:::i;21205:985::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;21205:985:3;;;;;;;;:::i;:::-;;;;;;;;7951:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7951:120:3;;;;;;;;:::i;37031:128::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37031:128:3;;;:::i;28807:134::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28807:134:3;;;;;;;;:::i;34957:230::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;34957:230:3;;;;;;;;:::i;1091:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1091:21:3;;;:::i;4391:26::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4391:26:3;;;:::i;37191:305::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37191:305:3;;;:::i;23103:152::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23103:152:3;;;;;;;;:::i;22631:253::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22631:253:3;;;;;;;;:::i;1064:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1064:21:3;;;:::i;20392:403::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;20392:403:3;;;;;;;;:::i;:::-;;;;;;;;1186:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1186:32:3;;;:::i;:::-;;;;;;;;7678:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7678:105:3;;;;;;;;:::i;36773:80::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36773:80:3;;;:::i;23673:840::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23673:840:3;;;;;;;;:::i;2074:87:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2074:87:8;;;:::i;26327:309:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;26327:309:3;;;;;;;;:::i;19938:330::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;19938:330:3;;;;;;;;:::i;8430:108::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8430:108:3;;;;;;;;:::i;29663:594::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;29663:594:3;;;;;;;;:::i;10608:679::-;;;;;;;;;:::i;8952:671::-;;;;;;;;;:::i;7440:144::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7440:144:3;;;;;;;;:::i;15807:231::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15807:231:3;;;;;;;;:::i;7117:169::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7117:169:3;;;;;;;;:::i;18729:789::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18729:789:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;6941:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6941:169:3;;;;;;;;:::i;26975:185::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;26975:185:3;;;;;;;;:::i;11448:712::-;;;;;;;;;:::i;917:133:2:-;-1:-1:-1;;;;;;1010:33:2;;987:4;1010:33;;;;;;;;;;;;;917:133;;;;:::o;9763:756:3:-;10091:7;8716:22;8725:12;:10;:12::i;8716:22::-;8695:122;;;;-1:-1:-1;;;8695:122:3;;;;;;;;;;;;;;;;;36529:6;;;;36528:7;36520:16;;;;;;10136:7;;10123:9;:20;;10115:29;;;;;;10176:63;10193:9;10204;10215:7;10224:14;10176:16;:63::i;:::-;10155:135;;;;-1:-1:-1;;;10155:135:3;;;;;;;;;10301:15;10319:19;10325:12;:10;:12::i;:::-;10319:5;:19::i;:::-;10301:37;;10348:97;10366:7;10375:9;10386:12;10400:9;10411:7;10420:14;10436:8;10348:17;:97::i;:::-;10455:31;10468:7;10477:8;10455:12;:31::i;:::-;10504:7;9763:756;-1:-1:-1;;;;;;;;9763:756:3:o;1882:83:8:-;1953:5;1946:12;;;;;;;;-1:-1:-1;;1946:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1921:13;;1946:12;;1953:5;;1946:12;;1953:5;1946:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:83;;:::o;25798:236:3:-;25857:7;25898:16;25906:7;25898;:16::i;:::-;25877:107;;;;-1:-1:-1;;;25877:107:3;;;;;;;;;-1:-1:-1;26002:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;26002:24:3;;25798:236::o;24963:550::-;8258:27;8272:12;:10;:12::i;8258:27::-;8237:107;;;;-1:-1:-1;;;8237:107:3;;;;;;;;;36529:6;;;;36528:7;36520:16;;;;;;25085:18;25106:16;25114:7;25106;:16::i;:::-;25085:37;;25160:10;-1:-1:-1;;;;;25154:16:3;:2;-1:-1:-1;;;;;25154:16:3;;;25133:92;;;;-1:-1:-1;;;25133:92:3;;;;;;;;;25273:10;-1:-1:-1;;;;;25257:26:3;:12;:10;:12::i;:::-;-1:-1:-1;;;;;25257:26:3;;:72;;;;25287:42;25304:10;25316:12;:10;:12::i;25287:42::-;25236:181;;;;-1:-1:-1;;;25236:181:3;;;;;;;;;25428:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;25428:29:3;-1:-1:-1;;;;;25428:29:3;;;;;;;;;25472:33;;25428:24;;25472:33;;;;;;;36546:1;24963:550;;:::o;2063:40::-;;;;:::o;22324:98::-;22368:7;22395:19;:9;:17;:19::i;:::-;22388:26;;22324:98;:::o;12263:764::-;12595:7;8716:22;8725:12;:10;:12::i;8716:22::-;8695:122;;;;-1:-1:-1;;;8695:122:3;;;;;;;;;36529:6;;;;36528:7;36520:16;;;;;;12640:7;;12627:9;:20;;12619:29;;;;;;12680:63;12697:9;12708;12719:7;12728:14;12680:16;:63::i;:::-;12659:135;;;;-1:-1:-1;;;12659:135:3;;;;;;;;;12805:15;12823:23;12833:12;:10;:12::i;:::-;12823:9;:23::i;27597:561::-;36529:6;;;;36528:7;36520:16;;;;;;27735:41;27754:12;:10;:12::i;:::-;27768:7;27735:18;:41::i;:::-;27714:137;;;;-1:-1:-1;;;27714:137:3;;;;;;;;;27883:19;27897:4;27883:13;:19::i;:::-;27862:118;;;;-1:-1:-1;;;27862:118:3;;;;;;;;;28012:17;28026:2;28012:13;:17::i;:::-;27991:116;;;;-1:-1:-1;;;27991:116:3;;;;;;;;;28118:32;28132:4;28138:2;28142:7;28118:13;:32::i;:::-;27597:561;;;:::o;21205:985::-;21268:16;-1:-1:-1;;;;;21318:20:3;;21297:104;;;;-1:-1:-1;;;21297:104:3;;;;;;;;;-1:-1:-1;;;;;21433:26:3;;21412:18;21433:26;;;:18;:26;;;;;:36;;:34;:36::i;:::-;21412:57;-1:-1:-1;21483:15:3;21479:704;;21558:16;;;21572:1;21558:16;;;;;;;;;;;;21551:23;;;;;21479:704;21605:23;21645:10;21631:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;21631:25:3;;21605:51;;21670:19;21692:13;:11;:13::i;:::-;21670:35;-1:-1:-1;21719:19:3;21922:1;21907:238;21936:11;21925:7;:22;21907:238;;21982:25;;;;:16;:25;;;;;:32;-1:-1:-1;;;;;21982:42:3;;;:32;;:42;21978:153;;;22070:7;22048:6;22055:11;22048:19;;;;;;;;;;;;;;;;;:29;22099:13;;;;;21978:153;21949:9;;21907:238;;;22166:6;22159:13;;;;;;;;;7951:120;8034:8;;:30;;-1:-1:-1;;;8034:30:3;;8011:4;;-1:-1:-1;;;;;8034:8:3;;:22;;:30;;8057:6;;8034:30;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8034:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8034:30:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8034:30:3;;;;;;;;;8027:37;7951:120;-1:-1:-1;;7951:120:3:o;37031:128::-;6685:6;;-1:-1:-1;;;;;6685:6:3;6669:12;:10;:12::i;:::-;-1:-1:-1;;;;;6669:22:3;;6668:52;;;-1:-1:-1;6713:6:3;;-1:-1:-1;;;;;6713:6:3;6697:12;:10;:12::i;:::-;-1:-1:-1;;;;;6697:22:3;;6668:52;6647:126;;;;-1:-1:-1;;;6647:126:3;;;;;;;;;36670:6;;;;36662:15;;;;;;37138:6;:14;;-1:-1:-1;;37138:14:3;;;37031:128::o;28807:134::-;28894:39;28911:4;28917:2;28921:7;28894:39;;;;;;;;;;;;:16;:39::i;34957:230::-;36529:6;;;;36528:7;36520:16;;;;;;35041:41;35060:12;:10;:12::i;35041:41::-;35020:134;;;;-1:-1:-1;;;35020:134:3;;;;;;;;;35165:14;35171:7;35165:5;:14::i;:::-;34957:230;:::o;1091:21::-;;;-1:-1:-1;;;;;1091:21:3;;:::o;4391:26::-;;;;;;:::o;37191:305::-;6685:6;;-1:-1:-1;;;;;6685:6:3;6669:12;:10;:12::i;:::-;-1:-1:-1;;;;;6669:22:3;;6668:52;;;-1:-1:-1;6713:6:3;;-1:-1:-1;;;;;6713:6:3;6697:12;:10;:12::i;:::-;-1:-1:-1;;;;;6697:22:3;;6668:52;6647:126;;;;-1:-1:-1;;;6647:126:3;;;;;;;;;37409:34;;37367:4;37359:21;;37344:12;;37409:10;;37359:21;;37409:34;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;37390:53:3;;;37461:7;37453:35;;;;-1:-1:-1;;;37453:35:3;;;;;;;;;6783:1;;37191:305::o;23103:152::-;23158:7;23199:20;;;:11;:20;;;;;;-1:-1:-1;;;;;23199:20:3;;23103:152::o;22631:253::-;22691:7;-1:-1:-1;;;;;22732:24:3;;22711:108;;;;-1:-1:-1;;;22711:108:3;;;;;;;;;-1:-1:-1;;;;;22837:29:3;;;;;;:17;:29;;;;;:39;;:37;:39::i;1064:21::-;;;-1:-1:-1;;;;;1064:21:3;;:::o;20392:403::-;-1:-1:-1;;;;;20574:35:3;;;;;;:27;:35;;;;;;;:46;;20514:15;;;;20574:46;;20610:9;;;;20574:46;;;;;;;;;;;;;;;20542:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20542:78:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20630:17;20663:1;:8;20650:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20630:42:3;-1:-1:-1;20688:6:3;20683:86;20704:1;:8;20700:1;:12;20683:86;;;20741:1;20743;20741:4;;;;;;;;;;;;;;:17;;;20733:1;20735;20733:4;;;;;;;;;;;;;;;;;:25;20714:3;;20683:86;;;-1:-1:-1;20786:1:3;20392:403;-1:-1:-1;;;;;20392:403:3:o;1186:32::-;;;-1:-1:-1;;;;;1186:32:3;;:::o;7678:105::-;6685:6;;-1:-1:-1;;;;;6685:6:3;6669:12;:10;:12::i;:::-;-1:-1:-1;;;;;6669:22:3;;6668:52;;;-1:-1:-1;6713:6:3;;-1:-1:-1;;;;;6713:6:3;6697:12;:10;:12::i;:::-;-1:-1:-1;;;;;6697:22:3;;6668:52;6647:126;;;;-1:-1:-1;;;6647:126:3;;;;;;;;;7762:7;:13;7678:105::o;36773:80::-;6685:6;;-1:-1:-1;;;;;6685:6:3;6669:12;:10;:12::i;:::-;-1:-1:-1;;;;;6669:22:3;;6668:52;;;-1:-1:-1;6713:6:3;;-1:-1:-1;;;;;6713:6:3;6697:12;:10;:12::i;:::-;-1:-1:-1;;;;;6697:22:3;;6668:52;6647:126;;;;-1:-1:-1;;;6647:126:3;;;;;;;;;36529:6;;;;36528:7;36520:16;;;;;;36833:6;:13;;-1:-1:-1;;36833:13:3;36842:4;36833:13;;;36773:80::o;23673:840::-;23738:16;23766:18;23787:21;23797:10;23787:9;:21::i;:::-;23766:42;-1:-1:-1;23822:15:3;23818:689;;23897:16;;;23911:1;23897:16;;;;;;;;;;;;23818:689;23944:23;23984:10;23970:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;23970:25:3;;23944:51;;24009:19;24031:13;:11;:13::i;:::-;24009:35;-1:-1:-1;24058:19:3;24254:1;24239:230;24268:11;24257:7;:22;24239:230;;24314:20;;;;:11;:20;;;;;;-1:-1:-1;;;;;24314:34:3;;;:20;;:34;24310:145;;;24394:7;24372:6;24379:11;24372:19;;;;;;;;;;;;;;;;;:29;24423:13;;;;;24310:145;24281:9;;24239:230;;2074:87:8;2147:7;2140:14;;;;;;;;-1:-1:-1;;2140:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2115:13;;2140:14;;2147:7;;2140:14;;2147:7;2140:14;;;;;;;;;;;;;;;;;;;;;;;;26327:309:3;8258:27;8272:12;:10;:12::i;8258:27::-;8237:107;;;;-1:-1:-1;;;8237:107:3;;;;;;;;;36529:6;;;;36528:7;36520:16;;;;;;26471:12;:10;:12::i;:::-;-1:-1:-1;;;;;26465:18:3;:2;-1:-1:-1;;;;;26465:18:3;;;26457:56;;;;-1:-1:-1;;;26457:56:3;;;;;;;;;26563:8;26524:18;:32;26543:12;:10;:12::i;:::-;-1:-1:-1;;;;;26524:32:3;;;;;;;;;;;;;;;;;-1:-1:-1;26524:32:3;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;26524:47:3;;;;;;;;;;;26601:12;:10;:12::i;:::-;-1:-1:-1;;;;;26586:42:3;;26619:8;26586:42;;;;;;;;;;;;;;;26327:309;;:::o;19938:330::-;-1:-1:-1;;;;;20065:32:3;;;;;;:24;:32;;;;;;;;20036:61;;;;;;;;;;;;;;;;;20008:15;;;;20036:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20036:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20107:17;20140:1;:8;20127:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20107:42:3;-1:-1:-1;20165:6:3;20160:82;20181:1;:8;20177:1;:12;20160:82;;;20217:1;20219;20217:4;;;;;;;;;;;;;;:14;;;20210:1;20212;20210:4;;;;;;;;;;;;;;;;;:21;20191:3;;20160:82;;;-1:-1:-1;20259:1:3;19938:330;-1:-1:-1;;;19938:330:3:o;8430:108::-;8486:4;8509:22;8523:7;8509:13;:22::i;29663:594::-;36529:6;;;;36528:7;36520:16;;;;;;29824:19;29838:4;29824:13;:19::i;:::-;29803:118;;;;-1:-1:-1;;;29803:118:3;;;;;;;;;29953:17;29967:2;29953:13;:17::i;:::-;29932:116;;;;-1:-1:-1;;;29932:116:3;;;;;;;;;30080:41;30099:12;:10;:12::i;:::-;30113:7;30080:18;:41::i;:::-;30059:137;;;;-1:-1:-1;;;30059:137:3;;;;;;;;;30207:42;30225:4;30231:2;30235:7;30244:4;30207:17;:42::i;:::-;29663:594;;;;:::o;10608:679::-;10896:7;8716:22;8725:12;:10;:12::i;8716:22::-;8695:122;;;;-1:-1:-1;;;8695:122:3;;;;;;;;;36529:6;;;;36528:7;36520:16;;;;;;10941:7;;10928:9;:20;;10920:29;;;;;;10981:63;10998:9;11009;11020:7;11029:14;10981:16;:63::i;:::-;10960:135;;;;-1:-1:-1;;;10960:135:3;;;;;;;;;11106:15;11124:23;11134:12;:10;:12::i;11124:23::-;11106:41;;11157:97;11175:7;11184:9;11195:12;11209:9;11220:7;11229:14;11245:8;11157:17;:97::i;:::-;11272:7;10608:679;-1:-1:-1;;;;;;;10608:679:3:o;8952:671::-;9236:7;8716:22;8725:12;:10;:12::i;8716:22::-;8695:122;;;;-1:-1:-1;;;8695:122:3;;;;;;;;;36529:6;;;;36528:7;36520:16;;;;;;9281:7;;9268:9;:20;;9260:29;;;;;;9321:63;9338:9;9349;9360:7;9369:14;9321:16;:63::i;:::-;9300:135;;;;-1:-1:-1;;;9300:135:3;;;;;;;;;9446:15;9464:19;9470:12;:10;:12::i;7440:144::-;6685:6;;-1:-1:-1;;;;;6685:6:3;6669:12;:10;:12::i;:::-;-1:-1:-1;;;;;6669:22:3;;6668:52;;;-1:-1:-1;6713:6:3;;-1:-1:-1;;;;;6713:6:3;6697:12;:10;:12::i;:::-;-1:-1:-1;;;;;6697:22:3;;6668:52;6647:126;;;;-1:-1:-1;;;6647:126:3;;;;;;;;;7538:8;:39;;-1:-1:-1;;;;;;7538:39:3;-1:-1:-1;;;;;7538:39:3;;;;;;;;;;7440:144::o;15807:231::-;15865:13;15912:16;15920:7;15912;:16::i;:::-;15891:102;;;;-1:-1:-1;;;15891:102:3;;;;;;;;;16011:19;;;;:10;:19;;;;;;;;;16004:26;;;;;;-1:-1:-1;;16004:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16011:19;;16004:26;;16011:19;16004:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15807:231;;;:::o;7117:169::-;6685:6;;-1:-1:-1;;;;;6685:6:3;6669:12;:10;:12::i;:::-;-1:-1:-1;;;;;6669:22:3;;6668:52;;;-1:-1:-1;6713:6:3;;-1:-1:-1;;;;;6713:6:3;6697:12;:10;:12::i;:::-;-1:-1:-1;;;;;6697:22:3;;6668:52;6647:126;;;;-1:-1:-1;;;6647:126:3;;;;;;;;;-1:-1:-1;;;;;7214:22:3;;;7210:70;;7252:6;:17;;-1:-1:-1;;;;;7252:17:3;;-1:-1:-1;;;;;;7252:17:3;;;;;;7117:169;:::o;18729:789::-;18805:14;18833:13;18860:23;18897:26;18937:16;18967:14;18995:21;19030:15;19084:16;19092:7;19084;:16::i;:::-;19063:92;;;;-1:-1:-1;;;19063:92:3;;;;;;;;;19166:25;;:::i;:::-;19194;;;;:16;:25;;;;;;;;;19166:53;;;;;;;;;-1:-1:-1;;;;;19166:53:3;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19166:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;19194:25;;19166:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19166:53:3;;;-1:-1:-1;;19166:53:3;;;;;;;;;;;;;;;;-1:-1:-1;;19166:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19166:53:3;;;-1:-1:-1;;19166:53:3;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19166:53:3;;;;;;;-1:-1:-1;;;19166:53:3;;;;;;;;;19251:16;;;;-1:-1:-1;19281:16:3;19289:7;19281;:16::i;:::-;19311:19;;;;19344:22;;;;19380:19;;;;19413:17;;;;19444:24;;;;19482:18;;;;;19230:280;;-1:-1:-1;19230:280:3;;-1:-1:-1;19311:19:3;;-1:-1:-1;19344:22:3;-1:-1:-1;19380:19:3;-1:-1:-1;19413:17:3;-1:-1:-1;19444:24:3;;-1:-1:-1;19482:18:3;-1:-1:-1;18729:789:3;;;;;;;;;:::o;6941:169::-;6685:6;;-1:-1:-1;;;;;6685:6:3;6669:12;:10;:12::i;:::-;-1:-1:-1;;;;;6669:22:3;;6668:52;;;-1:-1:-1;6713:6:3;;-1:-1:-1;;;;;6713:6:3;6697:12;:10;:12::i;:::-;-1:-1:-1;;;;;6697:22:3;;6668:52;6647:126;;;;-1:-1:-1;;;6647:126:3;;;;;;;;;-1:-1:-1;;;;;7038:22:3;;;7034:70;;7076:6;:17;;-1:-1:-1;;;;;7076:17:3;;-1:-1:-1;;;;;;7076:17:3;;;;;;6941:169;:::o;26975:185::-;-1:-1:-1;;;;;27112:30:3;;;27084:4;27112:30;;;:18;:30;;;;;;;;:40;;;;;;;;;;;;;;;26975:185::o;11448:712::-;11763:7;8716:22;8725:12;:10;:12::i;8716:22::-;8695:122;;;;-1:-1:-1;;;8695:122:3;;;;;;;;;36529:6;;;;36528:7;36520:16;;;;;;11808:7;;11795:9;:20;;11787:29;;;;;;11848:63;11865:9;11876;11887:7;11896:14;11848:16;:63::i;:::-;11827:135;;;;-1:-1:-1;;;11827:135:3;;;;;;;;;11973:15;11991:29;12001:12;:10;:12::i;:::-;12015:4;11991:9;:29::i;:::-;11973:47;;12030:97;12048:7;12057:9;12068:12;12082:9;12093:7;12102:14;12118:8;12030:17;:97::i;6104:90::-;6176:10;6104:90;:::o;16096:614::-;16303:8;;:49;;-1:-1:-1;;;16303:49:3;;16265:4;;-1:-1:-1;;;;;16303:8:3;;:38;;:49;;16342:9;;16303:49;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16303:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16303:49:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;16303:49:3;;;;;;;;;16282:142;;;;-1:-1:-1;;;16282:142:3;;;;;;;;;16468:14;16456:26;;:9;:26;;;16435:126;;;;-1:-1:-1;;;16435:126:3;;;;;;;;;16603:9;16593:19;;:7;:19;;;16572:108;;;;-1:-1:-1;;;16572:108:3;;;;;;;;;-1:-1:-1;16698:4:3;16096:614;;;;;;;:::o;14715:410::-;14760:7;-1:-1:-1;;;;;14788:16:3;;14780:61;;;;-1:-1:-1;;;14780:61:3;;;;;;;;;14852:21;:9;:19;:21::i;:::-;14883:15;14901:19;:9;:17;:19::i;:::-;14931:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;14931:25:3;-1:-1:-1;;;;;14931:25:3;;;;;;;;14966:21;;:17;:21;;;;;14931:20;;-1:-1:-1;14966:33:3;;:31;:33::i;:::-;-1:-1:-1;;;;;15009:22:3;;;;;;:18;:22;;;;;:34;;:32;:34::i;:::-;15059:33;;15084:7;;-1:-1:-1;;;;;15059:33:3;;;15076:1;;15059:33;;15076:1;;15059:33;15110:7;14715:410;-1:-1:-1;;14715:410:3:o;17619:1103::-;17893:16;17901:7;17893;:16::i;:::-;17872:89;;;;-1:-1:-1;;;17872:89:3;;;;;;;;;17972:25;;:::i;:::-;18000:325;;;;;;;;18039:12;:10;:12::i;:::-;-1:-1:-1;;;;;18000:325:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18336:25:3;;;:16;:25;;;;;;:37;;;;-1:-1:-1;;;;;;18336:37:3;;;;;;;;;;;;;;;;;-1:-1:-1;18336:37:3;;:25;;:37;;-1:-1:-1;18336:37:3;;;;;;;;:::i;:::-;-1:-1:-1;18336:37:3;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18336:37:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18336:37:3;-1:-1:-1;;;;18336:37:3;;;;-1:-1:-1;;;18336:37:3;-1:-1:-1;;;;18336:37:3;;;;;-1:-1:-1;;18336:37:3;;;;-1:-1:-1;;18336:37:3;;;;;;;;;;;;;;;;;;;;;;;;18389;18416:9;18389:26;:37::i;:::-;18384:142;;18442:24;:38;18467:12;:10;:12::i;:::-;-1:-1:-1;;;;;18442:38:3;;;;;;;;;;;;;;;-1:-1:-1;18442:38:3;;;18487:26;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;18442:73:3;;;;;;;;;;;23:18:-1;;18442:73:3;;;;;;;;;;;;;;;:::i;:::-;;;;;18384:142;18541:54;18571:9;18582:12;18541:29;:54::i;:::-;18536:179;;18611:27;:41;18639:12;:10;:12::i;:::-;-1:-1:-1;;;;;18611:41:3;-1:-1:-1;;;;;18611:41:3;;;;;;;;;;;;18653:9;18611:52;;;;;;;;;;;;;;;;;;;;;;;;18670:32;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;-1:-1;18611:93:3;;;;;;;;;;;23:18:-1;;18611:52:3;:93;;;;;;;;;;;;;:::i;:::-;;;;;18536:179;17619:1103;;;;;;;;:::o;15394:221::-;15493:16;15501:7;15493;:16::i;:::-;15472:99;;;;-1:-1:-1;;;15472:99:3;;;;;;;;;15582:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;31472:165::-;31529:4;31567:20;;;:11;:20;;;;;;-1:-1:-1;;;;;31567:20:3;31605:24;;;31472:165::o;1061:112:1:-;1152:14;;1061:112::o;13520:136:3:-;13569:7;13589:15;13607:17;13617:2;13607:17;;;;;;;;;;;;:9;:17::i;:::-;13589:35;13520:136;-1:-1:-1;;;13520:136:3:o;31998:411::-;32107:4;32149:16;32157:7;32149;:16::i;:::-;32128:107;;;;-1:-1:-1;;;32128:107:3;;;;;;;;;32246:18;32267:16;32275:7;32267;:16::i;:::-;32246:37;;32314:10;-1:-1:-1;;;;;32303:21:3;:7;-1:-1:-1;;;;;32303:21:3;;:56;;;;32352:7;-1:-1:-1;;;;;32328:31:3;:20;32340:7;32328:11;:20::i;:::-;-1:-1:-1;;;;;32328:31:3;;32303:56;:97;;;;32363:37;32380:10;32392:7;32363:16;:37::i;32790:518::-;32917:4;-1:-1:-1;;;;;32897:24:3;:16;32905:7;32897;:16::i;:::-;-1:-1:-1;;;;;32897:24:3;;32876:112;;;;-1:-1:-1;;;32876:112:3;;;;;;;;;-1:-1:-1;;;;;33020:16:3;;32999:99;;;;-1:-1:-1;;;32999:99:3;;;;;;;;;33109:23;33124:7;33109:14;:23::i;:::-;-1:-1:-1;;;;;33143:23:3;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;33188:21:3;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;33232:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;33232:25:3;-1:-1:-1;;;;;33232:25:3;;;;;;;;;33273:27;;33232:20;;33273:27;;;;;;;32790:518;;;:::o;36239:92::-;36291:32;36297:16;36305:7;36297;:16::i;:::-;36315:7;36291:5;:32::i;30961:316::-;31082:32;31096:4;31102:2;31106:7;31082:13;:32::i;:::-;31146:47;31169:4;31175:2;31179:7;31188:4;31146:22;:47::i;:::-;31125:144;;;;-1:-1:-1;;;31125:144:3;;;;;;;;14220:309;14288:7;14308:15;14326:9;14332:2;14326:5;:9::i;:::-;14308:27;;14367:53;14398:1;14402:2;14406:7;14415:4;14367:22;:53::i;:::-;14346:150;;;;-1:-1:-1;;;14346:150:3;;;;;;;;1179:89:1;1242:19;;1260:1;1242:19;;;1179:89::o;16717:413:3:-;16887:10;16816:4;16862:36;;;:24;:36;;;;;;;;16833:65;;;;;;;;;;;;;;;;;:26;;16816:4;;16833:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16833:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16833:65:3;;-1:-1:-1;16908:15:3;;-1:-1:-1;16908:15:3;;-1:-1:-1;;16941:155:3;16962:1;:8;16958:1;:12;16941:155;;;16995:39;17008:9;17019:1;17021;17019:4;;;;;;;;;;;;;;:14;;;16995:12;:39::i;:::-;16991:95;;;17067:4;17054:17;;16991:95;16972:3;;16941:155;;17137:475;17352:10;17275:4;17324:39;;;:27;:39;;;;;;:50;;17292:29;;17324:39;:50;;17364:9;;17324:50;;;;;;;;;;;;;;;17292:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17292:82:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17292:82:3;;-1:-1:-1;17384:15:3;;-1:-1:-1;17384:15:3;;-1:-1:-1;;17417:161:3;17438:1;:8;17434:1;:12;17417:161;;;17471:45;17484:12;17498:1;17500;17498:4;;;;;;;17471:45;17467:101;;;17549:4;17536:17;;17467:101;17448:3;;17417:161;;;-1:-1:-1;17595:10:3;17137:475;-1:-1:-1;;;;17137:475:3:o;34415:173::-;34515:1;34479:24;;;:15;:24;;;;;;-1:-1:-1;;;;;34479:24:3;:38;34475:106;;34568:1;34533:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;34533:37:3;;;34415:173::o;1274:108:1:-;1354:14;;:21;;1373:1;1354:21;:18;:21;:::i;:::-;1337:38;;1274:108::o;35461:597:3:-;35574:10;-1:-1:-1;;;;;35554:30:3;:16;35562:7;35554;:16::i;:::-;-1:-1:-1;;;;;35554:30:3;;35533:114;;;;-1:-1:-1;;;35533:114:3;;;;;;;;;35658:23;35673:7;35658:14;:23::i;:::-;-1:-1:-1;;;;;35692:29:3;;;;;;:17;:29;;;;;:41;;:39;:41::i;:::-;35774:1;35743:20;;;:11;:20;;;;;;;;:33;;-1:-1:-1;;;;;;35743:33:3;;;35834:10;:19;;;;;35828:33;;-1:-1:-1;;35743:33:3;35828;;;35743;35828;;;;;;:38;35824:95;;35889:19;;;;:10;:19;;;;;35882:26;;;:::i;:::-;35968:25;;;;:16;:25;;;;;35961:32;;-1:-1:-1;;;;;;35961:32:3;;;35968:25;35961:32;;;;35968:25;35961:32;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;35961:32:3;;;;-1:-1:-1;;;;;;35961:32:3;;;36009:41;;36042:7;;35961:32;;-1:-1:-1;;;;;36009:41:3;;;;;35961:32;;36009:41;35461:597;;:::o;33896:357::-;34024:4;34050:15;:2;-1:-1:-1;;;;;34050:13:3;;:15::i;:::-;34045:58;;-1:-1:-1;34088:4:3;34081:11;;34045:58;34113:13;34145:2;-1:-1:-1;;;;;34129:36:3;;34166:12;:10;:12::i;:::-;34180:4;34186:7;34195:4;34129:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34129:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;34129:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;34129:71:3;;;;;;;;;-1:-1:-1;;;;;;34218:26:3;-1:-1:-1;;;34218:26:3;;-1:-1:-1;;33896:357:3;;;;;;:::o;37530:230::-;37655:4;37747:1;37729:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;37729:21:3;;;37719:32;;;;;;37711:1;37693:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;37693:21:3;;;37683:32;;;;;;:68;37675:78;;37530:230;;;;:::o;1276:134:10:-;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;559:797:0:-;619:4;1267:20;;1112:66;1306:15;;;;;:42;;-1:-1:-1;1325:23:0;;;1298:51;-1:-1:-1;;559:797:0:o;1846:187:10:-;1932:7;1967:12;1959:6;;;;1951:29;;;;-1:-1:-1;;;1951:29:10;;;;;;;;;;-1:-1:-1;;;2002:5:10;;;1846:187::o;925:1239:8:-;;;;;;;;;-1:-1:-1;925:1239:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;925:1239:8;;;-1:-1:-1;925:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;348:13;;366:30;348:13;366:30;;408:128;474:20;;499:32;474:20;499:32;;543:132;620:13;;638:32;620:13;638:32;;683:440;;784:3;777:4;769:6;765:17;761:27;751:2;;802:1;799;792:12;751:2;839:6;826:20;861:64;876:48;917:6;876:48;;;861:64;;;852:73;;945:6;938:5;931:21;981:4;973:6;969:17;1014:4;1007:5;1003:16;1049:3;1040:6;1035:3;1031:16;1028:25;1025:2;;;1066:1;1063;1056:12;1025:2;1076:41;1110:6;1105:3;1100;1076:41;;;744:379;;;;;;;;1146:336;;;1261:3;1254:4;1246:6;1242:17;1238:27;1228:2;;1279:1;1276;1269:12;1228:2;-1:-1;1299:20;;1339:18;1328:30;;1325:2;;;1371:1;1368;1361:12;1325:2;1405:4;1397:6;1393:17;1381:29;;1455:3;1448;1440:6;1436:16;1426:8;1422:31;1419:40;1416:2;;;1472:1;1469;1462:12;1416:2;1221:261;;;;;;1941:128;2007:20;;2032:32;2007:20;2032:32;;2076:130;2143:20;;2168:33;2143:20;2168:33;;2213:128;2279:20;;2304:32;2279:20;2304:32;;2348:241;;2452:2;2440:9;2431:7;2427:23;2423:32;2420:2;;;2468:1;2465;2458:12;2420:2;2503:1;2520:53;2565:7;2545:9;2520:53;;2596:366;;;2717:2;2705:9;2696:7;2692:23;2688:32;2685:2;;;2733:1;2730;2723:12;2685:2;2768:1;2785:53;2830:7;2810:9;2785:53;;;2775:63;;2747:97;2875:2;2893:53;2938:7;2929:6;2918:9;2914:22;2893:53;;;2883:63;;2854:98;2679:283;;;;;;2969:491;;;;3107:2;3095:9;3086:7;3082:23;3078:32;3075:2;;;3123:1;3120;3113:12;3075:2;3158:1;3175:53;3220:7;3200:9;3175:53;;;3165:63;;3137:97;3265:2;3283:53;3328:7;3319:6;3308:9;3304:22;3283:53;;;3273:63;;3244:98;3373:2;3391:53;3436:7;3427:6;3416:9;3412:22;3391:53;;;3381:63;;3352:98;3069:391;;;;;;3467:721;;;;;3631:3;3619:9;3610:7;3606:23;3602:33;3599:2;;;3648:1;3645;3638:12;3599:2;3683:1;3700:53;3745:7;3725:9;3700:53;;;3690:63;;3662:97;3790:2;3808:53;3853:7;3844:6;3833:9;3829:22;3808:53;;;3798:63;;3769:98;3898:2;3916:53;3961:7;3952:6;3941:9;3937:22;3916:53;;;3906:63;;3877:98;4034:2;4023:9;4019:18;4006:32;4058:18;4050:6;4047:30;4044:2;;;4090:1;4087;4080:12;4044:2;4110:62;4164:7;4155:6;4144:9;4140:22;4110:62;;;4100:72;;3985:193;3593:595;;;;;;;;4195:360;;;4313:2;4301:9;4292:7;4288:23;4284:32;4281:2;;;4329:1;4326;4319:12;4281:2;4364:1;4381:53;4426:7;4406:9;4381:53;;;4371:63;;4343:97;4471:2;4489:50;4531:7;4522:6;4511:9;4507:22;4489:50;;4562:492;;;;4703:2;4691:9;4682:7;4678:23;4674:32;4671:2;;;4719:1;4716;4709:12;4671:2;4754:1;4771:53;4816:7;4796:9;4771:53;;;4761:63;;4733:97;4889:2;4878:9;4874:18;4861:32;4913:18;4905:6;4902:30;4899:2;;;4945:1;4942;4935:12;4899:2;4973:65;5030:7;5021:6;5010:9;5006:22;4973:65;;;4963:75;;;;4840:204;4665:389;;;;;;5061:366;;;5182:2;5170:9;5161:7;5157:23;5153:32;5150:2;;;5198:1;5195;5188:12;5150:2;5233:1;5250:53;5295:7;5275:9;5250:53;;;5240:63;;5212:97;5340:2;5358:53;5403:7;5394:6;5383:9;5379:22;5358:53;;5434:257;;5546:2;5534:9;5525:7;5521:23;5517:32;5514:2;;;5562:1;5559;5552:12;5514:2;5597:1;5614:61;5667:7;5647:9;5614:61;;5698:239;;5801:2;5789:9;5780:7;5776:23;5772:32;5769:2;;;5817:1;5814;5807:12;5769:2;5852:1;5869:52;5913:7;5893:9;5869:52;;5944:261;;6058:2;6046:9;6037:7;6033:23;6029:32;6026:2;;;6074:1;6071;6064:12;6026:2;6109:1;6126:63;6181:7;6161:9;6126:63;;6212:1073;;;;;;;6417:3;6405:9;6396:7;6392:23;6388:33;6385:2;;;6434:1;6431;6424:12;6385:2;6469:31;;6520:18;6509:30;;6506:2;;;6552:1;6549;6542:12;6506:2;6572:63;6627:7;6618:6;6607:9;6603:22;6572:63;;;6562:73;;6448:193;6700:2;6689:9;6685:18;6672:32;6724:18;6716:6;6713:30;6710:2;;;6756:1;6753;6746:12;6710:2;6776:63;6831:7;6822:6;6811:9;6807:22;6776:63;;;6766:73;;6651:194;6876:2;6894:52;6938:7;6929:6;6918:9;6914:22;6894:52;;;6884:62;;6855:97;6983:2;7001:52;7045:7;7036:6;7025:9;7021:22;7001:52;;;6991:62;;6962:97;7090:3;7109:52;7153:7;7144:6;7133:9;7129:22;7109:52;;;7099:62;;7069:98;7198:3;7217:52;7261:7;7252:6;7241:9;7237:22;7217:52;;;7207:62;;7177:98;6379:906;;;;;;;;;7292:1303;;;;;;;;7523:3;7511:9;7502:7;7498:23;7494:33;7491:2;;;7540:1;7537;7530:12;7491:2;7575:31;;7626:18;7615:30;;7612:2;;;7658:1;7655;7648:12;7612:2;7678:63;7733:7;7724:6;7713:9;7709:22;7678:63;;;7668:73;;7554:193;7806:2;7795:9;7791:18;7778:32;7830:18;7822:6;7819:30;7816:2;;;7862:1;7859;7852:12;7816:2;7882:63;7937:7;7928:6;7917:9;7913:22;7882:63;;;7872:73;;7757:194;7982:2;8000:52;8044:7;8035:6;8024:9;8020:22;8000:52;;;7990:62;;7961:97;8089:2;8107:52;8151:7;8142:6;8131:9;8127:22;8107:52;;;8097:62;;8068:97;8196:3;8215:52;8259:7;8250:6;8239:9;8235:22;8215:52;;;8205:62;;8175:98;8304:3;8323:52;8367:7;8358:6;8347:9;8343:22;8323:52;;;8313:62;;8283:98;8440:3;8429:9;8425:19;8412:33;8465:18;8457:6;8454:30;8451:2;;;8497:1;8494;8487:12;8451:2;8517:62;8571:7;8562:6;8551:9;8547:22;8517:62;;;8507:72;;8391:194;7485:1110;;;;;;;;;;;9914:241;;10018:2;10006:9;9997:7;9993:23;9989:32;9986:2;;;10034:1;10031;10024:12;9986:2;10069:1;10086:53;10131:7;10111:9;10086:53;;10163:181;;10276:62;10334:3;10326:6;10276:62;;10353:173;;10440:46;10482:3;10474:6;10440:46;;;-1:-1;;10515:4;10506:14;;10433:93;10534:113;10617:24;10635:5;10617:24;;;10612:3;10605:37;10599:48;;;10683:896;;10840:60;10894:5;10840:60;;;10913:92;10998:6;10993:3;10913:92;;;10906:99;;11028:3;11070:4;11062:6;11058:17;11053:3;11049:27;11097:62;11153:5;11097:62;;;11179:7;11207:1;11192:348;11217:6;11214:1;11211:13;11192:348;;;11279:9;11273:4;11269:20;11264:3;11257:33;11324:6;11318:13;11346:76;11417:4;11402:13;11346:76;;;11338:84;;11439:66;11498:6;11439:66;;;11528:4;11519:14;;;;;11429:76;-1:-1;;11239:1;11232:9;11192:348;;;-1:-1;11553:4;;10819:760;-1:-1;;;;;;;10819:760;11618:690;;11763:54;11811:5;11763:54;;;11830:86;11909:6;11904:3;11830:86;;;11823:93;;11937:56;11987:5;11937:56;;;12013:7;12041:1;12026:260;12051:6;12048:1;12045:13;12026:260;;;12118:6;12112:13;12139:63;12198:3;12183:13;12139:63;;;12132:70;;12219:60;12272:6;12219:60;;;12209:70;-1:-1;;12073:1;12066:9;12026:260;;;-1:-1;12299:3;;11742:566;-1:-1;;;;;11742:566;12316:104;12393:21;12408:5;12393:21;;12427:343;;12537:38;12569:5;12537:38;;;12587:70;12650:6;12645:3;12587:70;;;12580:77;;12662:52;12707:6;12702:3;12695:4;12688:5;12684:16;12662:52;;;12735:29;12757:6;12735:29;;;12726:39;;;;12517:253;-1:-1;;;12517:253;12777:174;12884:61;12939:5;12884:61;;12983:313;;13117:89;13199:6;13194:3;13117:89;;;13110:96;;13218:43;13254:6;13249:3;13242:5;13218:43;;;-1:-1;;13274:16;;13103:193;13658:360;;13788:39;13821:5;13788:39;;;13839:89;13921:6;13916:3;13839:89;;;13832:96;;13933:52;13978:6;13973:3;13966:4;13959:5;13955:16;13933:52;;;13997:16;;;;;13768:250;-1:-1;;13768:250;14352:364;;14512:67;14576:2;14571:3;14512:67;;;14612:66;14592:87;;14707:2;14698:12;;14498:218;-1:-1;;14498:218;14725:465;;14885:67;14949:2;14944:3;14885:67;;;14985:66;14965:87;;-1:-1;;;15081:2;15072:12;;15065:88;15181:2;15172:12;;14871:319;-1:-1;;14871:319;15199:465;;15359:67;15423:2;15418:3;15359:67;;;15459:66;15439:87;;-1:-1;;;15555:2;15546:12;;15539:88;15655:2;15646:12;;15345:319;-1:-1;;15345:319;15673:364;;15833:67;15897:2;15892:3;15833:67;;;-1:-1;;;15913:87;;16028:2;16019:12;;15819:218;-1:-1;;15819:218;16046:465;;16206:67;16270:2;16265:3;16206:67;;;16306:66;16286:87;;-1:-1;;;16402:2;16393:12;;16386:88;16502:2;16493:12;;16192:319;-1:-1;;16192:319;16520:465;;16680:67;16744:2;16739:3;16680:67;;;16780:66;16760:87;;-1:-1;;;16876:2;16867:12;;16860:88;16976:2;16967:12;;16666:319;-1:-1;;16666:319;16994:465;;17154:67;17218:2;17213:3;17154:67;;;17254:66;17234:87;;-1:-1;;;17350:2;17341:12;;17334:88;17450:2;17441:12;;17140:319;-1:-1;;17140:319;17468:364;;17628:67;17692:2;17687:3;17628:67;;;17728:66;17708:87;;17823:2;17814:12;;17614:218;-1:-1;;17614:218;17841:465;;18001:67;18065:2;18060:3;18001:67;;;18101:66;18081:87;;-1:-1;;;18197:2;18188:12;;18181:88;18297:2;18288:12;;17987:319;-1:-1;;17987:319;18315:465;;18475:67;18539:2;18534:3;18475:67;;;18575:66;18555:87;;-1:-1;;;18671:2;18662:12;;18655:88;18771:2;18762:12;;18461:319;-1:-1;;18461:319;18789:465;;18949:67;19013:2;19008:3;18949:67;;;19049:66;19029:87;;-1:-1;;;19145:2;19136:12;;19129:88;19245:2;19236:12;;18935:319;-1:-1;;18935:319;19263:364;;19423:67;19487:2;19482:3;19423:67;;;19523:66;19503:87;;19618:2;19609:12;;19409:218;-1:-1;;19409:218;19636:465;;19796:67;19860:2;19855:3;19796:67;;;19896:66;19876:87;;-1:-1;;;19992:2;19983:12;;19976:88;20092:2;20083:12;;19782:319;-1:-1;;19782:319;20110:364;;20270:67;20334:2;20329:3;20270:67;;;20370:66;20350:87;;20465:2;20456:12;;20256:218;-1:-1;;20256:218;20483:465;;20643:67;20707:2;20702:3;20643:67;;;20743:66;20723:87;;20844:66;20839:2;20830:12;;20823:88;20939:2;20930:12;;20629:319;-1:-1;;20629:319;20957:364;;21117:67;21181:2;21176:3;21117:67;;;21217:66;21197:87;;21312:2;21303:12;;21103:218;-1:-1;;21103:218;21330:465;;21490:67;21554:2;21549:3;21490:67;;;21590:66;21570:87;;-1:-1;;;21686:2;21677:12;;21670:88;21786:2;21777:12;;21476:319;-1:-1;;21476:319;21804:465;;21964:67;22028:2;22023:3;21964:67;;;22064:66;22044:87;;-1:-1;;;22160:2;22151:12;;22144:88;22260:2;22251:12;;21950:319;-1:-1;;21950:319;22278:364;;22438:67;22502:2;22497:3;22438:67;;;22538:66;22518:87;;22633:2;22624:12;;22424:218;-1:-1;;22424:218;22651:296;;22828:83;22909:1;22904:3;22828:83;;22956:465;;23116:67;23180:2;23175:3;23116:67;;;23216:66;23196:87;;-1:-1;;;23312:2;23303:12;;23296:88;23412:2;23403:12;;23102:319;-1:-1;;23102:319;23430:465;;23590:67;23654:2;23649:3;23590:67;;;23690:66;23670:87;;-1:-1;;;23786:2;23777:12;;23770:88;23886:2;23877:12;;23576:319;-1:-1;;23576:319;23904:465;;24064:67;24128:2;24123:3;24064:67;;;24164:66;24144:87;;-1:-1;;;24260:2;24251:12;;24244:88;24360:2;24351:12;;24050:319;-1:-1;;24050:319;24378:364;;24538:67;24602:2;24597:3;24538:67;;;24638:66;24618:87;;24733:2;24724:12;;24524:218;-1:-1;;24524:218;24751:465;;24911:67;24975:2;24970:3;24911:67;;;25011:66;24991:87;;-1:-1;;;25107:2;25098:12;;25091:88;25207:2;25198:12;;24897:319;-1:-1;;24897:319;25225:465;;25385:67;25449:2;25444:3;25385:67;;;25485:66;25465:87;;-1:-1;;;25581:2;25572:12;;25565:88;25681:2;25672:12;;25371:319;-1:-1;;25371:319;25699:465;;25859:67;25923:2;25918:3;25859:67;;;25959:66;25939:87;;-1:-1;;;26055:2;26046:12;;26039:88;26155:2;26146:12;;25845:319;-1:-1;;25845:319;26172:110;26253:23;26270:5;26253:23;;26289:103;26362:24;26380:5;26362:24;;26519:110;26600:23;26617:5;26600:23;;26636:286;;26792:105;26893:3;26884:6;26876;26792:105;;26929:266;;27075:95;27166:3;27157:6;27075:95;;27202:370;;27400:147;27543:3;27400:147;;27579:213;27697:2;27682:18;;27711:71;27686:9;27755:6;27711:71;;27799:1155;28145:3;28130:19;;28160:71;28134:9;28204:6;28160:71;;;28242:72;28310:2;28299:9;28295:18;28286:6;28242:72;;;28362:9;28356:4;28352:20;28347:2;28336:9;28332:18;28325:48;28387:78;28460:4;28451:6;28387:78;;;28379:86;;28513:9;28507:4;28503:20;28498:2;28487:9;28483:18;28476:48;28538:78;28611:4;28602:6;28538:78;;;28530:86;;28627:71;28693:3;28682:9;28678:19;28669:6;28627:71;;;28709;28775:3;28764:9;28760:19;28751:6;28709:71;;;28791;28857:3;28846:9;28842:19;28833:6;28791:71;;;28873;28939:3;28928:9;28924:19;28915:6;28873:71;;;28116:838;;;;;;;;;;;;28961:631;29181:3;29166:19;;29196:71;29170:9;29240:6;29196:71;;;29278:72;29346:2;29335:9;29331:18;29322:6;29278:72;;;29361;29429:2;29418:9;29414:18;29405:6;29361:72;;;29481:9;29475:4;29471:20;29466:2;29455:9;29451:18;29444:48;29506:76;29577:4;29568:6;29506:76;;;29498:84;29152:440;-1:-1;;;;;;29152:440;29599:385;29779:2;29793:47;;;29764:18;;29854:120;29764:18;29960:6;29854:120;;29991:361;30159:2;30173:47;;;30144:18;;30234:108;30144:18;30328:6;30234:108;;30359:201;30471:2;30456:18;;30485:65;30460:9;30523:6;30485:65;;30567:261;30709:2;30694:18;;30723:95;30698:9;30791:6;30723:95;;30835:301;30973:2;30987:47;;;30958:18;;31048:78;30958:18;31112:6;31048:78;;31143:407;31334:2;31348:47;;;31319:18;;31409:131;31319:18;31409:131;;31557:407;31748:2;31762:47;;;31733:18;;31823:131;31733:18;31823:131;;31971:407;32162:2;32176:47;;;32147:18;;32237:131;32147:18;32237:131;;32385:407;32576:2;32590:47;;;32561:18;;32651:131;32561:18;32651:131;;32799:407;32990:2;33004:47;;;32975:18;;33065:131;32975:18;33065:131;;33213:407;33404:2;33418:47;;;33389:18;;33479:131;33389:18;33479:131;;33627:407;33818:2;33832:47;;;33803:18;;33893:131;33803:18;33893:131;;34041:407;34232:2;34246:47;;;34217:18;;34307:131;34217:18;34307:131;;34455:407;34646:2;34660:47;;;34631:18;;34721:131;34631:18;34721:131;;34869:407;35060:2;35074:47;;;35045:18;;35135:131;35045:18;35135:131;;35283:407;35474:2;35488:47;;;35459:18;;35549:131;35459:18;35549:131;;35697:407;35888:2;35902:47;;;35873:18;;35963:131;35873:18;35963:131;;36111:407;36302:2;36316:47;;;36287:18;;36377:131;36287:18;36377:131;;36525:407;36716:2;36730:47;;;36701:18;;36791:131;36701:18;36791:131;;36939:407;37130:2;37144:47;;;37115:18;;37205:131;37115:18;37205:131;;37353:407;37544:2;37558:47;;;37529:18;;37619:131;37529:18;37619:131;;37767:407;37958:2;37972:47;;;37943:18;;38033:131;37943:18;38033:131;;38181:407;38372:2;38386:47;;;38357:18;;38447:131;38357:18;38447:131;;38595:407;38786:2;38800:47;;;38771:18;;38861:131;38771:18;38861:131;;39009:407;39200:2;39214:47;;;39185:18;;39275:131;39185:18;39275:131;;39423:407;39614:2;39628:47;;;39599:18;;39689:131;39599:18;39689:131;;39837:407;40028:2;40042:47;;;40013:18;;40103:131;40013:18;40103:131;;40251:407;40442:2;40456:47;;;40427:18;;40517:131;40427:18;40517:131;;40665:407;40856:2;40870:47;;;40841:18;;40931:131;40841:18;40931:131;;41079:407;41270:2;41284:47;;;41255:18;;41345:131;41255:18;41345:131;;41493:407;41684:2;41698:47;;;41669:18;;41759:131;41669:18;41759:131;;41907:213;42025:2;42010:18;;42039:71;42014:9;42083:6;42039:71;;42127:256;42189:2;42183:9;42215:17;;;42290:18;42275:34;;42311:22;;;42272:62;42269:2;;;42347:1;42344;42337:12;42269:2;42363;42356:22;42167:216;;-1:-1;42167:216;42390:321;;42533:18;42525:6;42522:30;42519:2;;;42565:1;42562;42555:12;42519:2;-1:-1;42696:4;42632;42609:17;;;;-1:-1;;42605:33;42686:15;;42456:255;43047:157;43177:4;43168:14;;43125:79;43369:143;43478:12;;43449:63;44282:184;44406:19;;;44455:4;44446:14;;44399:67;45473:91;;45535:24;45553:5;45535:24;;45571:85;45637:13;45630:21;;45613:43;45663:144;-1:-1;;;;;;45724:78;;45707:100;45814:84;45886:6;45875:18;;45858:40;45905:121;-1:-1;;;;;45967:54;;45950:76;46112:92;46184:14;46173:26;;46156:48;46211:169;;46314:61;46369:5;46314:61;;46527:145;46608:6;46603:3;46598;46585:30;-1:-1;46664:1;46646:16;;46639:27;46578:94;46681:268;46746:1;46753:101;46767:6;46764:1;46761:13;46753:101;;;46834:11;;;46828:18;46815:11;;;46808:39;46789:2;46782:10;46753:101;;;46869:6;46866:1;46863:13;46860:2;;;-1:-1;;46934:1;46916:16;;46909:27;46730:219;46957:97;47045:2;47025:14;-1:-1;;47021:28;;47005:49;47062:117;47131:24;47149:5;47131:24;;;47124:5;47121:35;47111:2;;47170:1;47167;47160:12;47186:111;47252:21;47267:5;47252:21;;47304:115;47372:23;47389:5;47372:23;;47426:115;47494:23;47511:5;47494:23;;47548:117;47617:24;47635:5;47617:24;;47672:115;47740:23;47757:5;47740:23;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n\n\n  Copyright 2019 Niche Networks, Inc. (owns & operates Microsponsors.io)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2328
      ]
    },
    "id": 2329,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2272,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2273,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2274,
        "nodeType": "ImportDirective",
        "scope": 2329,
        "sourceUnit": 2119,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2275,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2118,
              "src": "951:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2118",
                "typeString": "contract ERC721"
              }
            },
            "id": 2276,
            "nodeType": "InheritanceSpecifier",
            "src": "951:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2118,
          2128,
          2231
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nCopyright 2019 Niche Networks, Inc. (owns & operates Microsponsors.io)\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2328,
        "linearizedBaseContracts": [
          2328,
          2118,
          2231,
          142,
          2128
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2278,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2328,
            "src": "983:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2277,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "983:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2280,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2328,
            "src": "1030:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2279,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2283,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2328,
            "src": "1319:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2281,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1319:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2282,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1375:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2310,
              "nodeType": "Block",
              "src": "1528:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2292,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2278,
                      "src": "1539:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2293,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2285,
                      "src": "1547:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1539:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2295,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2296,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2280,
                      "src": "1561:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2297,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "1571:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1561:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2301,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2283,
                        "src": "1684:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2300,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1665:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2303,
                  "nodeType": "ExpressionStatement",
                  "src": "1665:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2307,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2289,
                        "src": "1753:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2304,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2622,
                        "src": "1725:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2328",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 368,
                      "src": "1725:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2309,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2311,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2285,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "1454:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2284,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2287,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "1474:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2286,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2289,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "1496:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1453:67:8"
            },
            "returnParameters": {
              "id": 2291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1528:0:8"
            },
            "scope": 2328,
            "src": "1441:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2318,
              "nodeType": "Block",
              "src": "1936:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2316,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2278,
                    "src": "1953:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2315,
                  "id": 2317,
                  "nodeType": "Return",
                  "src": "1946:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1895:2:8"
            },
            "returnParameters": {
              "id": 2315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2314,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "1921:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2313,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1920:15:8"
            },
            "scope": 2328,
            "src": "1882:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2326,
              "nodeType": "Block",
              "src": "2130:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2324,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2280,
                    "src": "2147:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2323,
                  "id": 2325,
                  "nodeType": "Return",
                  "src": "2140:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:2:8"
            },
            "returnParameters": {
              "id": 2323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2322,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2327,
                  "src": "2115:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2321,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2114:15:8"
            },
            "scope": 2328,
            "src": "2074:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2329,
        "src": "925:1239:8"
      }
    ],
    "src": "0:2165:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2328
      ]
    },
    "id": 2329,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2272,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2273,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2274,
        "nodeType": "ImportDirective",
        "scope": 2329,
        "sourceUnit": 2119,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2275,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2118,
              "src": "951:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2118",
                "typeString": "contract ERC721"
              }
            },
            "id": 2276,
            "nodeType": "InheritanceSpecifier",
            "src": "951:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2118,
          2128,
          2231
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nCopyright 2019 Niche Networks, Inc. (owns & operates Microsponsors.io)\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2328,
        "linearizedBaseContracts": [
          2328,
          2118,
          2231,
          142,
          2128
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2278,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2328,
            "src": "983:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2277,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "983:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2280,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2328,
            "src": "1030:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2279,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2283,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2328,
            "src": "1319:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2281,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1319:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2282,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1375:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2310,
              "nodeType": "Block",
              "src": "1528:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2292,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2278,
                      "src": "1539:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2293,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2285,
                      "src": "1547:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1539:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2295,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2296,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2280,
                      "src": "1561:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2297,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "1571:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1561:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2301,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2283,
                        "src": "1684:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2300,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1665:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2303,
                  "nodeType": "ExpressionStatement",
                  "src": "1665:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2307,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2289,
                        "src": "1753:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2304,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2622,
                        "src": "1725:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2328",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 368,
                      "src": "1725:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2309,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2311,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2285,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "1454:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2284,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2287,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "1474:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2286,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2289,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "1496:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1453:67:8"
            },
            "returnParameters": {
              "id": 2291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1528:0:8"
            },
            "scope": 2328,
            "src": "1441:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2318,
              "nodeType": "Block",
              "src": "1936:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2316,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2278,
                    "src": "1953:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2315,
                  "id": 2317,
                  "nodeType": "Return",
                  "src": "1946:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1895:2:8"
            },
            "returnParameters": {
              "id": 2315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2314,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "1921:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2313,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1920:15:8"
            },
            "scope": 2328,
            "src": "1882:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2326,
              "nodeType": "Block",
              "src": "2130:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2324,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2280,
                    "src": "2147:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2323,
                  "id": 2325,
                  "nodeType": "Return",
                  "src": "2140:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:2:8"
            },
            "returnParameters": {
              "id": 2323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2322,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2327,
                  "src": "2115:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2321,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2114:15:8"
            },
            "scope": 2328,
            "src": "2074:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2329,
        "src": "925:1239:8"
      }
    ],
    "src": "0:2165:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {
    "1577761723030": {
      "events": {},
      "links": {},
      "address": "0x5c089b613757d2cA86cC07c013b5ffF6D5a8968d",
      "transactionHash": "0x15f60b8e98d79d4affd1f21b3b3082c9b622d33b1f6ab449248ff6f598f3ed67"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-12-31T03:38:23.465Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Customized for MicrosponsorsBurns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned"
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "isMinter(address)": {
        "details": "Checks if minter isWhitelisted()"
      },
      "isWhitelisted(address)": {
        "details": "Checks Registry contract for whitelisted status",
        "params": {
          "target": "The address to check"
        }
      },
      "mint(string,string,uint48,uint48,uint48,uint16)": {
        "details": "Function to mint tokens.",
        "return": "tokenId"
      },
      "mintWithTokenURI(string,string,uint48,uint48,uint48,uint16,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause actions on this contract"
      },
      "safeMint(string,string,uint48,uint48,uint48,uint16)": {
        "details": "Function to safely mint tokens.",
        "return": "tokenId"
      },
      "safeMint(string,string,uint48,uint48,uint48,uint16,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check."
        },
        "return": "tokenId"
      },
      "safeMintWithTokenURI(string,string,uint48,uint48,uint48,uint16,string)": {
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations."
      },
      "tokenMinterPropertyNames(address,string)": {
        "details": "Look up all Property Names a Minter has created Time Slots for      with a particular Content ID"
      },
      "tokenURI(uint256)": {
        "params": {
          "tokenId": "uint256 ID of the token to query"
        },
        "return": "URI for a given token ID."
      },
      "tokensMintedBy(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time)."
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership1(address)": {
        "details": "Transfer owner (admin) functions to another address",
        "params": {
          "newOwner": "Address of new owner/ admin of contract"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause the smart contract."
      },
      "updateMintFee(uint256)": {
        "details": "Update the fee (in wei) charged for minting a single token"
      },
      "updateRegistryAddress(address)": {
        "details": "Update contract address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "tokenURI(uint256)": {
        "notice": "Throws if the token ID does not exist. May return an empty string."
      },
      "tokensMintedBy(address)": {
        "notice": "Return all the Token IDs minted by a given account."
      },
      "unpause()": {
        "notice": "This is public rather than external so it can be called by  derived contracts."
      },
      "withdrawBalance()": {
        "notice": "* Withdraw **"
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Copyright 2019 Niche Networks, Inc. (owns & operates Microsponsors.io) Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  }
}