{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "safeMintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "startTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endTime",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endTime\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"isMinter(address)\":{\"details\":\"Checks if minter isWhitelisted()\"},\"isWhitelisted(address)\":{\"details\":\"Checks Registry contract for whitelisted status\",\"params\":{\"target\":\"The address to check\"}},\"mint(address,string,uint32,uint32)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\"},\"return\":\"tokenId\"},\"mintWithTokenURI(address,string,uint32,uint32,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause actions on this contract\"},\"safeMint(address,string,uint32,uint32)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\"},\"return\":\"tokenId\"},\"safeMint(address,string,uint32,uint32,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\",\"to\":\"The address that will receive the minted token.\"},\"return\":\"tokenId\"},\"safeMintWithTokenURI(address,string,uint32,uint32,string)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls.\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"},\"return\":\"uint256 Returns a list of all token id's assigned to an address.\"},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause the smart contract.\"},\"updateRegistryAddress(address)\":{\"details\":\"Update address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}}}},\"userdoc\":{\"methods\":{\"burn(uint256)\":{\"notice\":\"Customized for Microsponsors\"},\"mintWithTokenURI(address,string,uint32,uint32,string)\":{\"notice\":\"Customized for Microsponsors from: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol\"},\"safeMintWithTokenURI(address,string,uint32,uint32,string)\":{\"notice\":\"Customized for Microsponsors from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol\"},\"unpause()\":{\"notice\":\"This is public rather than external so it can be called by  derived contracts.\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0x54a63176594cb79f0091384c237437801b205fdda1ae3ce8ce0891825f01f78a\",\"urls\":[\"bzz-raw://df1ca45ca0a33b5d44834f19eab4dc057f654ce71cfbfa00cc3a90fe7f14e47f\",\"dweb:/ipfs/QmWHy8VuY9pBskMt6Hfx4KgyBCWGM6JXPBcQdMw7acRUGP\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0xc4090c7464a1aaa8d8930043bf5c97da63b7e2952bada1029c208902b2a0beb9\",\"urls\":[\"bzz-raw://0e69cdead09c30c19a1850ac7c46b256de08a6f12507bc849bccd9bc89940d68\",\"dweb:/ipfs/QmcSQeGBcGkapKJwK8WhvTyMHr52mfyHLWsCZmwsBzq3Kk\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600a60006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162004a2a38038062004a2a833981810160405260608110156200005257600080fd5b81019080805160405193929190846401000000008211156200007357600080fd5b838201915060208201858111156200008a57600080fd5b8251866001820283011164010000000082111715620000a857600080fd5b8083526020830192505050908051906020019080838360005b83811015620000de578082015181840152602081019050620000c1565b50505050905090810190601f1680156200010c5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200013057600080fd5b838201915060208201858111156200014757600080fd5b82518660018202830111640100000000821117156200016557600080fd5b8083526020830192505050908051906020019080838360005b838110156200019b5780820151818401526020810190506200017e565b50505050905090810190601f168015620001c95780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190505050620001f56301ffc9a760e01b620002c660201b60201c565b6200020d6380ac58cd60e01b620002c660201b60201c565b6200021d620003cf60201b60201c565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600b908051906020019062000275929190620004ee565b5081600c90805190602001906200028e929190620004ee565b50620002a7635b5e139f60e01b620002c660201b60201c565b620002bd81620003d760201b620026fc1760201c565b5050506200059d565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662000420620003cf60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620004aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4552433732313a2063616c6c6572206973206e6f74206f776e6572000000000081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200053157805160ff191683800117855562000562565b8280016001018555821562000562579182015b828111156200056157825182559160200191906001019062000544565b5b50905062000571919062000575565b5090565b6200059a91905b80821115620005965760008160009055506001016200057c565b5090565b90565b61447d80620005ad6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806383b6ecff1161010f578063b88d4fde116100a2578063e7e4a89711610071578063e7e4a89714610eeb578063e985e9c514611091578063f2fde38b1461110d578063f5070e5a14611151576101e5565b8063b88d4fde14610c2e578063c57a882514610d33578063c87b56dd14610d77578063e5c2492414610e1e576101e5565b806393829908116100de57806393829908146109f057806395d89b4114610aff578063a22cb46514610b82578063aa271e1a14610bd2576101e5565b806383b6ecff1461075d5780638456cb59146109035780638462151c1461090d5780638da5cb5b146109a6576101e5565b80633effe3a7116101875780635c975abb116101565780635c975abb1461062b5780636352211e1461064d57806370a08231146106bb5780637b10399914610713576101e5565b80633effe3a7146104765780633f4ba83a1461058557806342842e0e1461058f57806342966c68146105fd576101e5565b8063095ea7b3116101c3578063095ea7b31461034057806318160ddd1461038e57806323b872dd146103ac5780633af32abf1461041a576101e5565b806301ffc9a7146101ea57806306fdde031461024f578063081812fc146102d2575b600080fd5b6102356004803603602081101561020057600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506112f7565b604051808215151515815260200191505060405180910390f35b61025761135e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561029757808201518184015260208101905061027c565b50505050905090810190601f1680156102c45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102fe600480360360208110156102e857600080fd5b8101908080359060200190929190505050611400565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61038c6004803603604081101561035657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061149b565b005b61039661171e565b6040518082815260200191505060405180910390f35b610418600480360360608110156103c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061172f565b005b61045c6004803603602081101561043057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061187b565b604051808215151515815260200191505060405180910390f35b61056f6004803603608081101561048c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104c957600080fd5b8201836020820111156104db57600080fd5b803590602001918460018302840111640100000000831117156104fd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803563ffffffff169060200190929190803563ffffffff16906020019092919050505061195e565b6040518082815260200191505060405180910390f35b61058d611a81565b005b6105fb600480360360608110156105a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b81565b005b6106296004803603602081101561061357600080fd5b8101908080359060200190929190505050611ba1565b005b610633611c2d565b604051808215151515815260200191505060405180910390f35b6106796004803603602081101561066357600080fd5b8101908080359060200190929190505050611c40565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106fd600480360360208110156106d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d08565b6040518082815260200191505060405180910390f35b61071b611ddd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108ed600480360360a081101561077357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156107b057600080fd5b8201836020820111156107c257600080fd5b803590602001918460018302840111640100000000831117156107e457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803563ffffffff169060200190929190803563ffffffff1690602001909291908035906020019064010000000081111561086757600080fd5b82018360208201111561087957600080fd5b8035906020019184600183028401116401000000008311171561089b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611e03565b6040518082815260200191505060405180910390f35b61090b611f31565b005b61094f6004803603602081101561092357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612032565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610992578082015181840152602081019050610977565b505050509050019250505060405180910390f35b6109ae61217a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610ae960048036036080811015610a0657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610a4357600080fd5b820183602082011115610a5557600080fd5b80359060200191846001830284011164010000000083111715610a7757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803563ffffffff169060200190929190803563ffffffff1690602001909291905050506121a0565b6040518082815260200191505060405180910390f35b610b076122c3565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b47578082015181840152602081019050610b2c565b50505050905090810190601f168015610b745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610bd060048036036040811015610b9857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050612365565b005b610c1460048036036020811015610be857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061259c565b604051808215151515815260200191505060405180910390f35b610d3160048036036080811015610c4457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610cab57600080fd5b820183602082011115610cbd57600080fd5b80359060200191846001830284011164010000000083111715610cdf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506125ae565b005b610d7560048036036020811015610d4957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126fc565b005b610da360048036036020811015610d8d57600080fd5b810190808035906020019092919050505061280a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610de3578082015181840152602081019050610dc8565b50505050905090810190601f168015610e105780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e4a60048036036020811015610e3457600080fd5b810190808035906020019092919050505061291d565b60405180806020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff168152602001828103825285818151815260200191508051906020019080838360005b83811015610eae578082015181840152602081019050610e93565b50505050905090810190601f168015610edb5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61107b600480360360a0811015610f0157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610f3e57600080fd5b820183602082011115610f5057600080fd5b80359060200191846001830284011164010000000083111715610f7257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803563ffffffff169060200190929190803563ffffffff16906020019092919080359060200190640100000000811115610ff557600080fd5b82018360208201111561100757600080fd5b8035906020019184600183028401116401000000008311171561102957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612a8d565b6040518082815260200191505060405180910390f35b6110f3600480360360408110156110a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612bbb565b604051808215151515815260200191505060405180910390f35b61114f6004803603602081101561112357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c4f565b005b6112e1600480360360a081101561116757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156111a457600080fd5b8201836020820111156111b657600080fd5b803590602001918460018302840111640100000000831117156111d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803563ffffffff169060200190929190803563ffffffff1690602001909291908035906020019064010000000081111561125b57600080fd5b82018360208201111561126d57600080fd5b8035906020019184600183028401116401000000008311171561128f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612d92565b6040518082815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113f65780601f106113cb576101008083540402835291602001916113f6565b820191906000526020600020905b8154815290600101906020018083116113d957829003601f168201915b5050505050905090565b600061140b82612eb7565b611460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806142d4602c913960400191505060405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6114ab6114a6612f29565b61187b565b611500576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806144286021913960400191505060405180910390fd5b600a60009054906101000a900460ff161561151a57600080fd5b600061152582611c40565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156115c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4552433732313a20617070726f76616c20697320726564756e64616e7400000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166115e8612f29565b73ffffffffffffffffffffffffffffffffffffffff161480611617575061161681611611612f29565b612bbb565b5b61166c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e815260200180614267603e913960400191505060405180910390fd5b826005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600061172a6003612f31565b905090565b600a60009054906101000a900460ff161561174957600080fd5b61175a611754612f29565b82612f3f565b6117af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806143596031913960400191505060405180910390fd5b6117b88361187b565b61180d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806141ab6034913960400191505060405180910390fd5b6118168261187b565b61186b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806141ab6034913960400191505060405180910390fd5b611876838383613033565b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633af32abf836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561191c57600080fd5b505afa158015611930573d6000803e3d6000fd5b505050506040513d602081101561194657600080fd5b81019080805190602001909291905050509050919050565b600061197061196b612f29565b61259c565b6119c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806141266035913960400191505060405180910390fd5b600a60009054906101000a900460ff16156119df57600080fd5b6119ea84848461328e565b611a5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20696e76616c69642074696d6520736c6f740000000000000081525060200191505060405180910390fd5b6000611a6786613467565b9050611a7581868686613621565b80915050949350505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ac2612f29565b73ffffffffffffffffffffffffffffffffffffffff1614611b4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4552433732313a2063616c6c6572206973206e6f74206f776e6572000000000081525060200191505060405180910390fd5b600a60009054906101000a900460ff16611b6457600080fd5b6000600a60006101000a81548160ff021916908315150217905550565b611b9c838383604051806020016040528060008152506125ae565b505050565b600a60009054906101000a900460ff1615611bbb57600080fd5b611bcc611bc6612f29565b82612f3f565b611c21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143d3602e913960400191505060405180910390fd5b611c2a81613739565b50565b600a60009054906101000a900460ff1681565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611cff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806142a5602f913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061423d602a913960400191505060405180910390fd5b611dd6600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612f31565b9050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611e15611e10612f29565b61259c565b611e6a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806141266035913960400191505060405180910390fd5b600a60009054906101000a900460ff1615611e8457600080fd5b611e8f85858561328e565b611f01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20696e76616c69642074696d6520736c6f740000000000000081525060200191505060405180910390fd5b6000611f0c87613467565b9050611f1a81878787613621565b611f24818461374e565b8091505095945050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611f72612f29565b73ffffffffffffffffffffffffffffffffffffffff1614611ffb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4552433732313a2063616c6c6572206973206e6f74206f776e6572000000000081525060200191505060405180910390fd5b600a60009054906101000a900460ff161561201557600080fd5b6001600a60006101000a81548160ff021916908315150217905550565b6060600061203f83611d08565b9050600081141561208357600060405190808252806020026020018201604052801561207a5781602001602082028038833980820191505090505b50915050612175565b6060816040519080825280602002602001820160405280156120b45781602001602082028038833980820191505090505b50905060006120c161171e565b905060008090506000600190505b82811161216c578673ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561215f578084838151811061214a57fe5b60200260200101818152505081806001019250505b80806001019150506120cf565b83955050505050505b919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006121b26121ad612f29565b61259c565b612207576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806141266035913960400191505060405180910390fd5b600a60009054906101000a900460ff161561222157600080fd5b61222c84848461328e565b61229e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20696e76616c69642074696d6520736c6f740000000000000081525060200191505060405180910390fd5b60006122a9866137d8565b90506122b781868686613621565b80915050949350505050565b6060600c8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561235b5780601f106123305761010080835404028352916020019161235b565b820191906000526020600020905b81548152906001019060200180831161233e57829003601f168201915b5050505050905090565b612375612370612f29565b61187b565b6123ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806144286021913960400191505060405180910390fd5b600a60009054906101000a900460ff16156123e457600080fd5b6123ec612f29565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561248d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b806007600061249a612f29565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16612547612f29565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006125a78261187b565b9050919050565b600a60009054906101000a900460ff16156125c857600080fd5b6125d18461187b565b612626576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806141ab6034913960400191505060405180910390fd5b61262f8361187b565b612684576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806141ab6034913960400191505060405180910390fd5b61269561268f612f29565b83612f3f565b6126ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806143596031913960400191505060405180910390fd5b6126f6848484846137ff565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661273d612f29565b73ffffffffffffffffffffffffffffffffffffffff16146127c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4552433732313a2063616c6c6572206973206e6f74206f776e6572000000000081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606061281582612eb7565b61286a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806144016027913960400191505060405180910390fd5b600960008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129115780601f106128e657610100808354040283529160200191612911565b820191906000526020600020905b8154815290600101906020018083116128f457829003601f168201915b50505050509050919050565b606060008061292b84612eb7565b612980576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806141df6030913960400191505060405180910390fd5b600860008581526020019081526020016000206000016008600086815260200190815260200160002060010160009054906101000a900463ffffffff166008600087815260200190815260200160002060010160049054906101000a900463ffffffff16828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a795780601f10612a4e57610100808354040283529160200191612a79565b820191906000526020600020905b815481529060010190602001808311612a5c57829003601f168201915b505050505092509250925092509193909250565b6000612a9f612a9a612f29565b61259c565b612af4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806141266035913960400191505060405180910390fd5b600a60009054906101000a900460ff1615612b0e57600080fd5b612b1985858561328e565b612b8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20696e76616c69642074696d6520736c6f740000000000000081525060200191505060405180910390fd5b6000612b96876137d8565b9050612ba481878787613621565b612bae818461374e565b8091505095945050505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612c90612f29565b73ffffffffffffffffffffffffffffffffffffffff1614612d19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4552433732313a2063616c6c6572206973206e6f74206f776e6572000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612d8f5780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000612da4612d9f612f29565b61259c565b612df9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806141266035913960400191505060405180910390fd5b600a60009054906101000a900460ff1615612e1357600080fd5b612e1e85858561328e565b612e90576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20696e76616c69642074696d6520736c6f740000000000000081525060200191505060405180910390fd5b6000612e9c8784613871565b9050612eaa81878787613621565b8091505095945050505050565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b600081600001549050919050565b6000612f4a82612eb7565b612f9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061417f602c913960400191505060405180910390fd5b6000612faa83611c40565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061301957508373ffffffffffffffffffffffffffffffffffffffff1661300184611400565b73ffffffffffffffffffffffffffffffffffffffff16145b8061302a57506130298185612bbb565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661305382611c40565b73ffffffffffffffffffffffffffffffffffffffff16146130bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806143306029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613145576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061415b6024913960400191505060405180910390fd5b61314e816138eb565b613195600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206139a9565b6131dc600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206139cc565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166347ba747a856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561331e578082015181840152602081019050613303565b50505050905090810190601f16801561334b5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561336857600080fd5b505afa15801561337c573d6000803e3d6000fd5b505050506040513d602081101561339257600080fd5b81019080805190602001909291905050506133f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061420f602e913960400191505060405180910390fd5b8263ffffffff168263ffffffff161161345c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806143006030913960400191505060405180910390fd5b600190509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561350b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61351560036139cc565b60006135216003612f31565b9050826004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506135bc600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206139cc565b808373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480915050919050565b61362a84612eb7565b61367f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806143af6024913960400191505060405180910390fd5b613687613f59565b60405180606001604052808581526020018463ffffffff1681526020018363ffffffff168152509050806008600087815260200190815260200160002060008201518160000190805190602001906136e0929190613f86565b5060208201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060408201518160010160046101000a81548163ffffffff021916908363ffffffff1602179055509050505050505050565b61374b61374582611c40565b826139e2565b50565b61375782612eb7565b6137ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806143af6024913960400191505060405180910390fd5b806009600084815260200190815260200160002090805190602001906137d3929190614006565b505050565b6000806137f48360405180602001604052806000815250613871565b905080915050919050565b61380a848484613033565b61381684848484613c14565b61386b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806140f46032913960400191505060405180910390fd5b50505050565b60008061387d84613467565b905061388c6000858386613c14565b6138e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806140f46032913960400191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146139a65760006005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6139c160018260000154613e0490919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b8173ffffffffffffffffffffffffffffffffffffffff16613a0282611c40565b73ffffffffffffffffffffffffffffffffffffffff1614613a6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061438a6025913960400191505060405180910390fd5b613a77816138eb565b613abe600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206139a9565b60006004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006009600083815260200190815260200160002080546001816001161561010002031660029004905014613b6057600960008281526020019081526020016000206000613b5f9190614086565b5b6008600082815260200190815260200160002060008082016000613b849190614086565b6001820160006101000a81549063ffffffff02191690556001820160046101000a81549063ffffffff0219169055505080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000613c358473ffffffffffffffffffffffffffffffffffffffff16613e4e565b613c425760019050613dfc565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02613c68612f29565b8887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613d24578082015181840152602081019050613d09565b50505050905090810190601f168015613d515780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015613d7357600080fd5b505af1158015613d87573d6000803e3d6000fd5b505050506040513d6020811015613d9d57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000613e4683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613e99565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015613e905750808214155b92505050919050565b6000838311158290613f46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613f0b578082015181840152602081019050613ef0565b50505050905090810190601f168015613f385780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b604051806060016040528060608152602001600063ffffffff168152602001600063ffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613fc757805160ff1916838001178555613ff5565b82800160010185558215613ff5579182015b82811115613ff4578251825591602001919060010190613fd9565b5b50905061400291906140ce565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061404757805160ff1916838001178555614075565b82800160010185558215614075579182015b82811115614074578251825591602001919060010190614059565b5b50905061408291906140ce565b5090565b50805460018160011615610100020316600290046000825580601f106140ac57506140cb565b601f0160209004906000526020600020908101906140ca91906140ce565b5b50565b6140f091905b808211156140ec5760008160009055506001016140d4565b5090565b9056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a2063616c6c6572206973206e6f742077686974656c697374656420666f7220746865204d696e74657220726f6c654552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572207265737472696374656420746f2077686974656c6973746564206164647265737365734552433732313a2054696d6520736c6f7420717565727920666f72206e6f6e6578697374656e7420746f6b656e2069644552433732313a20636f6e74656e74206964206973206e6f74207265676973746572656420746f2063616c6c65724552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a20746f6b656e206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20746f6b656e2073746172742074696d65206d757374206265206265666f726520656e642074696d654552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f7665644552433732313a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a2063616c6c6572206973206e6f742077686974656c6973746564a265627a7a72315820feb929c1fd9f7a3a1e629686a5446941d13b9c07177628f7d0a655bd42f3333a64736f6c634300050b0032",
  "deployedBytecode": "",
  "sourceMap": "251:1239:9:-;;;2281:5:3;2260:26;;;;;;;;;;;;;;;;;;;;767:336:9;8:9:-1;5:2;;;30:1;27;20:12;5:2;767:336:9;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;767:336:9;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;767:336:9;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;767:336:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;767:336:9;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;767:336:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;720:40:2;387:10;739:20;;720:18;;;:40;;:::i;:::-;3336::3;3208:10;3355:20;;3336:18;;;:40;;:::i;:::-;3429:12;:10;;;:12;;:::i;:::-;3421:5;;:20;;;;;;;;;;;;;;;;;;873:4:9;865:5;:12;;;;;;;;;;;;:::i;:::-;;897:6;887:7;:16;;;;;;;;;;;;:::i;:::-;;991:49;701:10;1010:29;;991:18;;;:49;;:::i;:::-;1051:44;1079:15;1051:27;;;;;:44;;:::i;:::-;767:336;;;251:1239;;1444:190:2;1534:10;1519:25;;:11;:25;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1623:4;1587:20;:33;1608:11;1587:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1444:190;:::o;3913:90:3:-;3958:7;3985:10;3978:17;;3913:90;:::o;4948:144::-;4555:5;;;;;;;;;;;4539:21;;:12;:10;;;:12;;:::i;:::-;:21;;;4518:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5074:10;5046:8;;:39;;;;;;;;;;;;;;;;;;4948:144;:::o;251:1239:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "251:1239:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;251:1239:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;917:133:2;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1208:83:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1208:83:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18449:236:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18449:236:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;17614:550;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17614:550:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14750:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20248:561;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20248:561:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5260:120;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5260:120:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6317:477;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6317:477:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6317:477:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6317:477:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6317:477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6317:477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;29678:128;;;:::i;:::-;;21458:134;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21458:134:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;27604:230;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;27604:230:3;;;;;;;;;;;;;;;;;:::i;:::-;;2260:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15534:280;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15534:280:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15057:258;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15057:258:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;891:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7218:562;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7218:562:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7218:562:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7218:562:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7218:562:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7218:562:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7218:562:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7218:562:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7218:562:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7218:562:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;29420:80;;;:::i;:::-;;16297:867;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16297:867:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16297:867:3;;;;;;;;;;;;;;;;;822:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7934:485;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7934:485:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7934:485:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7934:485:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7934:485:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7934:485:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1400:87:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1400:87:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18978:309:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18978:309:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5735:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5735:108:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;22315:596;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;22315:596:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;22315:596:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;22315:596:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;22315:596:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;22315:596:3;;;;;;;;;;;;;;;:::i;:::-;;4948:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4948:144:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;12910:231;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12910:231:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12910:231:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14149:467;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14149:467:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14149:467:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9593:570;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9593:570:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;9593:570:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9593:570:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9593:570:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9593:570:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;9593:570:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9593:570:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9593:570:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9593:570:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19626:185;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19626:185:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4637:167;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4637:167:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;8645:518;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8645:518:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8645:518:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8645:518:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8645:518:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8645:518:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8645:518:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8645:518:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8645:518:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8645:518:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;917:133:2;987:4;1010:20;:33;1031:11;1010:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1003:40;;917:133;;;:::o;1208:83:9:-;1247:13;1279:5;1272:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:83;:::o;18449:236:3:-;18508:7;18549:16;18557:7;18549;:16::i;:::-;18528:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18653:15;:24;18669:7;18653:24;;;;;;;;;;;;;;;;;;;;;18646:31;;18449:236;;;:::o;17614:550::-;5563:27;5577:12;:10;:12::i;:::-;5563:13;:27::i;:::-;5542:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29176:6;;;;;;;;;;;29175:7;29167:16;;;;;;17736:18;17757:16;17765:7;17757;:16::i;:::-;17736:37;;17811:10;17805:16;;:2;:16;;;;17784:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17924:10;17908:26;;:12;:10;:12::i;:::-;:26;;;:72;;;;17938:42;17955:10;17967:12;:10;:12::i;:::-;17938:16;:42::i;:::-;17908:72;17887:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18106:2;18079:15;:24;18095:7;18079:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;18148:7;18144:2;18123:33;;18132:10;18123:33;;;;;;;;;;;;29193:1;17614:550;;:::o;14750:98::-;14794:7;14821:19;:9;:17;:19::i;:::-;14814:26;;14750:98;:::o;20248:561::-;29176:6;;;;;;;;;;;29175:7;29167:16;;;;;;20386:41;20405:12;:10;:12::i;:::-;20419:7;20386:18;:41::i;:::-;20365:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20534:19;20548:4;20534:13;:19::i;:::-;20513:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20663:17;20677:2;20663:13;:17::i;:::-;20642:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20769:32;20783:4;20789:2;20793:7;20769:13;:32::i;:::-;20248:561;;;:::o;5260:120::-;5320:4;5343:8;;;;;;;;;;;:22;;;5366:6;5343:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5343:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5343:30:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5343:30:3;;;;;;;;;;;;;;;;5336:37;;5260:120;;;:::o;6317:477::-;6513:7;6016:22;6025:12;:10;:12::i;:::-;6016:8;:22::i;:::-;5995:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29176:6;;;;;;;;;;;29175:7;29167:16;;;;;;6558:47;6575:9;6586;6597:7;6558:16;:47::i;:::-;6537:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6667:15;6685:9;6691:2;6685:5;:9::i;:::-;6667:27;;6704:57;6722:7;6731:9;6742;6753:7;6704:17;:57::i;:::-;6779:7;6772:14;;;6317:477;;;;;;:::o;29678:128::-;4555:5;;;;;;;;;;;4539:21;;:12;:10;:12::i;:::-;:21;;;4518:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29317:6;;;;;;;;;;;29309:15;;;;;;29794:5;29785:6;;:14;;;;;;;;;;;;;;;;;;29678:128::o;21458:134::-;21545:39;21562:4;21568:2;21572:7;21545:39;;;;;;;;;;;;:16;:39::i;:::-;21458:134;;;:::o;27604:230::-;29176:6;;;;;;;;;;;29175:7;29167:16;;;;;;27688:41;27707:12;:10;:12::i;:::-;27721:7;27688:18;:41::i;:::-;27667:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27812:14;27818:7;27812:5;:14::i;:::-;27604:230;:::o;2260:26::-;;;;;;;;;;;;;:::o;15534:280::-;15589:7;15609:18;15630:11;:20;15642:7;15630:20;;;;;;;;;;;;;;;;;;;;;15609:41;;15703:1;15681:24;;:10;:24;;;;15660:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15796:10;15789:17;;;15534:280;;;:::o;15057:258::-;15117:7;15180:1;15158:24;;:10;:24;;;;15137:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15268:39;:17;:29;15286:10;15268:29;;;;;;;;;;;;;;;:37;:39::i;:::-;15261:46;;15057:258;;;:::o;891:32::-;;;;;;;;;;;;;:::o;7218:562::-;7458:7;6016:22;6025:12;:10;:12::i;:::-;6016:8;:22::i;:::-;5995:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29176:6;;;;;;;;;;;29175:7;29167:16;;;;;;7503:47;7520:9;7531;7542:7;7503:16;:47::i;:::-;7482:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7612:15;7630:9;7636:2;7630:5;:9::i;:::-;7612:27;;7649:57;7667:7;7676:9;7687;7698:7;7649:17;:57::i;:::-;7716:31;7729:7;7738:8;7716:12;:31::i;:::-;7765:7;7758:14;;;7218:562;;;;;;;:::o;29420:80::-;4555:5;;;;;;;;;;;4539:21;;:12;:10;:12::i;:::-;:21;;;4518:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29176:6;;;;;;;;;;;29175:7;29167:16;;;;;;29489:4;29480:6;;:13;;;;;;;;;;;;;;;;;;29420:80::o;16297:867::-;16362:16;16390:18;16411:21;16421:10;16411:9;:21::i;:::-;16390:42;;16461:1;16447:10;:15;16443:715;;;16536:1;16522:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;16522:16:3;;;;16515:23;;;;;16443:715;16569:23;16609:10;16595:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;16595:25:3;;;;16569:51;;16634:19;16656:13;:11;:13::i;:::-;16634:35;;16683:19;16705:1;16683:23;;16860:15;16905:1;16895:11;;16890:230;16919:11;16908:7;:22;16890:230;;16989:10;16965:34;;:11;:20;16977:7;16965:20;;;;;;;;;;;;;;;;;;;;;:34;;;16961:145;;;17045:7;17023:6;17030:11;17023:19;;;;;;;;;;;;;:29;;;;;17074:13;;;;;;;16961:145;16932:9;;;;;;;16890:230;;;17141:6;17134:13;;;;;;;16297:867;;;;:::o;822:20::-;;;;;;;;;;;;;:::o;7934:485::-;8134:7;6016:22;6025:12;:10;:12::i;:::-;6016:8;:22::i;:::-;5995:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29176:6;;;;;;;;;;;29175:7;29167:16;;;;;;8179:47;8196:9;8207;8218:7;8179:16;:47::i;:::-;8158:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8288:15;8306:13;8316:2;8306:9;:13::i;:::-;8288:31;;8329:57;8347:7;8356:9;8367;8378:7;8329:17;:57::i;:::-;8404:7;8397:14;;;7934:485;;;;;;:::o;1400:87:9:-;1441:13;1473:7;1466:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:87;:::o;18978:309:3:-;5563:27;5577:12;:10;:12::i;:::-;5563:13;:27::i;:::-;5542:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29176:6;;;;;;;;;;;29175:7;29167:16;;;;;;19122:12;:10;:12::i;:::-;19116:18;;:2;:18;;;;19108:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19214:8;19175:18;:32;19194:12;:10;:12::i;:::-;19175:32;;;;;;;;;;;;;;;:36;19208:2;19175:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;19266:2;19237:42;;19252:12;:10;:12::i;:::-;19237:42;;;19270:8;19237:42;;;;;;;;;;;;;;;;;;;;;;18978:309;;:::o;5735:108::-;5791:4;5814:22;5828:7;5814:13;:22::i;:::-;5807:29;;5735:108;;;:::o;22315:596::-;29176:6;;;;;;;;;;;29175:7;29167:16;;;;;;22477:19;22491:4;22477:13;:19::i;:::-;22456:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22606:17;22620:2;22606:13;:17::i;:::-;22585:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22733:41;22752:12;:10;:12::i;:::-;22766:7;22733:18;:41::i;:::-;22712:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22860:43;22878:4;22884:2;22888:7;22897:5;22860:17;:43::i;:::-;22315:596;;;;:::o;4948:144::-;4555:5;;;;;;;;;;;4539:21;;:12;:10;:12::i;:::-;:21;;;4518:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5074:10;5046:8;;:39;;;;;;;;;;;;;;;;;;4948:144;:::o;12910:231::-;12968:13;13015:16;13023:7;13015;:16::i;:::-;12994:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13114:10;:19;13125:7;13114:19;;;;;;;;;;;13107:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12910:231;;;:::o;14149:467::-;14225:23;14262:16;14292:14;14345:16;14353:7;14345;:16::i;:::-;14324:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14467:16;:25;14484:7;14467:25;;;;;;;;;;;:35;;14516:16;:25;14533:7;14516:25;;;;;;;;;;;:35;;;;;;;;;;;;14565:16;:25;14582:7;14565:25;;;;;;;;;;;:33;;;;;;;;;;;;14446:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14149:467;;;;;:::o;9593:570::-;9837:7;6016:22;6025:12;:10;:12::i;:::-;6016:8;:22::i;:::-;5995:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29176:6;;;;;;;;;;;29175:7;29167:16;;;;;;9882:47;9899:9;9910;9921:7;9882:16;:47::i;:::-;9861:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9991:15;10009:13;10019:2;10009:9;:13::i;:::-;9991:31;;10032:57;10050:7;10059:9;10070;10081:7;10032:17;:57::i;:::-;10099:31;10112:7;10121:8;10099:12;:31::i;:::-;10148:7;10141:14;;;9593:570;;;;;;;:::o;19626:185::-;19735:4;19763:18;:30;19782:10;19763:30;;;;;;;;;;;;;;;:40;19794:8;19763:40;;;;;;;;;;;;;;;;;;;;;;;;;19756:47;;19626:185;;;;:::o;4637:167::-;4555:5;;;;;;;;;;;4539:21;;:12;:10;:12::i;:::-;:21;;;4518:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4753:1;4733:22;;:8;:22;;;4729:69;;4779:8;4771:5;;:16;;;;;;;;;;;;;;;;;;4729:69;4637:167;:::o;8645:518::-;8872:7;6016:22;6025:12;:10;:12::i;:::-;6016:8;:22::i;:::-;5995:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29176:6;;;;;;;;;;;29175:7;29167:16;;;;;;8917:47;8934:9;8945;8956:7;8917:16;:47::i;:::-;8896:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9026:15;9044:19;9054:2;9058:4;9044:9;:19::i;:::-;9026:37;;9073:57;9091:7;9100:9;9111;9122:7;9073:17;:57::i;:::-;9148:7;9141:14;;;8645:518;;;;;;;:::o;24129:165::-;24186:4;24203:18;24224:11;:20;24236:7;24224:20;;;;;;;;;;;;;;;;;;;;;24203:41;;24284:1;24262:24;;:10;:24;;;;24255:31;;;24129:165;;;:::o;3913:90::-;3958:7;3985:10;3978:17;;3913:90;:::o;1061:112:1:-;1126:7;1152;:14;;;1145:21;;1061:112;;;:::o;24655:411:3:-;24764:4;24806:16;24814:7;24806;:16::i;:::-;24785:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24903:18;24924:16;24932:7;24924;:16::i;:::-;24903:37;;24971:10;24960:21;;:7;:21;;;:56;;;;25009:7;24985:31;;:20;24997:7;24985:11;:20::i;:::-;:31;;;24960:56;:97;;;;25020:37;25037:10;25049:7;25020:16;:37::i;:::-;24960:97;24952:106;;;24655:411;;;;:::o;25443:518::-;25570:4;25550:24;;:16;25558:7;25550;:16::i;:::-;:24;;;25529:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25687:1;25673:16;;:2;:16;;;;25652:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25762:23;25777:7;25762:14;:23::i;:::-;25796:35;:17;:23;25814:4;25796:23;;;;;;;;;;;;;;;:33;:35::i;:::-;25841:33;:17;:21;25859:2;25841:21;;;;;;;;;;;;;;;:31;:33::i;:::-;25908:2;25885:11;:20;25897:7;25885:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;25945:7;25941:2;25926:27;;25935:4;25926:27;;;;;;;;;;;;25443:518;;;:::o;13186:452::-;13324:4;13362:8;;;;;;;;;;;:38;;;13401:9;13362:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13362:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13362:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13362:49:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13362:49:3;;;;;;;;;;;;;;;;13341:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13525:9;13515:19;;:7;:19;;;13494:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13626:4;13619:11;;13186:452;;;;;:::o;11854:366::-;11899:7;11941:1;11927:16;;:2;:16;;;;11919:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11991:21;:9;:19;:21::i;:::-;12022:15;12040:19;:9;:17;:19::i;:::-;12022:37;;12093:2;12070:11;:20;12082:7;12070:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12105:33;:17;:21;12123:2;12105:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12179:7;12175:2;12154:33;;12171:1;12154:33;;;;;;;;;;;;12205:7;12198:14;;;11854:366;;;:::o;13645:497::-;13827:16;13835:7;13827;:16::i;:::-;13806:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13916:25;;:::i;:::-;13944:142;;;;;;;;13985:9;13944:142;;;;14027:9;13944:142;;;;;;14067:7;13944:142;;;;;13916:170;;14125:9;14097:16;:25;14114:7;14097:25;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13645:497;;;;;:::o;28886:92::-;28938:32;28944:16;28952:7;28944;:16::i;:::-;28962:7;28938:5;:32::i;:::-;28886:92;:::o;12489:221::-;12588:16;12596:7;12588;:16::i;:::-;12567:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12699:3;12677:10;:19;12688:7;12677:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;12489:221;;:::o;10656:136::-;10705:7;10725:15;10743:17;10753:2;10743:17;;;;;;;;;;;;:9;:17::i;:::-;10725:35;;10777:7;10770:14;;;10656:136;;;:::o;23616:318::-;23738:32;23752:4;23758:2;23762:7;23738:13;:32::i;:::-;23802:48;23825:4;23831:2;23835:7;23844:5;23802:22;:48::i;:::-;23781:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23616:318;;;;:::o;11357:311::-;11426:7;11446:15;11464:9;11470:2;11464:5;:9::i;:::-;11446:27;;11505:54;11536:1;11540:2;11544:7;11553:5;11505:22;:54::i;:::-;11484:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11653:7;11646:14;;;11357:311;;;;:::o;27071:173::-;27171:1;27135:38;;:15;:24;27151:7;27135:24;;;;;;;;;;;;;;;;;;;;;:38;;;27131:106;;27224:1;27189:15;:24;27205:7;27189:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;27131:106;27071:173;:::o;1274:108:1:-;1354:21;1373:1;1354:7;:14;;;:18;;:21;;;;:::i;:::-;1337:7;:14;;:38;;;;1274:108;:::o;1179:89::-;1260:1;1242:7;:14;;;:19;;;;;;;;;;;1179:89;:::o;28108:597:3:-;28221:10;28201:30;;:16;28209:7;28201;:16::i;:::-;:30;;;28180:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28305:23;28320:7;28305:14;:23::i;:::-;28339:41;:17;:29;28357:10;28339:29;;;;;;;;;;;;;;;:39;:41::i;:::-;28421:1;28390:11;:20;28402:7;28390:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;28512:1;28481:10;:19;28492:7;28481:19;;;;;;;;;;;28475:33;;;;;;;;;;;;;;;;:38;28471:95;;28536:10;:19;28547:7;28536:19;;;;;;;;;;;;28529:26;;;;:::i;:::-;28471:95;28615:16;:25;28632:7;28615:25;;;;;;;;;;;;28608:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28689:7;28685:1;28656:41;;28665:10;28656:41;;;;;;;;;;;;28108:597;;:::o;26550:359::-;26679:4;26705:15;:2;:13;;;:15::i;:::-;26700:58;;26743:4;26736:11;;;;26700:58;26768:13;26800:2;26784:36;;;26821:12;:10;:12::i;:::-;26835:4;26841:7;26850:5;26784:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;26784:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26784:72:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26784:72:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26784:72:3;;;;;;;;;;;;;;;;26768:88;;1145:10;26884:16;;26874:26;;;:6;:26;;;;26866:35;;;26550:359;;;;;;;:::o;1276:134:11:-;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1353:50;;1276:134;;;;:::o;559:797:0:-;619:4;1064:16;1090:19;1112:66;1090:88;;;;1279:7;1267:20;1255:32;;1318:3;1306:15;;:8;:15;;:42;;;;;1337:11;1325:8;:23;;1306:42;1298:51;;;;559:797;;;:::o;1846:187:11:-;1932:7;1964:1;1959;:6;;1967:12;1951:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1951:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1990:9;2006:1;2002;:5;1990:17;;2025:1;2018:8;;;1846:187;;;;;:::o;251:1239:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.11;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n */\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        1738
      ]
    },
    "id": 1739,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1683,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1684,
        "nodeType": "ImportDirective",
        "scope": 1739,
        "sourceUnit": 1522,
        "src": "26:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1685,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1521,
              "src": "277:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1521",
                "typeString": "contract ERC721"
              }
            },
            "id": 1686,
            "nodeType": "InheritanceSpecifier",
            "src": "277:6:9"
          }
        ],
        "contractDependencies": [
          142,
          1521,
          1531,
          1634
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol",
        "fullyImplemented": true,
        "id": 1738,
        "linearizedBaseContracts": [
          1738,
          1521,
          1634,
          142,
          1531
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1688,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 1738,
            "src": "309:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1687,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "309:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1690,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1738,
            "src": "356:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1689,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "356:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1693,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 1738,
            "src": "645:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1691,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "645:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 1692,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "701:10:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1720,
              "nodeType": "Block",
              "src": "854:249:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1702,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1688,
                      "src": "865:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1703,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1695,
                      "src": "873:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "865:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1705,
                  "nodeType": "ExpressionStatement",
                  "src": "865:12:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1706,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1690,
                      "src": "887:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1707,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1697,
                      "src": "897:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "887:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1709,
                  "nodeType": "ExpressionStatement",
                  "src": "887:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1711,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1693,
                        "src": "1010:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 1710,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "991:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 1712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1713,
                  "nodeType": "ExpressionStatement",
                  "src": "991:49:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1717,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1699,
                        "src": "1079:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1714,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2034,
                        "src": "1051:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$1738",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 1716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 301,
                      "src": "1051:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1719,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:44:9"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 1721,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1695,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "780:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1694,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1697,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "800:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1696,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1699,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "822:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "779:67:9"
            },
            "returnParameters": {
              "id": 1701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:0:9"
            },
            "scope": 1738,
            "src": "767:336:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1728,
              "nodeType": "Block",
              "src": "1262:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1726,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1688,
                    "src": "1279:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1725,
                  "id": 1727,
                  "nodeType": "Return",
                  "src": "1272:12:9"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 1729,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1221:2:9"
            },
            "returnParameters": {
              "id": 1725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1724,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1729,
                  "src": "1247:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1723,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1246:15:9"
            },
            "scope": 1738,
            "src": "1208:83:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1736,
              "nodeType": "Block",
              "src": "1456:31:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1734,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1690,
                    "src": "1473:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1733,
                  "id": 1735,
                  "nodeType": "Return",
                  "src": "1466:14:9"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 1737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1415:2:9"
            },
            "returnParameters": {
              "id": 1733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1732,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1737,
                  "src": "1441:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1731,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1440:15:9"
            },
            "scope": 1738,
            "src": "1400:87:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1739,
        "src": "251:1239:9"
      }
    ],
    "src": "0:1491:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        1738
      ]
    },
    "id": 1739,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1683,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1684,
        "nodeType": "ImportDirective",
        "scope": 1739,
        "sourceUnit": 1522,
        "src": "26:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1685,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1521,
              "src": "277:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1521",
                "typeString": "contract ERC721"
              }
            },
            "id": 1686,
            "nodeType": "InheritanceSpecifier",
            "src": "277:6:9"
          }
        ],
        "contractDependencies": [
          142,
          1521,
          1531,
          1634
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol",
        "fullyImplemented": true,
        "id": 1738,
        "linearizedBaseContracts": [
          1738,
          1521,
          1634,
          142,
          1531
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1688,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 1738,
            "src": "309:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1687,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "309:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1690,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1738,
            "src": "356:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1689,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "356:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1693,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 1738,
            "src": "645:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1691,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "645:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 1692,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "701:10:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1720,
              "nodeType": "Block",
              "src": "854:249:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1702,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1688,
                      "src": "865:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1703,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1695,
                      "src": "873:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "865:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1705,
                  "nodeType": "ExpressionStatement",
                  "src": "865:12:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1706,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1690,
                      "src": "887:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1707,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1697,
                      "src": "897:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "887:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1709,
                  "nodeType": "ExpressionStatement",
                  "src": "887:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1711,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1693,
                        "src": "1010:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 1710,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "991:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 1712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1713,
                  "nodeType": "ExpressionStatement",
                  "src": "991:49:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1717,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1699,
                        "src": "1079:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1714,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2034,
                        "src": "1051:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$1738",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 1716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 301,
                      "src": "1051:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1719,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:44:9"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 1721,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1695,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "780:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1694,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1697,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "800:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1696,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1699,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "822:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "779:67:9"
            },
            "returnParameters": {
              "id": 1701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:0:9"
            },
            "scope": 1738,
            "src": "767:336:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1728,
              "nodeType": "Block",
              "src": "1262:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1726,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1688,
                    "src": "1279:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1725,
                  "id": 1727,
                  "nodeType": "Return",
                  "src": "1272:12:9"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 1729,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1221:2:9"
            },
            "returnParameters": {
              "id": 1725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1724,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1729,
                  "src": "1247:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1723,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1246:15:9"
            },
            "scope": 1738,
            "src": "1208:83:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1736,
              "nodeType": "Block",
              "src": "1456:31:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1734,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1690,
                    "src": "1473:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1733,
                  "id": 1735,
                  "nodeType": "Return",
                  "src": "1466:14:9"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 1737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1415:2:9"
            },
            "returnParameters": {
              "id": 1733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1732,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1737,
                  "src": "1441:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1731,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1440:15:9"
            },
            "scope": 1738,
            "src": "1400:87:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1739,
        "src": "251:1239:9"
      }
    ],
    "src": "0:1491:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-09-11T06:10:44.696Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "isMinter(address)": {
        "details": "Checks if minter isWhitelisted()"
      },
      "isWhitelisted(address)": {
        "details": "Checks Registry contract for whitelisted status",
        "params": {
          "target": "The address to check"
        }
      },
      "mint(address,string,uint32,uint32)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted token."
        },
        "return": "tokenId"
      },
      "mintWithTokenURI(address,string,uint32,uint32,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause actions on this contract"
      },
      "safeMint(address,string,uint32,uint32)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "to": "The address that will receive the minted token."
        },
        "return": "tokenId"
      },
      "safeMint(address,string,uint32,uint32,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check.",
          "to": "The address that will receive the minted token."
        },
        "return": "tokenId"
      },
      "safeMintWithTokenURI(address,string,uint32,uint32,string)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls.",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        },
        "return": "uint256 Returns a list of all token id's assigned to an address."
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause the smart contract."
      },
      "updateRegistryAddress(address)": {
        "details": "Update address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(uint256)": {
        "notice": "Customized for Microsponsors"
      },
      "mintWithTokenURI(address,string,uint32,uint32,string)": {
        "notice": "Customized for Microsponsors from: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol"
      },
      "safeMintWithTokenURI(address,string,uint32,uint32,string)": {
        "notice": "Customized for Microsponsors from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721MetadataMintable.sol"
      },
      "unpause()": {
        "notice": "This is public rather than external so it can be called by  derived contracts."
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol"
  }
}