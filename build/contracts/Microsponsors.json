{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "safeMintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokensMintedBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        }
      ],
      "name": "tokenMinterPropertyNames",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "updateMintFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokensMintedBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"tokenMinterPropertyNames\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"updateMintFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Customized for MicrosponsorsBurns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"isMinter(address)\":{\"details\":\"Checks if minter isWhitelisted()\"},\"isWhitelisted(address)\":{\"details\":\"Checks Registry contract for whitelisted status\",\"params\":{\"target\":\"The address to check\"}},\"mint(string,string,uint48,uint48,uint48,uint16)\":{\"details\":\"Function to mint tokens.\",\"return\":\"tokenId\"},\"mintWithTokenURI(string,string,uint48,uint48,uint48,uint16,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause actions on this contract\"},\"safeMint(string,string,uint48,uint48,uint48,uint16)\":{\"details\":\"Function to safely mint tokens.\",\"return\":\"tokenId\"},\"safeMint(string,string,uint48,uint48,uint48,uint16,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\"},\"return\":\"tokenId\"},\"safeMintWithTokenURI(string,string,uint48,uint48,uint48,uint16,string)\":{\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations.\"},\"tokenMinterPropertyNames(address,string)\":{\"details\":\"Look up all Property Names a Minter has created Time Slots for      with a particular Content ID\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"uint256 ID of the token to query\"},\"return\":\"URI for a given token ID.\"},\"tokensMintedBy(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\"},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership1(address)\":{\"details\":\"Transfer owner (admin) functions to another address\",\"params\":{\"newOwner\":\"Address of new owner/ admin of contract\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause the smart contract.\"},\"updateMintFee(uint256)\":{\"details\":\"Update the fee (in wei) charged for minting a single token\"},\"updateRegistryAddress(address)\":{\"details\":\"Update contract address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}}}},\"userdoc\":{\"methods\":{\"tokenURI(uint256)\":{\"notice\":\"Throws if the token ID does not exist. May return an empty string.\"},\"tokensMintedBy(address)\":{\"notice\":\"Return all the Token IDs minted by a given account.\"},\"unpause()\":{\"notice\":\"This is public rather than external so it can be called by  derived contracts.\"},\"withdrawBalance()\":{\"notice\":\"* Withdraw **\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Copyright 2019 Niche Networks, Inc. (owns & operates Microsponsors.io) Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0x48884a01412f3ec0ab37310d058dfb24502aeab18685e8b61d15e80aebe42198\",\"urls\":[\"bzz-raw://c771678c68a370bdf5fb07e62ec30be4f030e13893bdac58c8fbb4773c53fa7a\",\"dweb:/ipfs/QmcpAL9vqis8sCoMdS43A3BcgTEMcRMYeKzmNDGBgTYBqE\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0xee1474cc2965cd0fee4ece3b5cea8e6e3cdd3c9bf90397ac2031854f8ee505f0\",\"urls\":[\"bzz-raw://0cb86c75c22289965bf20286fa52a5fe53079a056e63cabfa6add525515700f6\",\"dweb:/ipfs/QmdNm2iVrj73otSN5WQtNUQTjMyF858HwB8RoJJC4vHs1h\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106102305760003560e01c8063736889141161012e578063b88d4fde116100ab578063e2b375a91161006f578063e2b375a914610879578063e5c24924146108a2578063e982d5a9146108e6578063e985e9c51461090f578063f91869d41461094c57610230565b8063b88d4fde1461078a578063bac10839146107b3578063bffb18f6146107e3578063c57a882514610813578063c87b56dd1461083c57610230565b80638462151c116100f25780638462151c1461067f57806395d89b41146106bc578063a22cb465146106e7578063a4ede12814610710578063aa271e1a1461074d57610230565b806373688914146105ac5780637affcb9a146105d75780637b1039991461061457806384017e521461063f5780638456cb591461066857610230565b80632a0c7799116101bc578063527097251161018057806352709725146104c55780635c975abb146104f05780635fd8c7101461051b5780636352211e1461053257806370a082311461056f57610230565b80632a0c7799146103e25780633af32abf1461041f5780633f4ba83a1461045c57806342842e0e1461047357806342966c681461049c57610230565b8063095ea7b311610203578063095ea7b31461030a57806313966db51461033357806318160ddd1461035e57806319f9eb021461038957806323b872dd146103b957610230565b806301ffc9a71461023557806305fe1a201461027257806306fdde03146102a2578063081812fc146102cd575b600080fd5b34801561024157600080fd5b5061025c6004803603610257919081019061490e565b61097c565b6040516102699190615939565b60405180910390f35b61028c60048036036102879190810190614aff565b6109e3565b6040516102999190615cd1565b60405180910390f35b3480156102ae57600080fd5b506102b7610ae4565b6040516102c4919061596f565b60405180910390f35b3480156102d957600080fd5b506102f460048036036102ef9190810190614be5565b610b86565b6040516103019190615802565b60405180910390f35b34801561031657600080fd5b50610331600480360361032c91908101906148a9565b610c0b565b005b34801561033f57600080fd5b50610348610e2f565b6040516103559190615cd1565b60405180910390f35b34801561036a57600080fd5b50610373610e35565b6040516103809190615cd1565b60405180910390f35b6103a3600480360361039e9190810190614aff565b610e46565b6040516103b09190615cd1565b60405180910390f35b3480156103c557600080fd5b506103e060048036036103db919081019061474b565b610f47565b005b3480156103ee57600080fd5b50610409600480360361040491908101906146e6565b611051565b6040516104169190615917565b60405180910390f35b34801561042b57600080fd5b50610446600480360361044191908101906146e6565b61124a565b6040516104539190615939565b60405180910390f35b34801561046857600080fd5b506104716112fe565b005b34801561047f57600080fd5b5061049a6004803603610495919081019061474b565b61142a565b005b3480156104a857600080fd5b506104c360048036036104be9190810190614be5565b61144a565b005b3480156104d157600080fd5b506104da6114c0565b6040516104e79190615802565b60405180910390f35b3480156104fc57600080fd5b506105056114e6565b6040516105129190615939565b60405180910390f35b34801561052757600080fd5b506105306114f9565b005b34801561053e57600080fd5b5061055960048036036105549190810190614be5565b6116bb565b6040516105669190615802565b60405180910390f35b34801561057b57600080fd5b50610596600480360361059191908101906146e6565b6116fd565b6040516105a39190615cd1565b60405180910390f35b3480156105b857600080fd5b506105c16117bc565b6040516105ce9190615802565b60405180910390f35b3480156105e357600080fd5b506105fe60048036036105f99190810190614851565b6117e2565b60405161060b91906158f5565b60405180910390f35b34801561062057600080fd5b506106296119ca565b6040516106369190615954565b60405180910390f35b34801561064b57600080fd5b5061066660048036036106619190810190614be5565b6119f0565b005b34801561067457600080fd5b5061067d611af0565b005b34801561068b57600080fd5b506106a660048036036106a191908101906146e6565b611c1d565b6040516106b39190615917565b60405180910390f35b3480156106c857600080fd5b506106d1611d65565b6040516106de919061596f565b60405180910390f35b3480156106f357600080fd5b5061070e60048036036107099190810190614815565b611e07565b005b34801561071c57600080fd5b50610737600480360361073291908101906146e6565b611ff1565b60405161074491906158f5565b60405180910390f35b34801561075957600080fd5b50610774600480360361076f91908101906146e6565b6121b9565b6040516107819190615939565b60405180910390f35b34801561079657600080fd5b506107b160048036036107ac919081019061479a565b6121cb565b005b6107cd60048036036107c89190810190614960565b6122d7565b6040516107da9190615cd1565b60405180910390f35b6107fd60048036036107f89190810190614960565b6123cd565b60405161080a9190615cd1565b60405180910390f35b34801561081f57600080fd5b5061083a600480360361083591908101906146e6565b6124c3565b005b34801561084857600080fd5b50610863600480360361085e9190810190614be5565b6125fd565b604051610870919061596f565b60405180910390f35b34801561088557600080fd5b506108a0600480360361089b91908101906146e6565b6126fa565b005b3480156108ae57600080fd5b506108c960048036036108c49190810190614be5565b612869565b6040516108dd98979695949392919061581d565b60405180910390f35b3480156108f257600080fd5b5061090d600480360361090891908101906146e6565b612b71565b005b34801561091b57600080fd5b506109366004803603610931919081019061470f565b612ce0565b6040516109439190615939565b60405180910390f35b61096660048036036109619190810190614a19565b612d74565b6040516109739190615cd1565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006109f56109f0612e6c565b6121b9565b610a34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2b906159d1565b60405180910390fd5b600f60009054906101000a900460ff1615610a4e57600080fd5b600854341015610a5d57600080fd5b610a6988878787612e74565b610aa8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9f90615af1565b60405180910390fd5b6000610aba610ab5612e6c565b613010565b9050610acb818a8a8a8a8a8a6131de565b610ad58184613553565b80915050979650505050505050565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b7c5780601f10610b5157610100808354040283529160200191610b7c565b820191906000526020600020905b815481529060010190602001808311610b5f57829003601f168201915b5050505050905090565b6000610b91826135c7565b610bd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc790615b91565b60405180910390fd5b600d600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610c1b610c16612e6c565b61124a565b610c5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5190615cb1565b60405180910390fd5b600f60009054906101000a900460ff1615610c7457600080fd5b6000610c7f826116bb565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce790615bd1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610d0f612e6c565b73ffffffffffffffffffffffffffffffffffffffff161480610d3e5750610d3d81610d38612e6c565b612ce0565b5b610d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7490615b51565b60405180910390fd5b82600d600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60085481565b6000610e416004613639565b905090565b6000610e58610e53612e6c565b6121b9565b610e97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8e906159d1565b60405180910390fd5b600f60009054906101000a900460ff1615610eb157600080fd5b600854341015610ec057600080fd5b610ecc88878787612e74565b610f0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0290615af1565b60405180910390fd5b6000610f1d610f18612e6c565b613647565b9050610f2e818a8a8a8a8a8a6131de565b610f388184613553565b80915050979650505050505050565b600f60009054906101000a900460ff1615610f6157600080fd5b610f72610f6c612e6c565b8261366e565b610fb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa890615bf1565b60405180910390fd5b610fba8361124a565b610ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff090615ad1565b60405180910390fd5b6110028261124a565b611041576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103890615ad1565b60405180910390fd5b61104c83838361374c565b505050565b6060600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ba90615a11565b60405180910390fd5b600061110c600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613639565b905060008114156111505760006040519080825280602002602001820160405280156111475781602001602082028038833980820191505090505b50915050611245565b6060816040519080825280602002602001820160405280156111815781602001602082028038833980820191505090505b509050600061118e610e35565b905060008090506000600190505b82811161123c578673ffffffffffffffffffffffffffffffffffffffff166009600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561122f578084838151811061121a57fe5b60200260200101818152505081806001019250505b808060010191505061119c565b83955050505050505b919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633af32abf836040518263ffffffff1660e01b81526004016112a79190615802565b60206040518083038186803b1580156112bf57600080fd5b505afa1580156112d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112f791908101906148e5565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661133f612e6c565b73ffffffffffffffffffffffffffffffffffffffff1614806113b55750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661139d612e6c565b73ffffffffffffffffffffffffffffffffffffffff16145b6113f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113eb90615b31565b60405180910390fd5b600f60009054906101000a900460ff1661140d57600080fd5b6000600f60006101000a81548160ff021916908315150217905550565b611445838383604051806020016040528060008152506121cb565b505050565b600f60009054906101000a900460ff161561146457600080fd5b61147561146f612e6c565b8261366e565b6114b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ab90615c71565b60405180910390fd5b6114bd8161397b565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f60009054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661153a612e6c565b73ffffffffffffffffffffffffffffffffffffffff1614806115b05750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611598612e6c565b73ffffffffffffffffffffffffffffffffffffffff16145b6115ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e690615b31565b60405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff1631905060003373ffffffffffffffffffffffffffffffffffffffff1682604051611631906157ed565b60006040518083038185875af1925050503d806000811461166e576040519150601f19603f3d011682016040523d82523d6000602084013e611673565b606091505b50509050806116b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ae906159f1565b60405180910390fd5b5050565b6000806005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561176e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176590615a11565b60405180910390fd5b6117b5600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613639565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606080600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084846040516118349291906157bd565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561193257838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561191a5780601f106118ef5761010080835404028352916020019161191a565b820191906000526020600020905b8154815290600101906020018083116118fd57829003601f168201915b50505050508152505081526020019060010190611862565b5050505090506060815160405190808252806020026020018201604052801561196f57816020015b606081526020019060019003908161195a5790505b50905060008090505b82518110156119bd5782818151811061198d57fe5b6020026020010151600001518282815181106119a557fe5b60200260200101819052508080600101915050611978565b5080925050509392505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a31612e6c565b73ffffffffffffffffffffffffffffffffffffffff161480611aa75750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a8f612e6c565b73ffffffffffffffffffffffffffffffffffffffff16145b611ae6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611add90615b31565b60405180910390fd5b8060088190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b31612e6c565b73ffffffffffffffffffffffffffffffffffffffff161480611ba75750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b8f612e6c565b73ffffffffffffffffffffffffffffffffffffffff16145b611be6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bdd90615b31565b60405180910390fd5b600f60009054906101000a900460ff1615611c0057600080fd5b6001600f60006101000a81548160ff021916908315150217905550565b60606000611c2a836116fd565b90506000811415611c6e576000604051908082528060200260200182016040528015611c655781602001602082028038833980820191505090505b50915050611d60565b606081604051908082528060200260200182016040528015611c9f5781602001602082028038833980820191505090505b5090506000611cac610e35565b905060008090506000600190505b828111611d57578673ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611d4a5780848381518110611d3557fe5b60200260200101818152505081806001019250505b8080600101915050611cba565b83955050505050505b919050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611dfd5780601f10611dd257610100808354040283529160200191611dfd565b820191906000526020600020905b815481529060010190602001808311611de057829003601f168201915b5050505050905090565b611e17611e12612e6c565b61124a565b611e56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4d90615cb1565b60405180910390fd5b600f60009054906101000a900460ff1615611e7057600080fd5b611e78612e6c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ee6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611edd90615a71565b60405180910390fd5b80600e6000611ef3612e6c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611fa0612e6c565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611fe59190615939565b60405180910390a35050565b606080600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561212357838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561210b5780601f106120e05761010080835404028352916020019161210b565b820191906000526020600020905b8154815290600101906020018083116120ee57829003601f168201915b50505050508152505081526020019060010190612053565b5050505090506060815160405190808252806020026020018201604052801561216057816020015b606081526020019060019003908161214b5790505b50905060008090505b82518110156121ae5782818151811061217e57fe5b60200260200101516000015182828151811061219657fe5b60200260200101819052508080600101915050612169565b508092505050919050565b60006121c48261124a565b9050919050565b600f60009054906101000a900460ff16156121e557600080fd5b6121ee8461124a565b61222d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161222490615ad1565b60405180910390fd5b6122368361124a565b612275576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161226c90615ad1565b60405180910390fd5b612286612280612e6c565b8361366e565b6122c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122bc90615bf1565b60405180910390fd5b6122d184848484613990565b50505050565b60006122e96122e4612e6c565b6121b9565b612328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161231f906159d1565b60405180910390fd5b600f60009054906101000a900460ff161561234257600080fd5b60085434101561235157600080fd5b61235d87868686612e74565b61239c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161239390615af1565b60405180910390fd5b60006123ae6123a9612e6c565b613647565b90506123bf818989898989896131de565b809150509695505050505050565b60006123df6123da612e6c565b6121b9565b61241e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612415906159d1565b60405180910390fd5b600f60009054906101000a900460ff161561243857600080fd5b60085434101561244757600080fd5b61245387868686612e74565b612492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161248990615af1565b60405180910390fd5b60006124a461249f612e6c565b613010565b90506124b5818989898989896131de565b809150509695505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612504612e6c565b73ffffffffffffffffffffffffffffffffffffffff16148061257a5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612562612e6c565b73ffffffffffffffffffffffffffffffffffffffff16145b6125b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125b090615b31565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060612608826135c7565b612647576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161263e90615c91565b60405180910390fd5b600c60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126ee5780601f106126c3576101008083540402835291602001916126ee565b820191906000526020600020905b8154815290600101906020018083116126d157829003601f168201915b50505050509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661273b612e6c565b73ffffffffffffffffffffffffffffffffffffffff1614806127b15750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612799612e6c565b73ffffffffffffffffffffffffffffffffffffffff16145b6127f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127e790615b31565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146128665780600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060608060008060008061287e896135c7565b6128bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128b490615991565b60405180910390fd5b6128c5614370565b600960008b81526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129d25780601f106129a7576101008083540402835291602001916129d2565b820191906000526020600020905b8154815290600101906020018083116129b557829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a745780601f10612a4957610100808354040283529160200191612a74565b820191906000526020600020905b815481529060010190602001808311612a5757829003601f168201915b505050505081526020016003820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016003820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160038201600c9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016003820160129054906101000a900461ffff1661ffff1661ffff168152505090508060000151612b318b6116bb565b82602001518360400151846060015185608001518660a001518760c001518595508494509850985098509850985098509850985050919395975091939597565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612bb2612e6c565b73ffffffffffffffffffffffffffffffffffffffff161480612c285750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612c10612e6c565b73ffffffffffffffffffffffffffffffffffffffff16145b612c67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c5e90615b31565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612cdd5780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000612d86612d81612e6c565b6121b9565b612dc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dbc906159d1565b60405180910390fd5b600f60009054906101000a900460ff1615612ddf57600080fd5b600854341015612dee57600080fd5b612dfa88878787612e74565b612e39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e3090615af1565b60405180910390fd5b6000612e4c612e46612e6c565b846139ec565b9050612e5d818a8a8a8a8a8a6131de565b80915050979650505050505050565b600033905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166347ba747a866040518263ffffffff1660e01b8152600401612ed1919061596f565b60206040518083038186803b158015612ee957600080fd5b505afa158015612efd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612f2191908101906148e5565b612f60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f5790615b11565b60405180910390fd5b8165ffffffffffff168465ffffffffffff1611612fb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fa990615a91565b60405180910390fd5b8365ffffffffffff168365ffffffffffff1611613004576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ffb90615a31565b60405180910390fd5b60019050949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613081576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161307890615b71565b60405180910390fd5b61308b6004613a50565b60006130976004613639565b9050826005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613132600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613a50565b613179600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613a50565b808373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480915050919050565b6131e7876135c7565b613226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161321d90615c51565b60405180910390fd5b61322e614370565b6040518060e00160405280613241612e6c565b73ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018665ffffffffffff1681526020018565ffffffffffff1681526020018465ffffffffffff1681526020018361ffff16815250905080600960008a815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906133139291906143df565b5060408201518160020190805190602001906133309291906143df565b5060608201518160030160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060808201518160030160066101000a81548165ffffffffffff021916908365ffffffffffff16021790555060a082015181600301600c6101000a81548165ffffffffffff021916908365ffffffffffff16021790555060c08201518160030160126101000a81548161ffff021916908361ffff1602179055509050506133e187613a66565b61348257600b60006133f1612e6c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806020016040528089815250908060018154018082558091505090600182039060005260206000200160009091929091909150600082015181600001908051906020019061347d9291906143df565b505050505b61348c8787613bf6565b61354957600a600061349c612e6c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020876040516134e491906157d6565b908152602001604051809103902060405180602001604052808881525090806001815401808255809150509060018203906000526020600020016000909192909190915060008201518160000190805190602001906135449291906143df565b505050505b5050505050505050565b61355c826135c7565b61359b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161359290615c31565b60405180910390fd5b80600c600084815260200190815260200160002090805190602001906135c292919061445f565b505050565b6000806005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600081600001549050919050565b60008061366383604051806020016040528060008152506139ec565b905080915050919050565b6000613679826135c7565b6136b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016136af90615ab1565b60405180910390fd5b60006136c3836116bb565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061373257508373ffffffffffffffffffffffffffffffffffffffff1661371a84610b86565b73ffffffffffffffffffffffffffffffffffffffff16145b8061374357506137428185612ce0565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661376c826116bb565b73ffffffffffffffffffffffffffffffffffffffff16146137c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016137b990615bb1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613832576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161382990615a51565b60405180910390fd5b61383b81613da3565b613882600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613e61565b6138c9600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613a50565b816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61398d613987826116bb565b82613e84565b50565b61399b84848461374c565b6139a784848484614109565b6139e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016139dd906159b1565b60405180910390fd5b50505050565b6000806139f884613010565b9050613a076000858386614109565b613a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613a3d906159b1565b60405180910390fd5b8091505092915050565b6001816000016000828254019250508190555050565b60006060600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015613b9957838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613b815780601f10613b5657610100808354040283529160200191613b81565b820191906000526020600020905b815481529060010190602001808311613b6457829003601f168201915b50505050508152505081526020019060010190613ac9565b505050509050600080905060008090505b8251811015613beb57613bd485848381518110613bc357fe5b602002602001015160000151614227565b15613bde57600191505b8080600101915050613baa565b508092505050919050565b60006060600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084604051613c4791906157d6565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015613d4557838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613d2d5780601f10613d0257610100808354040283529160200191613d2d565b820191906000526020600020905b815481529060010190602001808311613d1057829003601f168201915b50505050508152505081526020019060010190613c75565b505050509050600080905060008090505b8251811015613d9757613d8085848381518110613d6f57fe5b602002602001015160000151614227565b15613d8a57600191505b8080600101915050613d56565b50809250505092915050565b600073ffffffffffffffffffffffffffffffffffffffff16600d600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613e5e576000600d600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613e796001826000015461428090919063ffffffff16565b816000018190555050565b8173ffffffffffffffffffffffffffffffffffffffff16613ea4826116bb565b73ffffffffffffffffffffffffffffffffffffffff1614613efa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613ef190615c11565b60405180910390fd5b613f0381613da3565b613f4a600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613e61565b60006005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600c600083815260200190815260200160002080546001816001161561010002031660029004905014613fec57600c60008281526020019081526020016000206000613feb91906144df565b5b60096000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600061403791906144df565b60028201600061404791906144df565b6003820160006101000a81549065ffffffffffff02191690556003820160066101000a81549065ffffffffffff021916905560038201600c6101000a81549065ffffffffffff02191690556003820160126101000a81549061ffff0219169055505080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600061412a8473ffffffffffffffffffffffffffffffffffffffff166142ca565b614137576001905061421f565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a0261415d612e6c565b8887876040518563ffffffff1660e01b815260040161417f94939291906158a9565b602060405180830381600087803b15801561419957600080fd5b505af11580156141ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506141d19190810190614937565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60008160405160200161423a91906157d6565b604051602081830303815290604052805190602001208360405160200161426191906157d6565b6040516020818303038152906040528051906020012014905092915050565b60006142c283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614315565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b821415801561430c5750808214155b92505050919050565b600083831115829061435d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401614354919061596f565b60405180910390fd5b5060008385039050809150509392505050565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600065ffffffffffff168152602001600065ffffffffffff168152602001600065ffffffffffff168152602001600061ffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061442057805160ff191683800117855561444e565b8280016001018555821561444e579182015b8281111561444d578251825591602001919060010190614432565b5b50905061445b9190614527565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106144a057805160ff19168380011785556144ce565b828001600101855582156144ce579182015b828111156144cd5782518255916020019190600101906144b2565b5b5090506144db9190614527565b5090565b50805460018160011615610100020316600290046000825580601f106145055750614524565b601f0160209004906000526020600020908101906145239190614527565b5b50565b61454991905b8082111561454557600081600090555060010161452d565b5090565b90565b60008135905061455b81615f58565b92915050565b60008135905061457081615f6f565b92915050565b60008151905061458581615f6f565b92915050565b60008135905061459a81615f86565b92915050565b6000815190506145af81615f86565b92915050565b600082601f8301126145c657600080fd5b81356145d96145d482615d19565b615cec565b915080825260208301602083018583830111156145f557600080fd5b614600838284615f05565b50505092915050565b60008083601f84011261461b57600080fd5b8235905067ffffffffffffffff81111561463457600080fd5b60208301915083600182028301111561464c57600080fd5b9250929050565b600082601f83011261466457600080fd5b813561467761467282615d45565b615cec565b9150808252602083016020830185838301111561469357600080fd5b61469e838284615f05565b50505092915050565b6000813590506146b681615f9d565b92915050565b6000813590506146cb81615fb4565b92915050565b6000813590506146e081615fcb565b92915050565b6000602082840312156146f857600080fd5b60006147068482850161454c565b91505092915050565b6000806040838503121561472257600080fd5b60006147308582860161454c565b92505060206147418582860161454c565b9150509250929050565b60008060006060848603121561476057600080fd5b600061476e8682870161454c565b935050602061477f8682870161454c565b9250506040614790868287016146bc565b9150509250925092565b600080600080608085870312156147b057600080fd5b60006147be8782880161454c565b94505060206147cf8782880161454c565b93505060406147e0878288016146bc565b925050606085013567ffffffffffffffff8111156147fd57600080fd5b614809878288016145b5565b91505092959194509250565b6000806040838503121561482857600080fd5b60006148368582860161454c565b925050602061484785828601614561565b9150509250929050565b60008060006040848603121561486657600080fd5b60006148748682870161454c565b935050602084013567ffffffffffffffff81111561489157600080fd5b61489d86828701614609565b92509250509250925092565b600080604083850312156148bc57600080fd5b60006148ca8582860161454c565b92505060206148db858286016146bc565b9150509250929050565b6000602082840312156148f757600080fd5b600061490584828501614576565b91505092915050565b60006020828403121561492057600080fd5b600061492e8482850161458b565b91505092915050565b60006020828403121561494957600080fd5b6000614957848285016145a0565b91505092915050565b60008060008060008060c0878903121561497957600080fd5b600087013567ffffffffffffffff81111561499357600080fd5b61499f89828a01614653565b965050602087013567ffffffffffffffff8111156149bc57600080fd5b6149c889828a01614653565b95505060406149d989828a016146d1565b94505060606149ea89828a016146d1565b93505060806149fb89828a016146d1565b92505060a0614a0c89828a016146a7565b9150509295509295509295565b600080600080600080600060e0888a031215614a3457600080fd5b600088013567ffffffffffffffff811115614a4e57600080fd5b614a5a8a828b01614653565b975050602088013567ffffffffffffffff811115614a7757600080fd5b614a838a828b01614653565b9650506040614a948a828b016146d1565b9550506060614aa58a828b016146d1565b9450506080614ab68a828b016146d1565b93505060a0614ac78a828b016146a7565b92505060c088013567ffffffffffffffff811115614ae457600080fd5b614af08a828b016145b5565b91505092959891949750929550565b600080600080600080600060e0888a031215614b1a57600080fd5b600088013567ffffffffffffffff811115614b3457600080fd5b614b408a828b01614653565b975050602088013567ffffffffffffffff811115614b5d57600080fd5b614b698a828b01614653565b9650506040614b7a8a828b016146d1565b9550506060614b8b8a828b016146d1565b9450506080614b9c8a828b016146d1565b93505060a0614bad8a828b016146a7565b92505060c088013567ffffffffffffffff811115614bca57600080fd5b614bd68a828b01614653565b91505092959891949750929550565b600060208284031215614bf757600080fd5b6000614c05848285016146bc565b91505092915050565b6000614c1a8383614e02565b905092915050565b6000614c2e8383615790565b60208301905092915050565b614c4381615e4d565b82525050565b6000614c5482615d91565b614c5e8185615de2565b935083602082028501614c7085615d71565b8060005b85811015614cac5784840389528151614c8d8582614c0e565b9450614c9883615dc8565b925060208a01995050600181019050614c74565b50829750879550505050505092915050565b6000614cc982615d9c565b614cd38185615df3565b9350614cde83615d81565b8060005b83811015614d0f578151614cf68882614c22565b9750614d0183615dd5565b925050600181019050614ce2565b5085935050505092915050565b614d2581615e5f565b82525050565b6000614d3682615da7565b614d408185615e04565b9350614d50818560208601615f14565b614d5981615f47565b840191505092915050565b614d6d81615ee1565b82525050565b6000614d7f8385615e42565b9350614d8c838584615f05565b82840190509392505050565b6000614da382615dbd565b614dad8185615e31565b9350614dbd818560208601615f14565b614dc681615f47565b840191505092915050565b6000614ddc82615dbd565b614de68185615e42565b9350614df6818560208601615f14565b80840191505092915050565b6000614e0d82615db2565b614e178185615e20565b9350614e27818560208601615f14565b614e3081615f47565b840191505092915050565b6000614e48601d83615e31565b91507f4552433732313a204e6f6e2d6578697374656e7420546f6b656e2049440000006000830152602082019050919050565b6000614e88603283615e31565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000614eee603583615e31565b91507f4552433732313a2063616c6c6572206973206e6f742077686974656c6973746560008301527f6420666f7220746865204d696e74657220726f6c6500000000000000000000006020830152604082019050919050565b6000614f54600f83615e31565b91507f5769746864726177206661696c656400000000000000000000000000000000006000830152602082019050919050565b6000614f94602583615e31565b91507f4552433732313a2063616e6e6f7420717565727920746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614ffa602a83615e31565b91507f4552433732313a2073746172742074696d65206d757374206265206265666f7260008301527f6520656e642074696d65000000000000000000000000000000000000000000006020830152604082019050919050565b6000615060602483615e31565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006150c6601983615e31565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000615106603583615e31565b91507f4552433732313a2073746172742074696d65206d75737420626520616674657260008301527f206974732061756374696f6e20656e642074696d6500000000000000000000006020830152604082019050919050565b600061516c602c83615e31565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006151d2603483615e31565b91507f4552433732313a207472616e73666572207265737472696374656420746f207760008301527f686974656c6973746564206164647265737365730000000000000000000000006020830152604082019050919050565b6000615238601983615e31565b91507f4552433732313a20696e76616c69642074696d6520736c6f74000000000000006000830152602082019050919050565b6000615278602e83615e31565b91507f4552433732313a20636f6e74656e74206964206973206e6f742072656769737460008301527f6572656420746f2063616c6c65720000000000000000000000000000000000006020830152604082019050919050565b60006152de601b83615e31565b91507f4552433732313a204f4e4c595f434f4e54524143545f4f574e455200000000006000830152602082019050919050565b600061531e603e83615e31565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008301527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006020830152604082019050919050565b6000615384602083615e31565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b60006153c4602c83615e31565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061542a602983615e31565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000615490601d83615e31565b91507f4552433732313a20617070726f76616c20697320726564756e64616e740000006000830152602082019050919050565b60006154d0600083615e15565b9150600082019050919050565b60006154ea603183615e31565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000615550602583615e31565b91507f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f60008301527f74206f776e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006155b6602483615e31565b91507f4552433732313a2055524920736574206f66206e6f6e6578697374656e74207460008301527f6f6b656e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061561c601a83615e31565b91507f4552433732313a206e6f6e2d6578697374656e7420746f6b656e0000000000006000830152602082019050919050565b600061565c602e83615e31565b91507f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008301527f72206e6f7220617070726f7665640000000000000000000000000000000000006020830152604082019050919050565b60006156c2602783615e31565b91507f4552433732313a2055524920717565727920666f72206e6f6e6578697374656e60008301527f7420746f6b656e000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000615728602183615e31565b91507f4552433732313a2063616c6c6572206973206e6f742077686974656c6973746560008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61578a81615e97565b82525050565b61579981615ec5565b82525050565b6157a881615ec5565b82525050565b6157b781615ecf565b82525050565b60006157ca828486614d73565b91508190509392505050565b60006157e28284614dd1565b915081905092915050565b60006157f8826154c3565b9150819050919050565b60006020820190506158176000830184614c3a565b92915050565b600061010082019050615833600083018b614c3a565b615840602083018a614c3a565b81810360408301526158528189614d98565b905081810360608301526158668188614d98565b905061587560808301876157ae565b61588260a08301866157ae565b61588f60c08301856157ae565b61589c60e0830184615781565b9998505050505050505050565b60006080820190506158be6000830187614c3a565b6158cb6020830186614c3a565b6158d8604083018561579f565b81810360608301526158ea8184614d2b565b905095945050505050565b6000602082019050818103600083015261590f8184614c49565b905092915050565b600060208201905081810360008301526159318184614cbe565b905092915050565b600060208201905061594e6000830184614d1c565b92915050565b60006020820190506159696000830184614d64565b92915050565b600060208201905081810360008301526159898184614d98565b905092915050565b600060208201905081810360008301526159aa81614e3b565b9050919050565b600060208201905081810360008301526159ca81614e7b565b9050919050565b600060208201905081810360008301526159ea81614ee1565b9050919050565b60006020820190508181036000830152615a0a81614f47565b9050919050565b60006020820190508181036000830152615a2a81614f87565b9050919050565b60006020820190508181036000830152615a4a81614fed565b9050919050565b60006020820190508181036000830152615a6a81615053565b9050919050565b60006020820190508181036000830152615a8a816150b9565b9050919050565b60006020820190508181036000830152615aaa816150f9565b9050919050565b60006020820190508181036000830152615aca8161515f565b9050919050565b60006020820190508181036000830152615aea816151c5565b9050919050565b60006020820190508181036000830152615b0a8161522b565b9050919050565b60006020820190508181036000830152615b2a8161526b565b9050919050565b60006020820190508181036000830152615b4a816152d1565b9050919050565b60006020820190508181036000830152615b6a81615311565b9050919050565b60006020820190508181036000830152615b8a81615377565b9050919050565b60006020820190508181036000830152615baa816153b7565b9050919050565b60006020820190508181036000830152615bca8161541d565b9050919050565b60006020820190508181036000830152615bea81615483565b9050919050565b60006020820190508181036000830152615c0a816154dd565b9050919050565b60006020820190508181036000830152615c2a81615543565b9050919050565b60006020820190508181036000830152615c4a816155a9565b9050919050565b60006020820190508181036000830152615c6a8161560f565b9050919050565b60006020820190508181036000830152615c8a8161564f565b9050919050565b60006020820190508181036000830152615caa816156b5565b9050919050565b60006020820190508181036000830152615cca8161571b565b9050919050565b6000602082019050615ce6600083018461579f565b92915050565b6000604051905081810181811067ffffffffffffffff82111715615d0f57600080fd5b8060405250919050565b600067ffffffffffffffff821115615d3057600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115615d5c57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000615e5882615ea5565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600065ffffffffffff82169050919050565b6000615eec82615ef3565b9050919050565b6000615efe82615ea5565b9050919050565b82818337600083830152505050565b60005b83811015615f32578082015181840152602081019050615f17565b83811115615f41576000848401525b50505050565b6000601f19601f8301169050919050565b615f6181615e4d565b8114615f6c57600080fd5b50565b615f7881615e5f565b8114615f8357600080fd5b50565b615f8f81615e6b565b8114615f9a57600080fd5b50565b615fa681615e97565b8114615fb157600080fd5b50565b615fbd81615ec5565b8114615fc857600080fd5b50565b615fd481615ecf565b8114615fdf57600080fd5b5056fea365627a7a723158204cf83dff17edea0799855f5508af939db304a04ec9b4feb14ba4abd939cb67a16c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "925:1239:8:-;;;2088:15:3;2063:40;;4412:5;4391:26;;;;;;;;;;;;;;;;;;;;1441:336:8;8:9:-1;5:2;;;30:1;27;20:12;5:2;1441:336:8;;;;;;;;;;;;;;;;;;;;;;;;720:40:2;387:10;739:20;;720:18;;;:40;;:::i;:::-;5467::3;5339:10;5486:20;;5467:18;;;:40;;:::i;:::-;5587:12;:10;;;:12;;:::i;:::-;5578:6;;:21;;;;;;;;;;;;;;;;;;5618:12;:10;;;:12;;:::i;:::-;5609:6;;:21;;;;;;;;;;;;;;;;;;1547:4:8;1539:5;:12;;;;;;;;;;;;:::i;:::-;;1571:6;1561:7;:16;;;;;;;;;;;;:::i;:::-;;1665:49;1375:10;1684:29;;1665:18;;;:49;;:::i;:::-;1725:44;1753:15;1725:27;;;;;:44;;:::i;:::-;1441:336;;;925:1239;;1444:190:2;1534:10;1519:25;;:11;:25;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1623:4;1587:20;:33;1608:11;1587:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1444:190;:::o;6104:90:3:-;6149:7;6176:10;6169:17;;6104:90;:::o;7440:144::-;6685:6;;;;;;;;;;;6669:22;;:12;:10;;;:12;;:::i;:::-;:22;;;6668:52;;;;6713:6;;;;;;;;;;;6697:22;;:12;:10;;;:12;;:::i;:::-;:22;;;6668:52;6647:126;;;;;;;;;;;;;;;;;;;;;;7566:10;7538:8;;:39;;;;;;;;;;;;;;;;;;7440:144;:::o;925:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;840:1;829:9;825:17;819:24;863:18;855:6;852:30;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;1071:18;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1493:74;;1600:66;1596:1;1591:3;1587:11;1580:87;1695:2;1690:3;1686:12;1679:19;;1486:218;;;;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1866:74;;1973:66;1969:1;1964:3;1960:11;1953:87;2068:2;2063:3;2059:12;2052:19;;1859:218;;;;2085:407;;2276:2;2265:9;2261:18;2253:26;;2326:9;2320:4;2316:20;2312:1;2301:9;2297:17;2290:47;2351:131;2477:4;2351:131;;;2343:139;;2247:245;;;;2499:407;;2690:2;2679:9;2675:18;2667:26;;2740:9;2734:4;2730:20;2726:1;2715:9;2711:17;2704:47;2765:131;2891:4;2765:131;;;2757:139;;2661:245;;;;2913:256;;2975:2;2969:9;2959:19;;3013:4;3005:6;3001:17;3112:6;3100:10;3097:22;3076:18;3064:10;3061:34;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3153:10;3149:2;3142:22;2953:216;;;;;3176:322;;3320:18;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;3419:4;3415:9;3408:4;3400:6;3396:17;3392:33;3384:41;;3483:4;3477;3473:15;3465:23;;3243:255;;;;3506:163;;3621:6;3616:3;3609:19;3658:4;3653:3;3649:14;3634:29;;3602:67;;;;;3677:91;;3739:24;3757:5;3739:24;;;3728:35;;3722:46;;;;3775:121;;3848:42;3841:5;3837:54;3826:65;;3820:76;;;;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4066:1;4061:3;4057:11;4051:18;4047:1;4042:3;4038:11;4031:39;4012:2;4009:1;4005:10;4000:15;;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;925:1239:8;;;;;;;",
  "deployedSourceMap": "925:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;917:133:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9763:756:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1882:83:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1882:83:8;;;:::i;:::-;;;;;;;;;;;;;;;;25798:236:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25798:236:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;24963:550;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24963:550:3;;;;;;;;;;;;;;;;:::i;:::-;;2063:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2063:40:3;;;:::i;:::-;;;;;;;;;;;;;;;;22324:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22324:98:3;;;:::i;:::-;;;;;;;;;;;;;;;;12263:764;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;27597:561;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27597:561:3;;;;;;;;;;;;;;;;:::i;:::-;;21205:985;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21205:985:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7951:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7951:120:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;37031:128;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37031:128:3;;;:::i;:::-;;28807:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28807:134:3;;;;;;;;;;;;;;;;:::i;:::-;;34957:230;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34957:230:3;;;;;;;;;;;;;;;;:::i;:::-;;1091:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1091:21:3;;;:::i;:::-;;;;;;;;;;;;;;;;4391:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4391:26:3;;;:::i;:::-;;;;;;;;;;;;;;;;37191:305;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37191:305:3;;;:::i;:::-;;23103:152;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23103:152:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;22631:253;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22631:253:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1064:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1064:21:3;;;:::i;:::-;;;;;;;;;;;;;;;;20392:403;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20392:403:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1186:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1186:32:3;;;:::i;:::-;;;;;;;;;;;;;;;;7678:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7678:105:3;;;;;;;;;;;;;;;;:::i;:::-;;36773:80;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36773:80:3;;;:::i;:::-;;23673:840;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23673:840:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2074:87:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2074:87:8;;;:::i;:::-;;;;;;;;;;;;;;;;26327:309:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26327:309:3;;;;;;;;;;;;;;;;:::i;:::-;;19938:330;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19938:330:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8430:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8430:108:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;29663:594;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29663:594:3;;;;;;;;;;;;;;;;:::i;:::-;;10608:679;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8952:671;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7440:144;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7440:144:3;;;;;;;;;;;;;;;;:::i;:::-;;15807:231;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15807:231:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7117:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7117:169:3;;;;;;;;;;;;;;;;:::i;:::-;;18729:789;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18729:789:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6941:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6941:169:3;;;;;;;;;;;;;;;;:::i;:::-;;26975:185;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26975:185:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;11448:712;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;917:133:2;987:4;1010:20;:33;1031:11;1010:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1003:40;;917:133;;;:::o;9763:756:3:-;10091:7;8716:22;8725:12;:10;:12::i;:::-;8716:8;:22::i;:::-;8695:122;;;;;;;;;;;;;;;;;;;;;;36529:6;;;;;;;;;;;36528:7;36520:16;;;;;;10136:7;;10123:9;:20;;10115:29;;;;;;10176:63;10193:9;10204;10215:7;10224:14;10176:16;:63::i;:::-;10155:135;;;;;;;;;;;;;;;;;;;;;;10301:15;10319:19;10325:12;:10;:12::i;:::-;10319:5;:19::i;:::-;10301:37;;10348:97;10366:7;10375:9;10386:12;10400:9;10411:7;10420:14;10436:8;10348:17;:97::i;:::-;10455:31;10468:7;10477:8;10455:12;:31::i;:::-;10504:7;10497:14;;;9763:756;;;;;;;;;:::o;1882:83:8:-;1921:13;1953:5;1946:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:83;:::o;25798:236:3:-;25857:7;25898:16;25906:7;25898;:16::i;:::-;25877:107;;;;;;;;;;;;;;;;;;;;;;26002:15;:24;26018:7;26002:24;;;;;;;;;;;;;;;;;;;;;25995:31;;25798:236;;;:::o;24963:550::-;8258:27;8272:12;:10;:12::i;:::-;8258:13;:27::i;:::-;8237:107;;;;;;;;;;;;;;;;;;;;;;36529:6;;;;;;;;;;;36528:7;36520:16;;;;;;25085:18;25106:16;25114:7;25106;:16::i;:::-;25085:37;;25160:10;25154:16;;:2;:16;;;;25133:92;;;;;;;;;;;;;;;;;;;;;;25273:10;25257:26;;:12;:10;:12::i;:::-;:26;;;:72;;;;25287:42;25304:10;25316:12;:10;:12::i;:::-;25287:16;:42::i;:::-;25257:72;25236:181;;;;;;;;;;;;;;;;;;;;;;25455:2;25428:15;:24;25444:7;25428:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;25497:7;25493:2;25472:33;;25481:10;25472:33;;;;;;;;;;;;36546:1;24963:550;;:::o;2063:40::-;;;;:::o;22324:98::-;22368:7;22395:19;:9;:17;:19::i;:::-;22388:26;;22324:98;:::o;12263:764::-;12595:7;8716:22;8725:12;:10;:12::i;:::-;8716:8;:22::i;:::-;8695:122;;;;;;;;;;;;;;;;;;;;;;36529:6;;;;;;;;;;;36528:7;36520:16;;;;;;12640:7;;12627:9;:20;;12619:29;;;;;;12680:63;12697:9;12708;12719:7;12728:14;12680:16;:63::i;:::-;12659:135;;;;;;;;;;;;;;;;;;;;;;12805:15;12823:23;12833:12;:10;:12::i;:::-;12823:9;:23::i;:::-;12805:41;;12856:97;12874:7;12883:9;12894:12;12908:9;12919:7;12928:14;12944:8;12856:17;:97::i;:::-;12963:31;12976:7;12985:8;12963:12;:31::i;:::-;13012:7;13005:14;;;12263:764;;;;;;;;;:::o;27597:561::-;36529:6;;;;;;;;;;;36528:7;36520:16;;;;;;27735:41;27754:12;:10;:12::i;:::-;27768:7;27735:18;:41::i;:::-;27714:137;;;;;;;;;;;;;;;;;;;;;;27883:19;27897:4;27883:13;:19::i;:::-;27862:118;;;;;;;;;;;;;;;;;;;;;;28012:17;28026:2;28012:13;:17::i;:::-;27991:116;;;;;;;;;;;;;;;;;;;;;;28118:32;28132:4;28138:2;28142:7;28118:13;:32::i;:::-;27597:561;;;:::o;21205:985::-;21268:16;21336:1;21318:20;;:6;:20;;;;21297:104;;;;;;;;;;;;;;;;;;;;;;21412:18;21433:36;:18;:26;21452:6;21433:26;;;;;;;;;;;;;;;:34;:36::i;:::-;21412:57;;21497:1;21483:10;:15;21479:704;;;21572:1;21558:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;21558:16:3;;;;21551:23;;;;;21479:704;21605:23;21645:10;21631:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;21631:25:3;;;;21605:51;;21670:19;21692:13;:11;:13::i;:::-;21670:35;;21719:19;21741:1;21719:23;;21877:15;21922:1;21912:11;;21907:238;21936:11;21925:7;:22;21907:238;;22018:6;21982:42;;:16;:25;21999:7;21982:25;;;;;;;;;;;:32;;;;;;;;;;;;:42;;;21978:153;;;22070:7;22048:6;22055:11;22048:19;;;;;;;;;;;;;:29;;;;;22099:13;;;;;;;21978:153;21949:9;;;;;;;21907:238;;;22166:6;22159:13;;;;;;;21205:985;;;;:::o;7951:120::-;8011:4;8034:8;;;;;;;;;;;:22;;;8057:6;8034:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8034:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8034:30:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8034:30:3;;;;;;;;;8027:37;;7951:120;;;:::o;37031:128::-;6685:6;;;;;;;;;;;6669:22;;:12;:10;:12::i;:::-;:22;;;6668:52;;;;6713:6;;;;;;;;;;;6697:22;;:12;:10;:12::i;:::-;:22;;;6668:52;6647:126;;;;;;;;;;;;;;;;;;;;;;36670:6;;;;;;;;;;;36662:15;;;;;;37147:5;37138:6;;:14;;;;;;;;;;;;;;;;;;37031:128::o;28807:134::-;28894:39;28911:4;28917:2;28921:7;28894:39;;;;;;;;;;;;:16;:39::i;:::-;28807:134;;;:::o;34957:230::-;36529:6;;;;;;;;;;;36528:7;36520:16;;;;;;35041:41;35060:12;:10;:12::i;:::-;35074:7;35041:18;:41::i;:::-;35020:134;;;;;;;;;;;;;;;;;;;;;;35165:14;35171:7;35165:5;:14::i;:::-;34957:230;:::o;1091:21::-;;;;;;;;;;;;;:::o;4391:26::-;;;;;;;;;;;;;:::o;37191:305::-;6685:6;;;;;;;;;;;6669:22;;:12;:10;:12::i;:::-;:22;;;6668:52;;;;6713:6;;;;;;;;;;;6697:22;;:12;:10;:12::i;:::-;:22;;;6668:52;6647:126;;;;;;;;;;;;;;;;;;;;;;37344:12;37367:4;37359:21;;;37344:36;;37391:12;37409:10;:15;;37431:7;37409:34;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;37390:53:3;;;37461:7;37453:35;;;;;;;;;;;;;;;;;;;;;;6783:1;;37191:305::o;23103:152::-;23158:7;23178:18;23199:11;:20;23211:7;23199:20;;;;;;;;;;;;;;;;;;;;;23178:41;;23237:10;23230:17;;;23103:152;;;:::o;22631:253::-;22691:7;22754:1;22732:24;;:10;:24;;;;22711:108;;;;;;;;;;;;;;;;;;;;;;22837:39;:17;:29;22855:10;22837:29;;;;;;;;;;;;;;;:37;:39::i;:::-;22830:46;;22631:253;;;:::o;1064:21::-;;;;;;;;;;;;;:::o;20392:403::-;20514:15;20542:29;20574:27;:35;20602:6;20574:35;;;;;;;;;;;;;;;20610:9;;20574:46;;;;;;;;;;;;;;;;;;;;;20542:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20630:17;20663:1;:8;20650:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20630:42;;20688:6;20697:1;20688:10;;20683:86;20704:1;:8;20700:1;:12;20683:86;;;20741:1;20743;20741:4;;;;;;;;;;;;;;:17;;;20733:1;20735;20733:4;;;;;;;;;;;;;:25;;;;20714:3;;;;;;;20683:86;;;;20786:1;20779:8;;;;20392:403;;;;;:::o;1186:32::-;;;;;;;;;;;;;:::o;7678:105::-;6685:6;;;;;;;;;;;6669:22;;:12;:10;:12::i;:::-;:22;;;6668:52;;;;6713:6;;;;;;;;;;;6697:22;;:12;:10;:12::i;:::-;:22;;;6668:52;6647:126;;;;;;;;;;;;;;;;;;;;;;7772:3;7762:7;:13;;;;7678:105;:::o;36773:80::-;6685:6;;;;;;;;;;;6669:22;;:12;:10;:12::i;:::-;:22;;;6668:52;;;;6713:6;;;;;;;;;;;6697:22;;:12;:10;:12::i;:::-;:22;;;6668:52;6647:126;;;;;;;;;;;;;;;;;;;;;;36529:6;;;;;;;;;;;36528:7;36520:16;;;;;;36842:4;36833:6;;:13;;;;;;;;;;;;;;;;;;36773:80::o;23673:840::-;23738:16;23766:18;23787:21;23797:10;23787:9;:21::i;:::-;23766:42;;23836:1;23822:10;:15;23818:689;;;23911:1;23897:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;23897:16:3;;;;23890:23;;;;;23818:689;23944:23;23984:10;23970:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;23970:25:3;;;;23944:51;;24009:19;24031:13;:11;:13::i;:::-;24009:35;;24058:19;24080:1;24058:23;;24209:15;24254:1;24244:11;;24239:230;24268:11;24257:7;:22;24239:230;;24338:10;24314:34;;:11;:20;24326:7;24314:20;;;;;;;;;;;;;;;;;;;;;:34;;;24310:145;;;24394:7;24372:6;24379:11;24372:19;;;;;;;;;;;;;:29;;;;;24423:13;;;;;;;24310:145;24281:9;;;;;;;24239:230;;;24490:6;24483:13;;;;;;;23673:840;;;;:::o;2074:87:8:-;2115:13;2147:7;2140:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:87;:::o;26327:309:3:-;8258:27;8272:12;:10;:12::i;:::-;8258:13;:27::i;:::-;8237:107;;;;;;;;;;;;;;;;;;;;;;36529:6;;;;;;;;;;;36528:7;36520:16;;;;;;26471:12;:10;:12::i;:::-;26465:18;;:2;:18;;;;26457:56;;;;;;;;;;;;;;;;;;;;;;26563:8;26524:18;:32;26543:12;:10;:12::i;:::-;26524:32;;;;;;;;;;;;;;;:36;26557:2;26524:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;26615:2;26586:42;;26601:12;:10;:12::i;:::-;26586:42;;;26619:8;26586:42;;;;;;;;;;;;;;;26327:309;;:::o;19938:330::-;20008:15;20036:26;20065:24;:32;20090:6;20065:32;;;;;;;;;;;;;;;20036:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20107:17;20140:1;:8;20127:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20107:42;;20165:6;20174:1;20165:10;;20160:82;20181:1;:8;20177:1;:12;20160:82;;;20217:1;20219;20217:4;;;;;;;;;;;;;;:14;;;20210:1;20212;20210:4;;;;;;;;;;;;;:21;;;;20191:3;;;;;;;20160:82;;;;20259:1;20252:8;;;;19938:330;;;:::o;8430:108::-;8486:4;8509:22;8523:7;8509:13;:22::i;:::-;8502:29;;8430:108;;;:::o;29663:594::-;36529:6;;;;;;;;;;;36528:7;36520:16;;;;;;29824:19;29838:4;29824:13;:19::i;:::-;29803:118;;;;;;;;;;;;;;;;;;;;;;29953:17;29967:2;29953:13;:17::i;:::-;29932:116;;;;;;;;;;;;;;;;;;;;;;30080:41;30099:12;:10;:12::i;:::-;30113:7;30080:18;:41::i;:::-;30059:137;;;;;;;;;;;;;;;;;;;;;;30207:42;30225:4;30231:2;30235:7;30244:4;30207:17;:42::i;:::-;29663:594;;;;:::o;10608:679::-;10896:7;8716:22;8725:12;:10;:12::i;:::-;8716:8;:22::i;:::-;8695:122;;;;;;;;;;;;;;;;;;;;;;36529:6;;;;;;;;;;;36528:7;36520:16;;;;;;10941:7;;10928:9;:20;;10920:29;;;;;;10981:63;10998:9;11009;11020:7;11029:14;10981:16;:63::i;:::-;10960:135;;;;;;;;;;;;;;;;;;;;;;11106:15;11124:23;11134:12;:10;:12::i;:::-;11124:9;:23::i;:::-;11106:41;;11157:97;11175:7;11184:9;11195:12;11209:9;11220:7;11229:14;11245:8;11157:17;:97::i;:::-;11272:7;11265:14;;;10608:679;;;;;;;;:::o;8952:671::-;9236:7;8716:22;8725:12;:10;:12::i;:::-;8716:8;:22::i;:::-;8695:122;;;;;;;;;;;;;;;;;;;;;;36529:6;;;;;;;;;;;36528:7;36520:16;;;;;;9281:7;;9268:9;:20;;9260:29;;;;;;9321:63;9338:9;9349;9360:7;9369:14;9321:16;:63::i;:::-;9300:135;;;;;;;;;;;;;;;;;;;;;;9446:15;9464:19;9470:12;:10;:12::i;:::-;9464:5;:19::i;:::-;9446:37;;9493:97;9511:7;9520:9;9531:12;9545:9;9556:7;9565:14;9581:8;9493:17;:97::i;:::-;9608:7;9601:14;;;8952:671;;;;;;;;:::o;7440:144::-;6685:6;;;;;;;;;;;6669:22;;:12;:10;:12::i;:::-;:22;;;6668:52;;;;6713:6;;;;;;;;;;;6697:22;;:12;:10;:12::i;:::-;:22;;;6668:52;6647:126;;;;;;;;;;;;;;;;;;;;;;7566:10;7538:8;;:39;;;;;;;;;;;;;;;;;;7440:144;:::o;15807:231::-;15865:13;15912:16;15920:7;15912;:16::i;:::-;15891:102;;;;;;;;;;;;;;;;;;;;;;16011:10;:19;16022:7;16011:19;;;;;;;;;;;16004:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15807:231;;;:::o;7117:169::-;6685:6;;;;;;;;;;;6669:22;;:12;:10;:12::i;:::-;:22;;;6668:52;;;;6713:6;;;;;;;;;;;6697:22;;:12;:10;:12::i;:::-;:22;;;6668:52;6647:126;;;;;;;;;;;;;;;;;;;;;;7234:1;7214:22;;:8;:22;;;7210:70;;7261:8;7252:6;;:17;;;;;;;;;;;;;;;;;;7210:70;7117:169;:::o;18729:789::-;18805:14;18833:13;18860:23;18897:26;18937:16;18967:14;18995:21;19030:15;19084:16;19092:7;19084;:16::i;:::-;19063:92;;;;;;;;;;;;;;;;;;;;;;19166:25;;:::i;:::-;19194:16;:25;19211:7;19194:25;;;;;;;;;;;19166:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19251:9;:16;;;19281;19289:7;19281;:16::i;:::-;19311:9;:19;;;19344:9;:22;;;19380:9;:19;;;19413:9;:17;;;19444:9;:24;;;19482:9;:18;;;19230:280;;;;;;;;;;;;;;;;;;;;;;;18729:789;;;;;;;;;:::o;6941:169::-;6685:6;;;;;;;;;;;6669:22;;:12;:10;:12::i;:::-;:22;;;6668:52;;;;6713:6;;;;;;;;;;;6697:22;;:12;:10;:12::i;:::-;:22;;;6668:52;6647:126;;;;;;;;;;;;;;;;;;;;;;7058:1;7038:22;;:8;:22;;;7034:70;;7085:8;7076:6;;:17;;;;;;;;;;;;;;;;;;7034:70;6941:169;:::o;26975:185::-;27084:4;27112:18;:30;27131:10;27112:30;;;;;;;;;;;;;;;:40;27143:8;27112:40;;;;;;;;;;;;;;;;;;;;;;;;;27105:47;;26975:185;;;;:::o;11448:712::-;11763:7;8716:22;8725:12;:10;:12::i;:::-;8716:8;:22::i;:::-;8695:122;;;;;;;;;;;;;;;;;;;;;;36529:6;;;;;;;;;;;36528:7;36520:16;;;;;;11808:7;;11795:9;:20;;11787:29;;;;;;11848:63;11865:9;11876;11887:7;11896:14;11848:16;:63::i;:::-;11827:135;;;;;;;;;;;;;;;;;;;;;;11973:15;11991:29;12001:12;:10;:12::i;:::-;12015:4;11991:9;:29::i;:::-;11973:47;;12030:97;12048:7;12057:9;12068:12;12082:9;12093:7;12102:14;12118:8;12030:17;:97::i;:::-;12145:7;12138:14;;;11448:712;;;;;;;;;:::o;6104:90::-;6149:7;6176:10;6169:17;;6104:90;:::o;16096:614::-;16265:4;16303:8;;;;;;;;;;;:38;;;16342:9;16303:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16303:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16303:49:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;16303:49:3;;;;;;;;;16282:142;;;;;;;;;;;;;;;;;;;;;;16468:14;16456:26;;:9;:26;;;16435:126;;;;;;;;;;;;;;;;;;;;;;16603:9;16593:19;;:7;:19;;;16572:108;;;;;;;;;;;;;;;;;;;;;;16698:4;16691:11;;16096:614;;;;;;:::o;14715:410::-;14760:7;14802:1;14788:16;;:2;:16;;;;14780:61;;;;;;;;;;;;;;;;;;;;;;14852:21;:9;:19;:21::i;:::-;14883:15;14901:19;:9;:17;:19::i;:::-;14883:37;;14954:2;14931:11;:20;14943:7;14931:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;14966:33;:17;:21;14984:2;14966:21;;;;;;;;;;;;;;;:31;:33::i;:::-;15009:34;:18;:22;15028:2;15009:22;;;;;;;;;;;;;;;:32;:34::i;:::-;15084:7;15080:2;15059:33;;15076:1;15059:33;;;;;;;;;;;;15110:7;15103:14;;;14715:410;;;:::o;17619:1103::-;17893:16;17901:7;17893;:16::i;:::-;17872:89;;;;;;;;;;;;;;;;;;;;;;17972:25;;:::i;:::-;18000:325;;;;;;;;18039:12;:10;:12::i;:::-;18000:325;;;;;;18084:9;18000:325;;;;18129:12;18000:325;;;;18174:9;18000:325;;;;;;18214:7;18000:325;;;;;;18259:14;18000:325;;;;;;18305:8;18000:325;;;;;17972:353;;18364:9;18336:16;:25;18353:7;18336:25;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18389;18416:9;18389:26;:37::i;:::-;18384:142;;18442:24;:38;18467:12;:10;:12::i;:::-;18442:38;;;;;;;;;;;;;;;18487:26;;;;;;;;18503:9;18487:26;;;18442:73;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;18442:73:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;18384:142;18541:54;18571:9;18582:12;18541:29;:54::i;:::-;18536:179;;18611:27;:41;18639:12;:10;:12::i;:::-;18611:41;;;;;;;;;;;;;;;18653:9;18611:52;;;;;;;;;;;;;;;;;;;;18670:32;;;;;;;;18689:12;18670:32;;;18611:93;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;18611::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;18536:179;17619:1103;;;;;;;;:::o;15394:221::-;15493:16;15501:7;15493;:16::i;:::-;15472:99;;;;;;;;;;;;;;;;;;;;;;15604:3;15582:10;:19;15593:7;15582:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;15394:221;;:::o;31472:165::-;31529:4;31546:18;31567:11;:20;31579:7;31567:20;;;;;;;;;;;;;;;;;;;;;31546:41;;31627:1;31605:24;;:10;:24;;;;31598:31;;;31472:165;;;:::o;1061:112:1:-;1126:7;1152;:14;;;1145:21;;1061:112;;;:::o;13520:136:3:-;13569:7;13589:15;13607:17;13617:2;13607:17;;;;;;;;;;;;:9;:17::i;:::-;13589:35;;13641:7;13634:14;;;13520:136;;;:::o;31998:411::-;32107:4;32149:16;32157:7;32149;:16::i;:::-;32128:107;;;;;;;;;;;;;;;;;;;;;;32246:18;32267:16;32275:7;32267;:16::i;:::-;32246:37;;32314:10;32303:21;;:7;:21;;;:56;;;;32352:7;32328:31;;:20;32340:7;32328:11;:20::i;:::-;:31;;;32303:56;:97;;;;32363:37;32380:10;32392:7;32363:16;:37::i;:::-;32303:97;32295:106;;;31998:411;;;;:::o;32790:518::-;32917:4;32897:24;;:16;32905:7;32897;:16::i;:::-;:24;;;32876:112;;;;;;;;;;;;;;;;;;;;;;33034:1;33020:16;;:2;:16;;;;32999:99;;;;;;;;;;;;;;;;;;;;;;33109:23;33124:7;33109:14;:23::i;:::-;33143:35;:17;:23;33161:4;33143:23;;;;;;;;;;;;;;;:33;:35::i;:::-;33188:33;:17;:21;33206:2;33188:21;;;;;;;;;;;;;;;:31;:33::i;:::-;33255:2;33232:11;:20;33244:7;33232:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;33292:7;33288:2;33273:27;;33282:4;33273:27;;;;;;;;;;;;32790:518;;;:::o;36239:92::-;36291:32;36297:16;36305:7;36297;:16::i;:::-;36315:7;36291:5;:32::i;:::-;36239:92;:::o;30961:316::-;31082:32;31096:4;31102:2;31106:7;31082:13;:32::i;:::-;31146:47;31169:4;31175:2;31179:7;31188:4;31146:22;:47::i;:::-;31125:144;;;;;;;;;;;;;;;;;;;;;;30961:316;;;;:::o;14220:309::-;14288:7;14308:15;14326:9;14332:2;14326:5;:9::i;:::-;14308:27;;14367:53;14398:1;14402:2;14406:7;14415:4;14367:22;:53::i;:::-;14346:150;;;;;;;;;;;;;;;;;;;;;;14514:7;14507:14;;;14220:309;;;;:::o;1179:89:1:-;1260:1;1242:7;:14;;;:19;;;;;;;;;;;1179:89;:::o;16717:413:3:-;16816:4;16833:26;16862:24;:36;16887:10;16862:36;;;;;;;;;;;;;;;16833:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16908:15;16926:5;16908:23;;16946:6;16955:1;16946:10;;16941:155;16962:1;:8;16958:1;:12;16941:155;;;16995:39;17008:9;17019:1;17021;17019:4;;;;;;;;;;;;;;:14;;;16995:12;:39::i;:::-;16991:95;;;17067:4;17054:17;;16991:95;16972:3;;;;;;;16941:155;;;;17113:10;17106:17;;;;16717:413;;;:::o;17137:475::-;17275:4;17292:29;17324:27;:39;17352:10;17324:39;;;;;;;;;;;;;;;17364:9;17324:50;;;;;;;;;;;;;;;;;;;;17292:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17384:15;17402:5;17384:23;;17422:6;17431:1;17422:10;;17417:161;17438:1;:8;17434:1;:12;17417:161;;;17471:45;17484:12;17498:1;17500;17498:4;;;;;;;;;;;;;;:17;;;17471:12;:45::i;:::-;17467:101;;;17549:4;17536:17;;17467:101;17448:3;;;;;;;17417:161;;;;17595:10;17588:17;;;;17137:475;;;;:::o;34415:173::-;34515:1;34479:38;;:15;:24;34495:7;34479:24;;;;;;;;;;;;;;;;;;;;;:38;;;34475:106;;34568:1;34533:15;:24;34549:7;34533:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;34475:106;34415:173;:::o;1274:108:1:-;1354:21;1373:1;1354:7;:14;;;:18;;:21;;;;:::i;:::-;1337:7;:14;;:38;;;;1274:108;:::o;35461:597:3:-;35574:10;35554:30;;:16;35562:7;35554;:16::i;:::-;:30;;;35533:114;;;;;;;;;;;;;;;;;;;;;;35658:23;35673:7;35658:14;:23::i;:::-;35692:41;:17;:29;35710:10;35692:29;;;;;;;;;;;;;;;:39;:41::i;:::-;35774:1;35743:11;:20;35755:7;35743:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;35865:1;35834:10;:19;35845:7;35834:19;;;;;;;;;;;35828:33;;;;;;;;;;;;;;;;:38;35824:95;;35889:10;:19;35900:7;35889:19;;;;;;;;;;;;35882:26;;;;:::i;:::-;35824:95;35968:16;:25;35985:7;35968:25;;;;;;;;;;;;35961:32;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36042:7;36038:1;36009:41;;36018:10;36009:41;;;;;;;;;;;;35461:597;;:::o;33896:357::-;34024:4;34050:15;:2;:13;;;:15::i;:::-;34045:58;;34088:4;34081:11;;;;34045:58;34113:13;34145:2;34129:36;;;34166:12;:10;:12::i;:::-;34180:4;34186:7;34195:4;34129:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34129:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;34129:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;34129:71:3;;;;;;;;;34113:87;;1445:10;34228:16;;34218:26;;;:6;:26;;;;34210:35;;;33896:357;;;;;;;:::o;37530:230::-;37655:4;37747:1;37729:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;37729:21:3;;;37719:32;;;;;;37711:1;37693:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;37693:21:3;;;37683:32;;;;;;:68;37675:78;;37530:230;;;;:::o;1276:134:10:-;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1353:50;;1276:134;;;;:::o;559:797:0:-;619:4;1064:16;1090:19;1112:66;1090:88;;;;1279:7;1267:20;1255:32;;1318:3;1306:15;;:8;:15;;:42;;;;;1337:11;1325:8;:23;;1306:42;1298:51;;;;559:797;;;:::o;1846:187:10:-;1932:7;1964:1;1959;:6;;1967:12;1951:29;;;;;;;;;;;;;;;;;;;;;;;;;1990:9;2006:1;2002;:5;1990:17;;2025:1;2018:8;;;1846:187;;;;;:::o;925:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:128;;354:6;348:13;339:22;;366:30;390:5;366:30;;;333:68;;;;;408:128;;487:6;474:20;465:29;;499:32;525:5;499:32;;;459:77;;;;;543:132;;626:6;620:13;611:22;;638:32;664:5;638:32;;;605:70;;;;;683:440;;784:3;777:4;769:6;765:17;761:27;751:2;;802:1;799;792:12;751:2;839:6;826:20;861:64;876:48;917:6;876:48;;;861:64;;;852:73;;945:6;938:5;931:21;981:4;973:6;969:17;1014:4;1007:5;1003:16;1049:3;1040:6;1035:3;1031:16;1028:25;1025:2;;;1066:1;1063;1056:12;1025:2;1076:41;1110:6;1105:3;1100;1076:41;;;744:379;;;;;;;;1146:336;;;1261:3;1254:4;1246:6;1242:17;1238:27;1228:2;;1279:1;1276;1269:12;1228:2;1312:6;1299:20;1289:30;;1339:18;1331:6;1328:30;1325:2;;;1371:1;1368;1361:12;1325:2;1405:4;1397:6;1393:17;1381:29;;1455:3;1448;1440:6;1436:16;1426:8;1422:31;1419:40;1416:2;;;1472:1;1469;1462:12;1416:2;1221:261;;;;;;1491:442;;1593:3;1586:4;1578:6;1574:17;1570:27;1560:2;;1611:1;1608;1601:12;1560:2;1648:6;1635:20;1670:65;1685:49;1727:6;1685:49;;;1670:65;;;1661:74;;1755:6;1748:5;1741:21;1791:4;1783:6;1779:17;1824:4;1817:5;1813:16;1859:3;1850:6;1845:3;1841:16;1838:25;1835:2;;;1876:1;1873;1866:12;1835:2;1886:41;1920:6;1915:3;1910;1886:41;;;1553:380;;;;;;;;1941:128;;2020:6;2007:20;1998:29;;2032:32;2058:5;2032:32;;;1992:77;;;;;2076:130;;2156:6;2143:20;2134:29;;2168:33;2195:5;2168:33;;;2128:78;;;;;2213:128;;2292:6;2279:20;2270:29;;2304:32;2330:5;2304:32;;;2264:77;;;;;2348:241;;2452:2;2440:9;2431:7;2427:23;2423:32;2420:2;;;2468:1;2465;2458:12;2420:2;2503:1;2520:53;2565:7;2556:6;2545:9;2541:22;2520:53;;;2510:63;;2482:97;2414:175;;;;;2596:366;;;2717:2;2705:9;2696:7;2692:23;2688:32;2685:2;;;2733:1;2730;2723:12;2685:2;2768:1;2785:53;2830:7;2821:6;2810:9;2806:22;2785:53;;;2775:63;;2747:97;2875:2;2893:53;2938:7;2929:6;2918:9;2914:22;2893:53;;;2883:63;;2854:98;2679:283;;;;;;2969:491;;;;3107:2;3095:9;3086:7;3082:23;3078:32;3075:2;;;3123:1;3120;3113:12;3075:2;3158:1;3175:53;3220:7;3211:6;3200:9;3196:22;3175:53;;;3165:63;;3137:97;3265:2;3283:53;3328:7;3319:6;3308:9;3304:22;3283:53;;;3273:63;;3244:98;3373:2;3391:53;3436:7;3427:6;3416:9;3412:22;3391:53;;;3381:63;;3352:98;3069:391;;;;;;3467:721;;;;;3631:3;3619:9;3610:7;3606:23;3602:33;3599:2;;;3648:1;3645;3638:12;3599:2;3683:1;3700:53;3745:7;3736:6;3725:9;3721:22;3700:53;;;3690:63;;3662:97;3790:2;3808:53;3853:7;3844:6;3833:9;3829:22;3808:53;;;3798:63;;3769:98;3898:2;3916:53;3961:7;3952:6;3941:9;3937:22;3916:53;;;3906:63;;3877:98;4034:2;4023:9;4019:18;4006:32;4058:18;4050:6;4047:30;4044:2;;;4090:1;4087;4080:12;4044:2;4110:62;4164:7;4155:6;4144:9;4140:22;4110:62;;;4100:72;;3985:193;3593:595;;;;;;;;4195:360;;;4313:2;4301:9;4292:7;4288:23;4284:32;4281:2;;;4329:1;4326;4319:12;4281:2;4364:1;4381:53;4426:7;4417:6;4406:9;4402:22;4381:53;;;4371:63;;4343:97;4471:2;4489:50;4531:7;4522:6;4511:9;4507:22;4489:50;;;4479:60;;4450:95;4275:280;;;;;;4562:492;;;;4703:2;4691:9;4682:7;4678:23;4674:32;4671:2;;;4719:1;4716;4709:12;4671:2;4754:1;4771:53;4816:7;4807:6;4796:9;4792:22;4771:53;;;4761:63;;4733:97;4889:2;4878:9;4874:18;4861:32;4913:18;4905:6;4902:30;4899:2;;;4945:1;4942;4935:12;4899:2;4973:65;5030:7;5021:6;5010:9;5006:22;4973:65;;;4963:75;;;;4840:204;4665:389;;;;;;5061:366;;;5182:2;5170:9;5161:7;5157:23;5153:32;5150:2;;;5198:1;5195;5188:12;5150:2;5233:1;5250:53;5295:7;5286:6;5275:9;5271:22;5250:53;;;5240:63;;5212:97;5340:2;5358:53;5403:7;5394:6;5383:9;5379:22;5358:53;;;5348:63;;5319:98;5144:283;;;;;;5434:257;;5546:2;5534:9;5525:7;5521:23;5517:32;5514:2;;;5562:1;5559;5552:12;5514:2;5597:1;5614:61;5667:7;5658:6;5647:9;5643:22;5614:61;;;5604:71;;5576:105;5508:183;;;;;5698:239;;5801:2;5789:9;5780:7;5776:23;5772:32;5769:2;;;5817:1;5814;5807:12;5769:2;5852:1;5869:52;5913:7;5904:6;5893:9;5889:22;5869:52;;;5859:62;;5831:96;5763:174;;;;;5944:261;;6058:2;6046:9;6037:7;6033:23;6029:32;6026:2;;;6074:1;6071;6064:12;6026:2;6109:1;6126:63;6181:7;6172:6;6161:9;6157:22;6126:63;;;6116:73;;6088:107;6020:185;;;;;6212:1073;;;;;;;6417:3;6405:9;6396:7;6392:23;6388:33;6385:2;;;6434:1;6431;6424:12;6385:2;6497:1;6486:9;6482:17;6469:31;6520:18;6512:6;6509:30;6506:2;;;6552:1;6549;6542:12;6506:2;6572:63;6627:7;6618:6;6607:9;6603:22;6572:63;;;6562:73;;6448:193;6700:2;6689:9;6685:18;6672:32;6724:18;6716:6;6713:30;6710:2;;;6756:1;6753;6746:12;6710:2;6776:63;6831:7;6822:6;6811:9;6807:22;6776:63;;;6766:73;;6651:194;6876:2;6894:52;6938:7;6929:6;6918:9;6914:22;6894:52;;;6884:62;;6855:97;6983:2;7001:52;7045:7;7036:6;7025:9;7021:22;7001:52;;;6991:62;;6962:97;7090:3;7109:52;7153:7;7144:6;7133:9;7129:22;7109:52;;;7099:62;;7069:98;7198:3;7217:52;7261:7;7252:6;7241:9;7237:22;7217:52;;;7207:62;;7177:98;6379:906;;;;;;;;;7292:1303;;;;;;;;7523:3;7511:9;7502:7;7498:23;7494:33;7491:2;;;7540:1;7537;7530:12;7491:2;7603:1;7592:9;7588:17;7575:31;7626:18;7618:6;7615:30;7612:2;;;7658:1;7655;7648:12;7612:2;7678:63;7733:7;7724:6;7713:9;7709:22;7678:63;;;7668:73;;7554:193;7806:2;7795:9;7791:18;7778:32;7830:18;7822:6;7819:30;7816:2;;;7862:1;7859;7852:12;7816:2;7882:63;7937:7;7928:6;7917:9;7913:22;7882:63;;;7872:73;;7757:194;7982:2;8000:52;8044:7;8035:6;8024:9;8020:22;8000:52;;;7990:62;;7961:97;8089:2;8107:52;8151:7;8142:6;8131:9;8127:22;8107:52;;;8097:62;;8068:97;8196:3;8215:52;8259:7;8250:6;8239:9;8235:22;8215:52;;;8205:62;;8175:98;8304:3;8323:52;8367:7;8358:6;8347:9;8343:22;8323:52;;;8313:62;;8283:98;8440:3;8429:9;8425:19;8412:33;8465:18;8457:6;8454:30;8451:2;;;8497:1;8494;8487:12;8451:2;8517:62;8571:7;8562:6;8551:9;8547:22;8517:62;;;8507:72;;8391:194;7485:1110;;;;;;;;;;;8602:1305;;;;;;;;8834:3;8822:9;8813:7;8809:23;8805:33;8802:2;;;8851:1;8848;8841:12;8802:2;8914:1;8903:9;8899:17;8886:31;8937:18;8929:6;8926:30;8923:2;;;8969:1;8966;8959:12;8923:2;8989:63;9044:7;9035:6;9024:9;9020:22;8989:63;;;8979:73;;8865:193;9117:2;9106:9;9102:18;9089:32;9141:18;9133:6;9130:30;9127:2;;;9173:1;9170;9163:12;9127:2;9193:63;9248:7;9239:6;9228:9;9224:22;9193:63;;;9183:73;;9068:194;9293:2;9311:52;9355:7;9346:6;9335:9;9331:22;9311:52;;;9301:62;;9272:97;9400:2;9418:52;9462:7;9453:6;9442:9;9438:22;9418:52;;;9408:62;;9379:97;9507:3;9526:52;9570:7;9561:6;9550:9;9546:22;9526:52;;;9516:62;;9486:98;9615:3;9634:52;9678:7;9669:6;9658:9;9654:22;9634:52;;;9624:62;;9594:98;9751:3;9740:9;9736:19;9723:33;9776:18;9768:6;9765:30;9762:2;;;9808:1;9805;9798:12;9762:2;9828:63;9883:7;9874:6;9863:9;9859:22;9828:63;;;9818:73;;9702:195;8796:1111;;;;;;;;;;;9914:241;;10018:2;10006:9;9997:7;9993:23;9989:32;9986:2;;;10034:1;10031;10024:12;9986:2;10069:1;10086:53;10131:7;10122:6;10111:9;10107:22;10086:53;;;10076:63;;10048:97;9980:175;;;;;10163:181;;10276:62;10334:3;10326:6;10276:62;;;10262:76;;10255:89;;;;;10353:173;;10440:46;10482:3;10474:6;10440:46;;;10515:4;10510:3;10506:14;10492:28;;10433:93;;;;;10534:113;10617:24;10635:5;10617:24;;;10612:3;10605:37;10599:48;;;10683:896;;10840:60;10894:5;10840:60;;;10913:92;10998:6;10993:3;10913:92;;;10906:99;;11028:3;11070:4;11062:6;11058:17;11053:3;11049:27;11097:62;11153:5;11097:62;;;11179:7;11207:1;11192:348;11217:6;11214:1;11211:13;11192:348;;;11279:9;11273:4;11269:20;11264:3;11257:33;11324:6;11318:13;11346:76;11417:4;11402:13;11346:76;;;11338:84;;11439:66;11498:6;11439:66;;;11429:76;;11528:4;11523:3;11519:14;11512:21;;11249:291;11239:1;11236;11232:9;11227:14;;11192:348;;;11196:14;11553:4;11546:11;;11570:3;11563:10;;10819:760;;;;;;;;;;11618:690;;11763:54;11811:5;11763:54;;;11830:86;11909:6;11904:3;11830:86;;;11823:93;;11937:56;11987:5;11937:56;;;12013:7;12041:1;12026:260;12051:6;12048:1;12045:13;12026:260;;;12118:6;12112:13;12139:63;12198:3;12183:13;12139:63;;;12132:70;;12219:60;12272:6;12219:60;;;12209:70;;12083:203;12073:1;12070;12066:9;12061:14;;12026:260;;;12030:14;12299:3;12292:10;;11742:566;;;;;;;;12316:104;12393:21;12408:5;12393:21;;;12388:3;12381:34;12375:45;;;12427:343;;12537:38;12569:5;12537:38;;;12587:70;12650:6;12645:3;12587:70;;;12580:77;;12662:52;12707:6;12702:3;12695:4;12688:5;12684:16;12662:52;;;12735:29;12757:6;12735:29;;;12730:3;12726:39;12719:46;;12517:253;;;;;;12777:174;12884:61;12939:5;12884:61;;;12879:3;12872:74;12866:85;;;12983:313;;13117:89;13199:6;13194:3;13117:89;;;13110:96;;13218:43;13254:6;13249:3;13242:5;13218:43;;;13283:6;13278:3;13274:16;13267:23;;13103:193;;;;;;13304:347;;13416:39;13449:5;13416:39;;;13467:71;13531:6;13526:3;13467:71;;;13460:78;;13543:52;13588:6;13583:3;13576:4;13569:5;13565:16;13543:52;;;13616:29;13638:6;13616:29;;;13611:3;13607:39;13600:46;;13396:255;;;;;;13658:360;;13788:39;13821:5;13788:39;;;13839:89;13921:6;13916:3;13839:89;;;13832:96;;13933:52;13978:6;13973:3;13966:4;13959:5;13955:16;13933:52;;;14006:6;14001:3;13997:16;13990:23;;13768:250;;;;;;14025:319;;14123:35;14152:5;14123:35;;;14170:61;14224:6;14219:3;14170:61;;;14163:68;;14236:52;14281:6;14276:3;14269:4;14262:5;14258:16;14236:52;;;14309:29;14331:6;14309:29;;;14304:3;14300:39;14293:46;;14103:241;;;;;;14352:364;;14512:67;14576:2;14571:3;14512:67;;;14505:74;;14612:66;14608:1;14603:3;14599:11;14592:87;14707:2;14702:3;14698:12;14691:19;;14498:218;;;;14725:465;;14885:67;14949:2;14944:3;14885:67;;;14878:74;;14985:66;14981:1;14976:3;14972:11;14965:87;15086:66;15081:2;15076:3;15072:12;15065:88;15181:2;15176:3;15172:12;15165:19;;14871:319;;;;15199:465;;15359:67;15423:2;15418:3;15359:67;;;15352:74;;15459:66;15455:1;15450:3;15446:11;15439:87;15560:66;15555:2;15550:3;15546:12;15539:88;15655:2;15650:3;15646:12;15639:19;;15345:319;;;;15673:364;;15833:67;15897:2;15892:3;15833:67;;;15826:74;;15933:66;15929:1;15924:3;15920:11;15913:87;16028:2;16023:3;16019:12;16012:19;;15819:218;;;;16046:465;;16206:67;16270:2;16265:3;16206:67;;;16199:74;;16306:66;16302:1;16297:3;16293:11;16286:87;16407:66;16402:2;16397:3;16393:12;16386:88;16502:2;16497:3;16493:12;16486:19;;16192:319;;;;16520:465;;16680:67;16744:2;16739:3;16680:67;;;16673:74;;16780:66;16776:1;16771:3;16767:11;16760:87;16881:66;16876:2;16871:3;16867:12;16860:88;16976:2;16971:3;16967:12;16960:19;;16666:319;;;;16994:465;;17154:67;17218:2;17213:3;17154:67;;;17147:74;;17254:66;17250:1;17245:3;17241:11;17234:87;17355:66;17350:2;17345:3;17341:12;17334:88;17450:2;17445:3;17441:12;17434:19;;17140:319;;;;17468:364;;17628:67;17692:2;17687:3;17628:67;;;17621:74;;17728:66;17724:1;17719:3;17715:11;17708:87;17823:2;17818:3;17814:12;17807:19;;17614:218;;;;17841:465;;18001:67;18065:2;18060:3;18001:67;;;17994:74;;18101:66;18097:1;18092:3;18088:11;18081:87;18202:66;18197:2;18192:3;18188:12;18181:88;18297:2;18292:3;18288:12;18281:19;;17987:319;;;;18315:465;;18475:67;18539:2;18534:3;18475:67;;;18468:74;;18575:66;18571:1;18566:3;18562:11;18555:87;18676:66;18671:2;18666:3;18662:12;18655:88;18771:2;18766:3;18762:12;18755:19;;18461:319;;;;18789:465;;18949:67;19013:2;19008:3;18949:67;;;18942:74;;19049:66;19045:1;19040:3;19036:11;19029:87;19150:66;19145:2;19140:3;19136:12;19129:88;19245:2;19240:3;19236:12;19229:19;;18935:319;;;;19263:364;;19423:67;19487:2;19482:3;19423:67;;;19416:74;;19523:66;19519:1;19514:3;19510:11;19503:87;19618:2;19613:3;19609:12;19602:19;;19409:218;;;;19636:465;;19796:67;19860:2;19855:3;19796:67;;;19789:74;;19896:66;19892:1;19887:3;19883:11;19876:87;19997:66;19992:2;19987:3;19983:12;19976:88;20092:2;20087:3;20083:12;20076:19;;19782:319;;;;20110:364;;20270:67;20334:2;20329:3;20270:67;;;20263:74;;20370:66;20366:1;20361:3;20357:11;20350:87;20465:2;20460:3;20456:12;20449:19;;20256:218;;;;20483:465;;20643:67;20707:2;20702:3;20643:67;;;20636:74;;20743:66;20739:1;20734:3;20730:11;20723:87;20844:66;20839:2;20834:3;20830:12;20823:88;20939:2;20934:3;20930:12;20923:19;;20629:319;;;;20957:364;;21117:67;21181:2;21176:3;21117:67;;;21110:74;;21217:66;21213:1;21208:3;21204:11;21197:87;21312:2;21307:3;21303:12;21296:19;;21103:218;;;;21330:465;;21490:67;21554:2;21549:3;21490:67;;;21483:74;;21590:66;21586:1;21581:3;21577:11;21570:87;21691:66;21686:2;21681:3;21677:12;21670:88;21786:2;21781:3;21777:12;21770:19;;21476:319;;;;21804:465;;21964:67;22028:2;22023:3;21964:67;;;21957:74;;22064:66;22060:1;22055:3;22051:11;22044:87;22165:66;22160:2;22155:3;22151:12;22144:88;22260:2;22255:3;22251:12;22244:19;;21950:319;;;;22278:364;;22438:67;22502:2;22497:3;22438:67;;;22431:74;;22538:66;22534:1;22529:3;22525:11;22518:87;22633:2;22628:3;22624:12;22617:19;;22424:218;;;;22651:296;;22828:83;22909:1;22904:3;22828:83;;;22821:90;;22939:1;22934:3;22930:11;22923:18;;22814:133;;;;22956:465;;23116:67;23180:2;23175:3;23116:67;;;23109:74;;23216:66;23212:1;23207:3;23203:11;23196:87;23317:66;23312:2;23307:3;23303:12;23296:88;23412:2;23407:3;23403:12;23396:19;;23102:319;;;;23430:465;;23590:67;23654:2;23649:3;23590:67;;;23583:74;;23690:66;23686:1;23681:3;23677:11;23670:87;23791:66;23786:2;23781:3;23777:12;23770:88;23886:2;23881:3;23877:12;23870:19;;23576:319;;;;23904:465;;24064:67;24128:2;24123:3;24064:67;;;24057:74;;24164:66;24160:1;24155:3;24151:11;24144:87;24265:66;24260:2;24255:3;24251:12;24244:88;24360:2;24355:3;24351:12;24344:19;;24050:319;;;;24378:364;;24538:67;24602:2;24597:3;24538:67;;;24531:74;;24638:66;24634:1;24629:3;24625:11;24618:87;24733:2;24728:3;24724:12;24717:19;;24524:218;;;;24751:465;;24911:67;24975:2;24970:3;24911:67;;;24904:74;;25011:66;25007:1;25002:3;24998:11;24991:87;25112:66;25107:2;25102:3;25098:12;25091:88;25207:2;25202:3;25198:12;25191:19;;24897:319;;;;25225:465;;25385:67;25449:2;25444:3;25385:67;;;25378:74;;25485:66;25481:1;25476:3;25472:11;25465:87;25586:66;25581:2;25576:3;25572:12;25565:88;25681:2;25676:3;25672:12;25665:19;;25371:319;;;;25699:465;;25859:67;25923:2;25918:3;25859:67;;;25852:74;;25959:66;25955:1;25950:3;25946:11;25939:87;26060:66;26055:2;26050:3;26046:12;26039:88;26155:2;26150:3;26146:12;26139:19;;25845:319;;;;26172:110;26253:23;26270:5;26253:23;;;26248:3;26241:36;26235:47;;;26289:103;26362:24;26380:5;26362:24;;;26357:3;26350:37;26344:48;;;26399:113;26482:24;26500:5;26482:24;;;26477:3;26470:37;26464:48;;;26519:110;26600:23;26617:5;26600:23;;;26595:3;26588:36;26582:47;;;26636:286;;26792:105;26893:3;26884:6;26876;26792:105;;;26785:112;;26914:3;26907:10;;26773:149;;;;;;26929:266;;27075:95;27166:3;27157:6;27075:95;;;27068:102;;27187:3;27180:10;;27056:139;;;;;27202:370;;27400:147;27543:3;27400:147;;;27393:154;;27564:3;27557:10;;27381:191;;;;27579:213;;27697:2;27686:9;27682:18;27674:26;;27711:71;27779:1;27768:9;27764:17;27755:6;27711:71;;;27668:124;;;;;27799:1155;;28145:3;28134:9;28130:19;28122:27;;28160:71;28228:1;28217:9;28213:17;28204:6;28160:71;;;28242:72;28310:2;28299:9;28295:18;28286:6;28242:72;;;28362:9;28356:4;28352:20;28347:2;28336:9;28332:18;28325:48;28387:78;28460:4;28451:6;28387:78;;;28379:86;;28513:9;28507:4;28503:20;28498:2;28487:9;28483:18;28476:48;28538:78;28611:4;28602:6;28538:78;;;28530:86;;28627:71;28693:3;28682:9;28678:19;28669:6;28627:71;;;28709;28775:3;28764:9;28760:19;28751:6;28709:71;;;28791;28857:3;28846:9;28842:19;28833:6;28791:71;;;28873;28939:3;28928:9;28924:19;28915:6;28873:71;;;28116:838;;;;;;;;;;;;28961:631;;29181:3;29170:9;29166:19;29158:27;;29196:71;29264:1;29253:9;29249:17;29240:6;29196:71;;;29278:72;29346:2;29335:9;29331:18;29322:6;29278:72;;;29361;29429:2;29418:9;29414:18;29405:6;29361:72;;;29481:9;29475:4;29471:20;29466:2;29455:9;29451:18;29444:48;29506:76;29577:4;29568:6;29506:76;;;29498:84;;29152:440;;;;;;;;29599:385;;29779:2;29768:9;29764:18;29756:26;;29829:9;29823:4;29819:20;29815:1;29804:9;29800:17;29793:47;29854:120;29969:4;29960:6;29854:120;;;29846:128;;29750:234;;;;;29991:361;;30159:2;30148:9;30144:18;30136:26;;30209:9;30203:4;30199:20;30195:1;30184:9;30180:17;30173:47;30234:108;30337:4;30328:6;30234:108;;;30226:116;;30130:222;;;;;30359:201;;30471:2;30460:9;30456:18;30448:26;;30485:65;30547:1;30536:9;30532:17;30523:6;30485:65;;;30442:118;;;;;30567:261;;30709:2;30698:9;30694:18;30686:26;;30723:95;30815:1;30804:9;30800:17;30791:6;30723:95;;;30680:148;;;;;30835:301;;30973:2;30962:9;30958:18;30950:26;;31023:9;31017:4;31013:20;31009:1;30998:9;30994:17;30987:47;31048:78;31121:4;31112:6;31048:78;;;31040:86;;30944:192;;;;;31143:407;;31334:2;31323:9;31319:18;31311:26;;31384:9;31378:4;31374:20;31370:1;31359:9;31355:17;31348:47;31409:131;31535:4;31409:131;;;31401:139;;31305:245;;;;31557:407;;31748:2;31737:9;31733:18;31725:26;;31798:9;31792:4;31788:20;31784:1;31773:9;31769:17;31762:47;31823:131;31949:4;31823:131;;;31815:139;;31719:245;;;;31971:407;;32162:2;32151:9;32147:18;32139:26;;32212:9;32206:4;32202:20;32198:1;32187:9;32183:17;32176:47;32237:131;32363:4;32237:131;;;32229:139;;32133:245;;;;32385:407;;32576:2;32565:9;32561:18;32553:26;;32626:9;32620:4;32616:20;32612:1;32601:9;32597:17;32590:47;32651:131;32777:4;32651:131;;;32643:139;;32547:245;;;;32799:407;;32990:2;32979:9;32975:18;32967:26;;33040:9;33034:4;33030:20;33026:1;33015:9;33011:17;33004:47;33065:131;33191:4;33065:131;;;33057:139;;32961:245;;;;33213:407;;33404:2;33393:9;33389:18;33381:26;;33454:9;33448:4;33444:20;33440:1;33429:9;33425:17;33418:47;33479:131;33605:4;33479:131;;;33471:139;;33375:245;;;;33627:407;;33818:2;33807:9;33803:18;33795:26;;33868:9;33862:4;33858:20;33854:1;33843:9;33839:17;33832:47;33893:131;34019:4;33893:131;;;33885:139;;33789:245;;;;34041:407;;34232:2;34221:9;34217:18;34209:26;;34282:9;34276:4;34272:20;34268:1;34257:9;34253:17;34246:47;34307:131;34433:4;34307:131;;;34299:139;;34203:245;;;;34455:407;;34646:2;34635:9;34631:18;34623:26;;34696:9;34690:4;34686:20;34682:1;34671:9;34667:17;34660:47;34721:131;34847:4;34721:131;;;34713:139;;34617:245;;;;34869:407;;35060:2;35049:9;35045:18;35037:26;;35110:9;35104:4;35100:20;35096:1;35085:9;35081:17;35074:47;35135:131;35261:4;35135:131;;;35127:139;;35031:245;;;;35283:407;;35474:2;35463:9;35459:18;35451:26;;35524:9;35518:4;35514:20;35510:1;35499:9;35495:17;35488:47;35549:131;35675:4;35549:131;;;35541:139;;35445:245;;;;35697:407;;35888:2;35877:9;35873:18;35865:26;;35938:9;35932:4;35928:20;35924:1;35913:9;35909:17;35902:47;35963:131;36089:4;35963:131;;;35955:139;;35859:245;;;;36111:407;;36302:2;36291:9;36287:18;36279:26;;36352:9;36346:4;36342:20;36338:1;36327:9;36323:17;36316:47;36377:131;36503:4;36377:131;;;36369:139;;36273:245;;;;36525:407;;36716:2;36705:9;36701:18;36693:26;;36766:9;36760:4;36756:20;36752:1;36741:9;36737:17;36730:47;36791:131;36917:4;36791:131;;;36783:139;;36687:245;;;;36939:407;;37130:2;37119:9;37115:18;37107:26;;37180:9;37174:4;37170:20;37166:1;37155:9;37151:17;37144:47;37205:131;37331:4;37205:131;;;37197:139;;37101:245;;;;37353:407;;37544:2;37533:9;37529:18;37521:26;;37594:9;37588:4;37584:20;37580:1;37569:9;37565:17;37558:47;37619:131;37745:4;37619:131;;;37611:139;;37515:245;;;;37767:407;;37958:2;37947:9;37943:18;37935:26;;38008:9;38002:4;37998:20;37994:1;37983:9;37979:17;37972:47;38033:131;38159:4;38033:131;;;38025:139;;37929:245;;;;38181:407;;38372:2;38361:9;38357:18;38349:26;;38422:9;38416:4;38412:20;38408:1;38397:9;38393:17;38386:47;38447:131;38573:4;38447:131;;;38439:139;;38343:245;;;;38595:407;;38786:2;38775:9;38771:18;38763:26;;38836:9;38830:4;38826:20;38822:1;38811:9;38807:17;38800:47;38861:131;38987:4;38861:131;;;38853:139;;38757:245;;;;39009:407;;39200:2;39189:9;39185:18;39177:26;;39250:9;39244:4;39240:20;39236:1;39225:9;39221:17;39214:47;39275:131;39401:4;39275:131;;;39267:139;;39171:245;;;;39423:407;;39614:2;39603:9;39599:18;39591:26;;39664:9;39658:4;39654:20;39650:1;39639:9;39635:17;39628:47;39689:131;39815:4;39689:131;;;39681:139;;39585:245;;;;39837:407;;40028:2;40017:9;40013:18;40005:26;;40078:9;40072:4;40068:20;40064:1;40053:9;40049:17;40042:47;40103:131;40229:4;40103:131;;;40095:139;;39999:245;;;;40251:407;;40442:2;40431:9;40427:18;40419:26;;40492:9;40486:4;40482:20;40478:1;40467:9;40463:17;40456:47;40517:131;40643:4;40517:131;;;40509:139;;40413:245;;;;40665:407;;40856:2;40845:9;40841:18;40833:26;;40906:9;40900:4;40896:20;40892:1;40881:9;40877:17;40870:47;40931:131;41057:4;40931:131;;;40923:139;;40827:245;;;;41079:407;;41270:2;41259:9;41255:18;41247:26;;41320:9;41314:4;41310:20;41306:1;41295:9;41291:17;41284:47;41345:131;41471:4;41345:131;;;41337:139;;41241:245;;;;41493:407;;41684:2;41673:9;41669:18;41661:26;;41734:9;41728:4;41724:20;41720:1;41709:9;41705:17;41698:47;41759:131;41885:4;41759:131;;;41751:139;;41655:245;;;;41907:213;;42025:2;42014:9;42010:18;42002:26;;42039:71;42107:1;42096:9;42092:17;42083:6;42039:71;;;41996:124;;;;;42127:256;;42189:2;42183:9;42173:19;;42227:4;42219:6;42215:17;42326:6;42314:10;42311:22;42290:18;42278:10;42275:34;42272:62;42269:2;;;42347:1;42344;42337:12;42269:2;42367:10;42363:2;42356:22;42167:216;;;;;42390:321;;42533:18;42525:6;42522:30;42519:2;;;42565:1;42562;42555:12;42519:2;42632:4;42628:9;42621:4;42613:6;42609:17;42605:33;42597:41;;42696:4;42690;42686:15;42678:23;;42456:255;;;;42718:322;;42862:18;42854:6;42851:30;42848:2;;;42894:1;42891;42884:12;42848:2;42961:4;42957:9;42950:4;42942:6;42938:17;42934:33;42926:41;;43025:4;43019;43015:15;43007:23;;42785:255;;;;43047:157;;43139:3;43131:11;;43177:4;43172:3;43168:14;43160:22;;43125:79;;;;43211:151;;43297:3;43289:11;;43335:4;43330:3;43326:14;43318:22;;43283:79;;;;43369:143;;43484:5;43478:12;43468:22;;43449:63;;;;43519:137;;43628:5;43622:12;43612:22;;43593:63;;;;43663:121;;43756:5;43750:12;43740:22;;43721:63;;;;43791:118;;43881:5;43875:12;43865:22;;43846:63;;;;43916:122;;44010:5;44004:12;43994:22;;43975:63;;;;44045:114;;44149:4;44144:3;44140:14;44132:22;;44126:33;;;;44166:108;;44264:4;44259:3;44255:14;44247:22;;44241:33;;;;44282:184;;44418:6;44413:3;44406:19;44455:4;44450:3;44446:14;44431:29;;44399:67;;;;;44475:178;;44605:6;44600:3;44593:19;44642:4;44637:3;44633:14;44618:29;;44586:67;;;;;44662:162;;44776:6;44771:3;44764:19;44813:4;44808:3;44804:14;44789:29;;44757:67;;;;;44833:144;;44968:3;44953:18;;44946:31;;;;;44986:153;;45091:6;45086:3;45079:19;45128:4;45123:3;45119:14;45104:29;;45072:67;;;;;45148:163;;45263:6;45258:3;45251:19;45300:4;45295:3;45291:14;45276:29;;45244:67;;;;;45320:145;;45456:3;45441:18;;45434:31;;;;;45473:91;;45535:24;45553:5;45535:24;;;45524:35;;45518:46;;;;45571:85;;45644:5;45637:13;45630:21;45619:32;;45613:43;;;;45663:144;;45735:66;45728:5;45724:78;45713:89;;45707:100;;;;45814:84;;45886:6;45879:5;45875:18;45864:29;;45858:40;;;;45905:121;;45978:42;45971:5;45967:54;45956:65;;45950:76;;;;46033:72;;46095:5;46084:16;;46078:27;;;;46112:92;;46184:14;46177:5;46173:26;46162:37;;46156:48;;;;46211:169;;46314:61;46369:5;46314:61;;;46301:74;;46295:85;;;;46387:132;;46490:24;46508:5;46490:24;;;46477:37;;46471:48;;;;46527:145;46608:6;46603:3;46598;46585:30;46664:1;46655:6;46650:3;46646:16;46639:27;46578:94;;;;46681:268;46746:1;46753:101;46767:6;46764:1;46761:13;46753:101;;;46843:1;46838:3;46834:11;46828:18;46824:1;46819:3;46815:11;46808:39;46789:2;46786:1;46782:10;46777:15;;46753:101;;;46869:6;46866:1;46863:13;46860:2;;;46934:1;46925:6;46920:3;46916:16;46909:27;46860:2;46730:219;;;;;46957:97;;47045:2;47041:7;47036:2;47029:5;47025:14;47021:28;47011:38;;47005:49;;;;47062:117;47131:24;47149:5;47131:24;;;47124:5;47121:35;47111:2;;47170:1;47167;47160:12;47111:2;47105:74;;47186:111;47252:21;47267:5;47252:21;;;47245:5;47242:32;47232:2;;47288:1;47285;47278:12;47232:2;47226:71;;47304:115;47372:23;47389:5;47372:23;;;47365:5;47362:34;47352:2;;47410:1;47407;47400:12;47352:2;47346:73;;47426:115;47494:23;47511:5;47494:23;;;47487:5;47484:34;47474:2;;47532:1;47529;47522:12;47474:2;47468:73;;47548:117;47617:24;47635:5;47617:24;;;47610:5;47607:35;47597:2;;47656:1;47653;47646:12;47597:2;47591:74;;47672:115;47740:23;47757:5;47740:23;;;47733:5;47730:34;47720:2;;47778:1;47775;47768:12;47720:2;47714:73;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n\n\n  Copyright 2019 Niche Networks, Inc. (owns & operates Microsponsors.io)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2328
      ]
    },
    "id": 2329,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2272,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2273,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2274,
        "nodeType": "ImportDirective",
        "scope": 2329,
        "sourceUnit": 2119,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2275,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2118,
              "src": "951:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2118",
                "typeString": "contract ERC721"
              }
            },
            "id": 2276,
            "nodeType": "InheritanceSpecifier",
            "src": "951:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2118,
          2128,
          2231
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nCopyright 2019 Niche Networks, Inc. (owns & operates Microsponsors.io)\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2328,
        "linearizedBaseContracts": [
          2328,
          2118,
          2231,
          142,
          2128
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2278,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2328,
            "src": "983:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2277,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "983:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2280,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2328,
            "src": "1030:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2279,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2283,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2328,
            "src": "1319:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2281,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1319:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2282,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1375:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2310,
              "nodeType": "Block",
              "src": "1528:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2292,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2278,
                      "src": "1539:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2293,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2285,
                      "src": "1547:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1539:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2295,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2296,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2280,
                      "src": "1561:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2297,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "1571:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1561:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2301,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2283,
                        "src": "1684:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2300,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1665:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2303,
                  "nodeType": "ExpressionStatement",
                  "src": "1665:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2307,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2289,
                        "src": "1753:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2304,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2622,
                        "src": "1725:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2328",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 368,
                      "src": "1725:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2309,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2311,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2285,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "1454:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2284,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2287,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "1474:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2286,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2289,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "1496:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1453:67:8"
            },
            "returnParameters": {
              "id": 2291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1528:0:8"
            },
            "scope": 2328,
            "src": "1441:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2318,
              "nodeType": "Block",
              "src": "1936:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2316,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2278,
                    "src": "1953:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2315,
                  "id": 2317,
                  "nodeType": "Return",
                  "src": "1946:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1895:2:8"
            },
            "returnParameters": {
              "id": 2315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2314,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "1921:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2313,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1920:15:8"
            },
            "scope": 2328,
            "src": "1882:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2326,
              "nodeType": "Block",
              "src": "2130:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2324,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2280,
                    "src": "2147:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2323,
                  "id": 2325,
                  "nodeType": "Return",
                  "src": "2140:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:2:8"
            },
            "returnParameters": {
              "id": 2323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2322,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2327,
                  "src": "2115:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2321,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2114:15:8"
            },
            "scope": 2328,
            "src": "2074:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2329,
        "src": "925:1239:8"
      }
    ],
    "src": "0:2165:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2328
      ]
    },
    "id": 2329,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2272,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2273,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2274,
        "nodeType": "ImportDirective",
        "scope": 2329,
        "sourceUnit": 2119,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2275,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2118,
              "src": "951:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2118",
                "typeString": "contract ERC721"
              }
            },
            "id": 2276,
            "nodeType": "InheritanceSpecifier",
            "src": "951:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2118,
          2128,
          2231
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nCopyright 2019 Niche Networks, Inc. (owns & operates Microsponsors.io)\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2328,
        "linearizedBaseContracts": [
          2328,
          2118,
          2231,
          142,
          2128
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2278,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2328,
            "src": "983:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2277,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "983:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2280,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2328,
            "src": "1030:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2279,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2283,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2328,
            "src": "1319:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2281,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1319:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2282,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1375:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2310,
              "nodeType": "Block",
              "src": "1528:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2292,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2278,
                      "src": "1539:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2293,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2285,
                      "src": "1547:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1539:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2295,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2296,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2280,
                      "src": "1561:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2297,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "1571:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1561:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2301,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2283,
                        "src": "1684:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2300,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1665:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2303,
                  "nodeType": "ExpressionStatement",
                  "src": "1665:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2307,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2289,
                        "src": "1753:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2304,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2622,
                        "src": "1725:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2328",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 368,
                      "src": "1725:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2309,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2311,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2285,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "1454:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2284,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2287,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "1474:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2286,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2289,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "1496:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1453:67:8"
            },
            "returnParameters": {
              "id": 2291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1528:0:8"
            },
            "scope": 2328,
            "src": "1441:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2318,
              "nodeType": "Block",
              "src": "1936:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2316,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2278,
                    "src": "1953:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2315,
                  "id": 2317,
                  "nodeType": "Return",
                  "src": "1946:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1895:2:8"
            },
            "returnParameters": {
              "id": 2315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2314,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "1921:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2313,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1920:15:8"
            },
            "scope": 2328,
            "src": "1882:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2326,
              "nodeType": "Block",
              "src": "2130:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2324,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2280,
                    "src": "2147:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2323,
                  "id": 2325,
                  "nodeType": "Return",
                  "src": "2140:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:2:8"
            },
            "returnParameters": {
              "id": 2323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2322,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2327,
                  "src": "2115:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2321,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2114:15:8"
            },
            "scope": 2328,
            "src": "2074:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2329,
        "src": "925:1239:8"
      }
    ],
    "src": "0:2165:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-12-31T03:26:46.620Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Customized for MicrosponsorsBurns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned"
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "isMinter(address)": {
        "details": "Checks if minter isWhitelisted()"
      },
      "isWhitelisted(address)": {
        "details": "Checks Registry contract for whitelisted status",
        "params": {
          "target": "The address to check"
        }
      },
      "mint(string,string,uint48,uint48,uint48,uint16)": {
        "details": "Function to mint tokens.",
        "return": "tokenId"
      },
      "mintWithTokenURI(string,string,uint48,uint48,uint48,uint16,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause actions on this contract"
      },
      "safeMint(string,string,uint48,uint48,uint48,uint16)": {
        "details": "Function to safely mint tokens.",
        "return": "tokenId"
      },
      "safeMint(string,string,uint48,uint48,uint48,uint16,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check."
        },
        "return": "tokenId"
      },
      "safeMintWithTokenURI(string,string,uint48,uint48,uint48,uint16,string)": {
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations."
      },
      "tokenMinterPropertyNames(address,string)": {
        "details": "Look up all Property Names a Minter has created Time Slots for      with a particular Content ID"
      },
      "tokenURI(uint256)": {
        "params": {
          "tokenId": "uint256 ID of the token to query"
        },
        "return": "URI for a given token ID."
      },
      "tokensMintedBy(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time)."
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership1(address)": {
        "details": "Transfer owner (admin) functions to another address",
        "params": {
          "newOwner": "Address of new owner/ admin of contract"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause the smart contract."
      },
      "updateMintFee(uint256)": {
        "details": "Update the fee (in wei) charged for minting a single token"
      },
      "updateRegistryAddress(address)": {
        "details": "Update contract address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "tokenURI(uint256)": {
        "notice": "Throws if the token ID does not exist. May return an empty string."
      },
      "tokensMintedBy(address)": {
        "notice": "Return all the Token IDs minted by a given account."
      },
      "unpause()": {
        "notice": "This is public rather than external so it can be called by  derived contracts."
      },
      "withdrawBalance()": {
        "notice": "* Withdraw **"
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Copyright 2019 Niche Networks, Inc. (owns & operates Microsponsors.io) Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  }
}