{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenToFederationId",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "safeMintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokensMintedBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        }
      ],
      "name": "tokenMinterPropertyNames",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "updateMintFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenToFederationId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokensMintedBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"tokenMinterPropertyNames\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"updateMintFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Customized for MicrosponsorsBurns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"mint(string,string,uint48,uint48,uint48,uint16,bool,uint32)\":{\"details\":\"Function to mint tokens.\",\"return\":\"tokenId\"},\"mintWithTokenURI(string,string,uint48,uint48,uint48,uint16,bool,uint32,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause minting and transfers.\"},\"safeMint(string,string,uint48,uint48,uint48,uint16,bool,uint32)\":{\"details\":\"Function to safely mint tokens.\",\"return\":\"tokenId\"},\"safeMint(string,string,uint48,uint48,uint48,uint16,bool,uint32,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\"},\"return\":\"tokenId\"},\"safeMintWithTokenURI(string,string,uint48,uint48,uint48,uint16,bool,uint32,string)\":{\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations.\"},\"tokenMinterPropertyNames(address,string)\":{\"details\":\"Look up all Property Names a Minter has created Time Slots for      with a particular Content ID\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"uint256 ID of the token to query\"},\"return\":\"URI for a given token ID.\"},\"tokensMintedBy(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\"},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership1(address)\":{\"details\":\"Transfer owner (admin) functions to another address\",\"params\":{\"newOwner\":\"Address of new owner/ admin of contract\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause minting and transfers.\"},\"updateMintFee(uint256)\":{\"details\":\"Update the fee (in wei) charged for minting a single token\"},\"updateRegistryAddress(address)\":{\"details\":\"Update contract address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}},\"withdrawBalance()\":{\"details\":\"Admin withdraws entire balance from contract.\"}}},\"userdoc\":{\"methods\":{\"tokenURI(uint256)\":{\"notice\":\"Throws if the token ID does not exist. May return an empty string.\"},\"tokensMintedBy(address)\":{\"notice\":\"Return all the Token IDs minted by a given account.\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0xbe8b781911d2085383a7b93eb573072cf8e036d5f72a3b4f7cf1b9f142b300ac\",\"urls\":[\"bzz-raw://71ea3750013bc7f41fc0a701f2a86ec72c84225e8400b4b0be25488e1939a1ed\",\"dweb:/ipfs/QmebLEhGutdnjsk4yKHrkXNjqyp3MWLuvsecgLuHbiHa2V\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0x45fb6eddb422590ad9eec286d07eae2bd45db219aa127066eb23c7e3da4d0029\",\"urls\":[\"bzz-raw://840173239762fa8808437c611cdb3858b2d115a1a97153d330f6ed5ab4ff6412\",\"dweb:/ipfs/QmZ53b1m2kAA6PKotGU4htzNVFzRKe6MyWVfpKBpaYPMij\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "0x60806040526002805460ff60a01b19169055655af3107a40006003553480156200002857600080fd5b506040516200474d3803806200474d8339810160408190526200004b91620003ff565b6200007f7f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b036200018f16565b620000b37f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b036200018f16565b620000c66001600160e01b036200023416565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000f062000234565b600280546001600160a01b0319166001600160a01b0392909216919091179055825162000125906010906020860190620002ee565b5081516200013b906011906020850190620002ee565b50620001707f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b036200018f16565b62000186816200023960201b62001b5a1760201c565b505050620005d3565b7fffffffff000000000000000000000000000000000000000000000000000000008082161415620001f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ee90620004f8565b60405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b335b90565b6001546001600160a01b0316620002586001600160e01b036200023416565b6001600160a01b031614806200029357506002546001600160a01b0316620002886001600160e01b036200023416565b6001600160a01b0316145b620002cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ee906200050a565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033157805160ff191683800117855562000361565b8280016001018555821562000361579182015b828111156200036157825182559160200191906001019062000344565b506200036f92915062000373565b5090565b6200023691905b808211156200036f57600081556001016200037a565b80516200039d81620005b9565b92915050565b600082601f830112620003b557600080fd5b8151620003cc620003c68262000543565b6200051c565b91508082526020830160208301858383011115620003e957600080fd5b620003f683828462000586565b50505092915050565b6000806000606084860312156200041557600080fd5b83516001600160401b038111156200042c57600080fd5b6200043a86828701620003a3565b93505060208401516001600160401b038111156200045757600080fd5b6200046586828701620003a3565b9250506040620004788682870162000390565b9150509250925092565b600062000491601c836200056b565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000815260200192915050565b6000620004cc6013836200056b565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b602080825281016200039d8162000482565b602080825281016200039d81620004bd565b6040518181016001600160401b03811182821017156200053b57600080fd5b604052919050565b60006001600160401b038211156200055a57600080fd5b506020601f91909101601f19160190565b90815260200190565b60006001600160a01b0382166200039d565b60005b83811015620005a357818101518382015260200162000589565b83811115620005b3576000848401525b50505050565b620005c48162000574565b8114620005d057600080fd5b50565b61416a80620005e36000396000f3fe6080604052600436106102255760003560e01c80637368891411610123578063b88d4fde116100ab578063e5c249241161006f578063e5c249241461061d578063e982d5a914610653578063e985e9c514610673578063f33efd1e14610693578063fb796bb7146106a657610225565b8063b88d4fde1461058a578063c51e713c146105aa578063c57a8825146105bd578063c87b56dd146105dd578063e2b375a9146105fd57610225565b80638456cb59116100f25780638456cb59146105005780638462151c1461051557806395d89b4114610535578063a22cb4651461054a578063a4ede1281461056a57610225565b8063736889141461047c5780637affcb9a146104915780637b103999146104be57806384017e52146104e057610225565b80632a0c7799116101b1578063527097251161017557806352709725146103fd5780635c975abb146104125780635fd8c710146104275780636352211e1461043c57806370a082311461045c57610225565b80632a0c7799146103685780632e0dccbb146103955780633f4ba83a146103a857806342842e0e146103bd57806342966c68146103dd57610225565b806313966db5116101f857806313966db5146102d1578063180b9e3f146102f357806318160ddd1461032057806323b872dd146103355780632441c7091461035557610225565b806301ffc9a71461022a57806306fdde0314610260578063081812fc14610282578063095ea7b3146102af575b600080fd5b34801561023657600080fd5b5061024a610245366004613428565b6106b9565b6040516102579190613e61565b60405180910390f35b34801561026c57600080fd5b506102756106dc565b6040516102579190613e7d565b34801561028e57600080fd5b506102a261029d36600461364e565b610773565b6040516102579190613d08565b3480156102bb57600080fd5b506102cf6102ca3660046133da565b6107bf565b005b3480156102dd57600080fd5b506102e661095c565b6040516102579190613fce565b3480156102ff57600080fd5b5061031361030e36600461364e565b610962565b6040516102579190613fdc565b34801561032c57600080fd5b506102e661097a565b34801561034157600080fd5b506102cf61035036600461328e565b61098b565b6102e6610363366004613543565b610af1565b34801561037457600080fd5b50610388610383366004613236565b610c69565b6040516102579190613e50565b6102e66103a3366004613464565b610d71565b3480156103b457600080fd5b506102cf610ed9565b3480156103c957600080fd5b506102cf6103d836600461328e565b610f5d565b3480156103e957600080fd5b506102cf6103f836600461364e565b610f7d565b34801561040957600080fd5b506102a261109d565b34801561041e57600080fd5b5061024a6110ac565b34801561043357600080fd5b506102cf6110bc565b34801561044857600080fd5b506102a261045736600461364e565b611198565b34801561046857600080fd5b506102e6610477366004613236565b6111b3565b34801561048857600080fd5b506102a2611202565b34801561049d57600080fd5b506104b16104ac366004613384565b611211565b6040516102579190613e3f565b3480156104ca57600080fd5b506104d36113b3565b6040516102579190613e6f565b3480156104ec57600080fd5b506102cf6104fb36600461364e565b6113c2565b34801561050c57600080fd5b506102cf611426565b34801561052157600080fd5b50610388610530366004613236565b6114b1565b34801561054157600080fd5b5061027561156b565b34801561055657600080fd5b506102cf610565366004613354565b6115cc565b34801561057657600080fd5b506104b1610585366004613236565b611752565b34801561059657600080fd5b506102cf6105a53660046132db565b6118c8565b6102e66105b8366004613543565b611a30565b3480156105c957600080fd5b506102cf6105d8366004613236565b611b5a565b3480156105e957600080fd5b506102756105f836600461364e565b611bdb565b34801561060957600080fd5b506102cf610618366004613236565b611ca1565b34801561062957600080fd5b5061063d61063836600461364e565b611d2e565b6040516102579a99989796959493929190613d16565b34801561065f57600080fd5b506102cf61066e366004613236565b611f8a565b34801561067f57600080fd5b5061024a61068e366004613254565b612018565b6102e66106a1366004613464565b612046565b6102e66106b4366004613543565b61216b565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107685780601f1061073d57610100808354040283529160200191610768565b820191906000526020600020905b81548152906001019060200180831161074b57829003601f168201915b505050505090505b90565b600061077e826122a8565b6107a35760405162461bcd60e51b815260040161079a90613f7e565b60405180910390fd5b506000908152600e60205260409020546001600160a01b031690565b6004546001600160a01b0316634039ad0d6107d86122c5565b6040518263ffffffff1660e01b81526004016107f49190613d08565b60206040518083038186803b15801561080c57600080fd5b505afa158015610820573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610844919081019061340a565b6108605760405162461bcd60e51b815260040161079a90613f8e565b600254600160a01b900460ff161561087757600080fd5b600061088282611198565b9050806001600160a01b0316836001600160a01b031614156108b65760405162461bcd60e51b815260040161079a90613eee565b806001600160a01b03166108c86122c5565b6001600160a01b031614806108e457506108e48161068e6122c5565b6109005760405162461bcd60e51b815260040161079a90613fbe565b6000828152600e602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b600061098660056122c9565b905090565b600254600160a01b900460ff16156109a257600080fd5b6109b36109ad6122c5565b826122cd565b6109cf5760405162461bcd60e51b815260040161079a90613fae565b6000818152600a60205260408120546001600160a01b0316906109f183611198565b6000848152600a6020526040902060030154909150600160a01b900460ff16610a3c57610a1f858585612352565b15610a3c5760405162461bcd60e51b815260040161079a90613e9e565b600480546040516354a58b9b60e11b81526001600160a01b039091169163a94b173691610a73918991899189918991899101613db9565b60206040518083038186803b158015610a8b57600080fd5b505afa158015610a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ac3919081019061340a565b610adf5760405162461bcd60e51b815260040161079a90613fae565b610aea8585856123a6565b5050505050565b6004546000906001600160a01b031663aa271e1a610b0d6122c5565b6040518263ffffffff1660e01b8152600401610b299190613d08565b60206040518083038186803b158015610b4157600080fd5b505afa158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b79919081019061340a565b610b955760405162461bcd60e51b815260040161079a90613f9e565b600254600160a01b900460ff1615610bac57600080fd5b600354341015610bbb57600080fd5b60008363ffffffff1611610be15760405162461bcd60e51b815260040161079a90613f2e565b610bed8a8989896124ac565b610c095760405162461bcd60e51b815260040161079a90613f6e565b6000610c1b610c166122c5565b6125b3565b9050610c2d818c8c8c8c8c8c8c6125cf565b610c378184612891565b6000818152600960205260409020805463ffffffff861663ffffffff1990911617905590509998505050505050505050565b60606001600160a01b038216610c915760405162461bcd60e51b815260040161079a90613ece565b6001600160a01b0382166000908152600860205260408120610cb2906122c9565b905080610cd45760408051600080825260208201909252905b509150506106d7565b606081604051908082528060200260200182016040528015610d00578160200160208202803883390190505b5090506000610d0d61097a565b9050600060015b828111610d64576000818152600a60205260409020546001600160a01b0388811691161415610d5c5780848381518110610d4a57fe5b60209081029190910101526001909101905b600101610d14565b83955050505050506106d7565b6004546000906001600160a01b031663aa271e1a610d8d6122c5565b6040518263ffffffff1660e01b8152600401610da99190613d08565b60206040518083038186803b158015610dc157600080fd5b505afa158015610dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610df9919081019061340a565b610e155760405162461bcd60e51b815260040161079a90613f9e565b600254600160a01b900460ff1615610e2c57600080fd5b600354341015610e3b57600080fd5b60008263ffffffff1611610e615760405162461bcd60e51b815260040161079a90613f2e565b610e6d898888886124ac565b610e895760405162461bcd60e51b815260040161079a90613f6e565b6000610e96610c166122c5565b9050610ea8818b8b8b8b8b8b8b6125cf565b6000818152600960205260409020805463ffffffff851663ffffffff19909116179055905098975050505050505050565b6001546001600160a01b0316610eed6122c5565b6001600160a01b03161480610f1c57506002546001600160a01b0316610f116122c5565b6001600160a01b0316145b610f385760405162461bcd60e51b815260040161079a90613f3e565b600254600160a01b900460ff16610f4e57600080fd5b6002805460ff60a01b19169055565b610f78838383604051806020016040528060008152506118c8565b505050565b600254600160a01b900460ff1615610f9457600080fd5b6000610f9f82611198565b6000838152600a60205260409020549091506001600160a01b03908116908216811415611067576004546001600160a01b031663aa271e1a610fdf6122c5565b6040518263ffffffff1660e01b8152600401610ffb9190613d08565b60206040518083038186803b15801561101357600080fd5b505afa158015611027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061104b919081019061340a565b6110675760405162461bcd60e51b815260040161079a90613ede565b6110786110726122c5565b846122cd565b6110945760405162461bcd60e51b815260040161079a90613ede565b610f78836128d5565b6002546001600160a01b031681565b600254600160a01b900460ff1681565b6001546001600160a01b03166110d06122c5565b6001600160a01b031614806110ff57506002546001600160a01b03166110f46122c5565b6001600160a01b0316145b61111b5760405162461bcd60e51b815260040161079a90613f3e565b6040513031906000903390839061113190613cfd565b60006040518083038185875af1925050503d806000811461116e576040519150601f19603f3d011682016040523d82523d6000602084013e611173565b606091505b50509050806111945760405162461bcd60e51b815260040161079a90613efe565b5050565b6000908152600660205260409020546001600160a01b031690565b60006001600160a01b0382166111db5760405162461bcd60e51b815260040161079a90613ece565b6001600160a01b03821660009081526007602052604090206111fc906122c9565b92915050565b6001546001600160a01b031681565b6001600160a01b0383166000908152600b6020526040908190209051606091829161123f9086908690613ce4565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561132457600084815260209081902060408051918501805460026001821615610100026000190190911604601f810185900485028401830183529383018481529293909284929091849184018282801561130c5780601f106112e15761010080835404028352916020019161130c565b820191906000526020600020905b8154815290600101906020018083116112ef57829003601f168201915b5050505050815250508152602001906001019061126d565b5050505090506060815160405190808252806020026020018201604052801561136157816020015b606081526020019060019003908161134c5790505b50905060005b82518110156113a75782818151811061137c57fe5b60200260200101516000015182828151811061139457fe5b6020908102919091010152600101611367565b509150505b9392505050565b6004546001600160a01b031681565b6001546001600160a01b03166113d66122c5565b6001600160a01b0316148061140557506002546001600160a01b03166113fa6122c5565b6001600160a01b0316145b6114215760405162461bcd60e51b815260040161079a90613f3e565b600355565b6001546001600160a01b031661143a6122c5565b6001600160a01b0316148061146957506002546001600160a01b031661145e6122c5565b6001600160a01b0316145b6114855760405162461bcd60e51b815260040161079a90613f3e565b600254600160a01b900460ff161561149c57600080fd5b6002805460ff60a01b1916600160a01b179055565b606060006114be836111b3565b9050806114db576040805160008082526020820190925290610ccb565b606081604051908082528060200260200182016040528015611507578160200160208202803883390190505b509050600061151461097a565b9050600060015b828111610d64576000818152600660205260409020546001600160a01b0388811691161415611563578084838151811061155157fe5b60209081029190910101526001909101905b60010161151b565b60118054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107685780601f1061073d57610100808354040283529160200191610768565b6004546001600160a01b0316634039ad0d6115e56122c5565b6040518263ffffffff1660e01b81526004016116019190613d08565b60206040518083038186803b15801561161957600080fd5b505afa15801561162d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611651919081019061340a565b61166d5760405162461bcd60e51b815260040161079a90613f8e565b600254600160a01b900460ff161561168457600080fd5b61168c6122c5565b6001600160a01b0316826001600160a01b031614156116bd5760405162461bcd60e51b815260040161079a90613f1e565b80600f60006116ca6122c5565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561170e6122c5565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516117469190613e61565b60405180910390a35050565b6001600160a01b0381166000908152600c602090815260408083208054825181850281018501909352808352606094859484015b8282101561183d57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156118255780601f106117fa57610100808354040283529160200191611825565b820191906000526020600020905b81548152906001019060200180831161180857829003601f168201915b50505050508152505081526020019060010190611786565b5050505090506060815160405190808252806020026020018201604052801561187a57816020015b60608152602001906001900390816118655790505b50905060005b82518110156118c05782818151811061189557fe5b6020026020010151600001518282815181106118ad57fe5b6020908102919091010152600101611880565b509392505050565b600254600160a01b900460ff16156118df57600080fd5b6118f06118ea6122c5565b836122cd565b61190c5760405162461bcd60e51b815260040161079a90613fae565b6000828152600a60205260408120546001600160a01b03169061192e84611198565b6000858152600a6020526040902060030154909150600160a01b900460ff166119795761195c868686612352565b156119795760405162461bcd60e51b815260040161079a90613e9e565b600480546040516354a58b9b60e11b81526001600160a01b039091169163a94b1736916119b0918a918a918a918991899101613db9565b60206040518083038186803b1580156119c857600080fd5b505afa1580156119dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a00919081019061340a565b611a1c5760405162461bcd60e51b815260040161079a90613fae565b611a28868686866128e7565b505050505050565b6004546000906001600160a01b031663aa271e1a611a4c6122c5565b6040518263ffffffff1660e01b8152600401611a689190613d08565b60206040518083038186803b158015611a8057600080fd5b505afa158015611a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ab8919081019061340a565b611ad45760405162461bcd60e51b815260040161079a90613f9e565b600254600160a01b900460ff1615611aeb57600080fd5b600354341015611afa57600080fd5b60008363ffffffff1611611b205760405162461bcd60e51b815260040161079a90613f2e565b611b2c8a8989896124ac565b611b485760405162461bcd60e51b815260040161079a90613f6e565b6000610c1b611b556122c5565b612920565b6001546001600160a01b0316611b6e6122c5565b6001600160a01b03161480611b9d57506002546001600160a01b0316611b926122c5565b6001600160a01b0316145b611bb95760405162461bcd60e51b815260040161079a90613f3e565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6060611be6826122a8565b611c025760405162461bcd60e51b815260040161079a90613f7e565b6000828152600d602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015611c955780601f10611c6a57610100808354040283529160200191611c95565b820191906000526020600020905b815481529060010190602001808311611c7857829003601f168201915b50505050509050919050565b6001546001600160a01b0316611cb56122c5565b6001600160a01b03161480611ce457506002546001600160a01b0316611cd96122c5565b6001600160a01b0316145b611d005760405162461bcd60e51b815260040161079a90613f3e565b6001600160a01b03811615611d2b57600280546001600160a01b0319166001600160a01b0383161790555b50565b600080606080600080600080600080611d468b6122a8565b611d625760405162461bcd60e51b815260040161079a90613f7e565b611d6a613019565b60008c8152600a60209081526040918290208251610100808201855282546001600160a01b03168252600180840180548751600293821615909402600019011691909104601f8101869004860283018601909652858252919492938581019391929190830182828015611e1e5780601f10611df357610100808354040283529160200191611e1e565b820191906000526020600020905b815481529060010190602001808311611e0157829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015611eb05780601f10611e8557610100808354040283529160200191611eb0565b820191906000526020600020905b815481529060010190602001808311611e9357829003601f168201915b50505091835250506003919091015465ffffffffffff808216602080850191909152660100000000000083048216604080860191909152600160601b84049092166060850152600160901b830461ffff166080850152600160a01b90920460ff16151560a09093019290925260008f815260099091522054815191925063ffffffff1690611f3d8e611198565b83602001518460400151856060015186608001518760a001518860c001518960e00151898797508696509b509b509b509b509b509b509b509b509b509b5050509193959799509193959799565b6001546001600160a01b0316611f9e6122c5565b6001600160a01b03161480611fcd57506002546001600160a01b0316611fc26122c5565b6001600160a01b0316145b611fe95760405162461bcd60e51b815260040161079a90613f3e565b6001600160a01b03811615611d2b57600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600f6020908152604080832093909416825291909152205460ff1690565b6004546000906001600160a01b031663aa271e1a6120626122c5565b6040518263ffffffff1660e01b815260040161207e9190613d08565b60206040518083038186803b15801561209657600080fd5b505afa1580156120aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120ce919081019061340a565b6120ea5760405162461bcd60e51b815260040161079a90613f9e565b600254600160a01b900460ff161561210157600080fd5b60035434101561211057600080fd5b60008263ffffffff16116121365760405162461bcd60e51b815260040161079a90613f2e565b612142898888886124ac565b61215e5760405162461bcd60e51b815260040161079a90613f6e565b6000610e96611b556122c5565b6004546000906001600160a01b031663aa271e1a6121876122c5565b6040518263ffffffff1660e01b81526004016121a39190613d08565b60206040518083038186803b1580156121bb57600080fd5b505afa1580156121cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121f3919081019061340a565b61220f5760405162461bcd60e51b815260040161079a90613f9e565b600254600160a01b900460ff161561222657600080fd5b60035434101561223557600080fd5b60008363ffffffff161161225b5760405162461bcd60e51b815260040161079a90613f2e565b6122678a8989896124ac565b6122835760405162461bcd60e51b815260040161079a90613f6e565b60006122966122906122c5565b846129ff565b9050610c37818c8c8c8c8c8c8c6125cf565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b60006122d8826122a8565b6122f45760405162461bcd60e51b815260040161079a90613f7e565b60006122ff83611198565b9050806001600160a01b0316846001600160a01b0316148061233a5750836001600160a01b031661232f84610773565b6001600160a01b0316145b8061234a575061234a8185612018565b949350505050565b6000818152600a60205260408120546001600160a01b0390811690851681148061238d5750806001600160a01b0316846001600160a01b0316145b1561239c5760009150506113ac565b60019150506113ac565b826001600160a01b03166123b982611198565b6001600160a01b0316146123df5760405162461bcd60e51b815260040161079a90613fae565b6001600160a01b0382166124055760405162461bcd60e51b815260040161079a90613ebe565b61240e81612a36565b6001600160a01b038316600090815260076020526040902061242f90612a71565b6001600160a01b038216600090815260076020526040902061245090612a88565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600480546040516323dd3a3d60e11b81526000926001600160a01b03909216916347ba747a916124de91899101613e7d565b60206040518083038186803b1580156124f657600080fd5b505afa15801561250a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061252e919081019061340a565b61254a5760405162461bcd60e51b815260040161079a90613f0e565b8165ffffffffffff168465ffffffffffff16116125795760405162461bcd60e51b815260040161079a90613f4e565b8365ffffffffffff168365ffffffffffff16116125a85760405162461bcd60e51b815260040161079a90613f5e565b506001949350505050565b6000806113ac83604051806020016040528060008152506129ff565b6125d8886122a8565b6125f45760405162461bcd60e51b815260040161079a90613f7e565b6125fc613019565b6040518061010001604052806126106122c5565b6001600160a01b03908116825260208083018c905260408084018c905265ffffffffffff8b811660608601528a81166080860152891660a085015261ffff881660c085015286151560e09094019390935260008d8152600a825292909220835181546001600160a01b0319169216919091178155828201518051939450849391926126a39260018501929091019061305e565b50604082015180516126bf91600284019160209091019061305e565b5060608201516003919091018054608084015160a085015160c086015160e09096015165ffffffffffff1990931665ffffffffffff958616176bffffffffffff00000000000019166601000000000000928616929092029190911771ffffffffffff0000000000000000000000001916600160601b94909116939093029290921773ffff0000000000000000000000000000000000001916600160901b61ffff909416939093029290921760ff60a01b1916600160a01b9115159190910217905561278988612a91565b6127f257600c60006127996122c5565b6001600160a01b031681526020808201929092526040908101600090812082518085019093528b83528054600181018083559183529184902083518051929591909301926127ed928492919091019061305e565b505050505b6127fc8888612bbc565b61288657600b600061280c6122c5565b6001600160a01b03166001600160a01b031681526020019081526020016000208860405161283a9190613cf1565b90815260408051918290036020908101832083820190925289835281546001810180845560009384529282902084518051949594919092019261288192849291019061305e565b505050505b505050505050505050565b61289a826122a8565b6128b65760405162461bcd60e51b815260040161079a90613f7e565b6000828152600d602090815260409091208251610f789284019061305e565b611d2b6128e182611198565b82612d03565b6128f28484846123a6565b6128fe84848484612e50565b61291a5760405162461bcd60e51b815260040161079a90613eae565b50505050565b60006001600160a01b0382166129485760405162461bcd60e51b815260040161079a90613e8e565b6129526005612a88565b600061295e60056122c9565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b0389169081179091558352600790915290209091506129a090612a88565b6001600160a01b03831660009081526008602052604090206129c190612a88565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b600080612a0b84612920565b9050612a1a6000858386612e50565b6113ac5760405162461bcd60e51b815260040161079a90613eae565b6000818152600e60205260409020546001600160a01b031615611d2b576000908152600e6020526040902080546001600160a01b0319169055565b8054612a8490600163ffffffff612f1b16565b9055565b80546001019055565b336000908152600c602090815260408083208054825181850281018501909352808352606093859084015b82821015612b7357600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612b5b5780601f10612b3057610100808354040283529160200191612b5b565b820191906000526020600020905b815481529060010190602001808311612b3e57829003601f168201915b50505050508152505081526020019060010190612abc565b5092935060009250829150505b82518110156118c057612baa85848381518110612b9957fe5b602002602001015160000151612f5d565b15612bb457600191505b600101612b80565b336000908152600b6020526040808220905160609190612bdd908690613cf1565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015612cc257600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612caa5780601f10612c7f57610100808354040283529160200191612caa565b820191906000526020600020905b815481529060010190602001808311612c8d57829003601f168201915b50505050508152505081526020019060010190612c0b565b5092935060009250829150505b8251811015612cfa57612ce885848381518110612b9957fe5b15612cf257600191505b600101612ccf565b50949350505050565b816001600160a01b0316612d1682611198565b6001600160a01b031614612d3c5760405162461bcd60e51b815260040161079a90613ede565b612d4581612a36565b6001600160a01b0382166000908152600760205260409020612d6690612a71565b600081815260066020908152604080832080546001600160a01b0319169055600d9091529020546002600019600183161561010002019091160415612dbc576000818152600d60205260408120612dbc916130dc565b6000818152600a6020526040812080546001600160a01b031916815590612de660018301826130dc565b612df46002830160006130dc565b50600301805474ffffffffffffffffffffffffffffffffffffffffff1916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000612e64846001600160a01b0316612fb6565b612e705750600161234a565b6000846001600160a01b031663150b7a02612e896122c5565b8887876040518563ffffffff1660e01b8152600401612eab9493929190613e05565b602060405180830381600087803b158015612ec557600080fd5b505af1158015612ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612efd9190810190613446565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b60006113ac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612fed565b600081604051602001612f709190613cf1565b6040516020818303038152906040528051906020012083604051602001612f979190613cf1565b6040516020818303038152906040528051906020012014905092915050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470811580159061234a5750141592915050565b600081848411156130115760405162461bcd60e51b815260040161079a9190613e7d565b505050900390565b604080516101008101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061309f57805160ff19168380011785556130cc565b828001600101855582156130cc579182015b828111156130cc5782518255916020019190600101906130b1565b506130d892915061311c565b5090565b50805460018160011615610100020316600290046000825580601f106131025750611d2b565b601f016020900490600052602060002090810190611d2b91905b61077091905b808211156130d85760008155600101613122565b80356111fc816140dd565b80356111fc816140f1565b80516111fc816140f1565b80356111fc816140fa565b80516111fc816140fa565b600082601f83011261317e57600080fd5b813561319161318c82614011565b613fea565b915080825260208301602083018583830111156131ad57600080fd5b6131b883828461409b565b50505092915050565b60008083601f8401126131d357600080fd5b50813567ffffffffffffffff8111156131eb57600080fd5b60208301915083600182028301111561320357600080fd5b9250929050565b80356111fc81614103565b80356111fc8161410c565b80356111fc81614115565b80356111fc8161411e565b60006020828403121561324857600080fd5b600061234a8484613136565b6000806040838503121561326757600080fd5b60006132738585613136565b925050602061328485828601613136565b9150509250929050565b6000806000606084860312156132a357600080fd5b60006132af8686613136565b93505060206132c086828701613136565b92505060406132d186828701613215565b9150509250925092565b600080600080608085870312156132f157600080fd5b60006132fd8787613136565b945050602061330e87828801613136565b935050604061331f87828801613215565b925050606085013567ffffffffffffffff81111561333c57600080fd5b6133488782880161316d565b91505092959194509250565b6000806040838503121561336757600080fd5b60006133738585613136565b925050602061328485828601613141565b60008060006040848603121561339957600080fd5b60006133a58686613136565b935050602084013567ffffffffffffffff8111156133c257600080fd5b6133ce868287016131c1565b92509250509250925092565b600080604083850312156133ed57600080fd5b60006133f98585613136565b925050602061328485828601613215565b60006020828403121561341c57600080fd5b600061234a848461314c565b60006020828403121561343a57600080fd5b600061234a8484613157565b60006020828403121561345857600080fd5b600061234a8484613162565b600080600080600080600080610100898b03121561348157600080fd5b883567ffffffffffffffff81111561349857600080fd5b6134a48b828c0161316d565b985050602089013567ffffffffffffffff8111156134c157600080fd5b6134cd8b828c0161316d565b97505060406134de8b828c0161322b565b96505060606134ef8b828c0161322b565b95505060806135008b828c0161322b565b94505060a06135118b828c0161320a565b93505060c06135228b828c01613141565b92505060e06135338b828c01613220565b9150509295985092959890939650565b60008060008060008060008060006101208a8c03121561356257600080fd5b893567ffffffffffffffff81111561357957600080fd5b6135858c828d0161316d565b99505060208a013567ffffffffffffffff8111156135a257600080fd5b6135ae8c828d0161316d565b98505060406135bf8c828d0161322b565b97505060606135d08c828d0161322b565b96505060806135e18c828d0161322b565b95505060a06135f28c828d0161320a565b94505060c06136038c828d01613141565b93505060e06136148c828d01613220565b9250506101008a013567ffffffffffffffff81111561363257600080fd5b61363e8c828d0161316d565b9150509295985092959850929598565b60006020828403121561366057600080fd5b600061234a8484613215565b60006113ac838361376b565b60006136848383613cc9565b505060200190565b6136958161404c565b82525050565b60006136a68261403f565b6136b08185614043565b9350836020820285016136c285614039565b8060005b858110156136fc57848403895281516136df858261366c565b94506136ea83614039565b60209a909a01999250506001016136c6565b5091979650505050505050565b60006137148261403f565b61371e8185614043565b935061372983614039565b8060005b838110156137575781516137418882613678565b975061374c83614039565b92505060010161372d565b509495945050505050565b61369581614057565b60006137768261403f565b6137808185614043565b93506137908185602086016140a7565b613799816140d3565b9093019392505050565b61369581614090565b60006137b883856106d7565b93506137c583858461409b565b50500190565b60006137d68261403f565b6137e081856106d7565b93506137f08185602086016140a7565b9290920192915050565b6000613807601483614043565b7f4d494e545f544f5f5a45524f5f41444452455353000000000000000000000000815260200192915050565b6000613840601a83614043565b7f5345434f4e444152595f54524144494e475f44495341424c4544000000000000815260200192915050565b6000613879602a83614043565b7f5452414e534645525f544f5f4e4f4e5f45524337323152454345495645525f4981526926a82622a6a2a72a22a960b11b602082015260400192915050565b60006138c5601883614043565b7f5452414e534645525f544f5f5a45524f5f414444524553530000000000000000815260200192915050565b60006138fe601983614043565b7f43414e4e4f545f51554552595f5a45524f5f4144445245535300000000000000815260200192915050565b6000613937601183614043565b7f554e415554484f52495a45445f4255524e000000000000000000000000000000815260200192915050565b6000613970601583614043565b7f415050524f56414c5f49535f524544554e44414e540000000000000000000000815260200192915050565b60006139a9600f83614043565b7f57495448445241575f4641494c45440000000000000000000000000000000000815260200192915050565b60006139e2602383614043565b7f434f4e54454e545f49445f4e4f545f524547495354455245445f544f5f43414c8152622622a960e91b602082015260400192915050565b6000613a27601a83614043565b7f43414c4c45525f43414e4e4f545f415050524f56455f53454c46000000000000815260200192915050565b6000613a60601583614043565b7f494e56414c49445f46454445524154494f4e5f49440000000000000000000000815260200192915050565b6000613a99601383614043565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b6000613ad2602183614043565b7f53544152545f54494d455f41465445525f41554354494f4e5f454e445f54494d8152604560f81b602082015260400192915050565b6000613b15601983614043565b7f53544152545f54494d455f41465445525f454e445f54494d4500000000000000815260200192915050565b60006111fc6000836106d7565b6000613b5b601183614043565b7f494e56414c49445f54494d455f534c4f54000000000000000000000000000000815260200192915050565b6000613b94601283614043565b7f4e4f4e5f4558495354454e545f544f4b454e0000000000000000000000000000815260200192915050565b6000613bcd602583614043565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f5452414445528152645f524f4c4560d81b602082015260400192915050565b6000613c14602583614043565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f4d494e5445528152645f524f4c4560d81b602082015260400192915050565b6000613c5b601583614043565b7f554e415554484f52495a45445f5452414e534645520000000000000000000000815260200192915050565b6000613c94601583614043565b7f43414c4c45525f4e4f545f415554484f52495a45440000000000000000000000815260200192915050565b61369581614069565b61369581610770565b6136958161407c565b61369581614085565b600061234a8284866137ac565b60006113ac82846137cb565b60006111fc82613b41565b602081016111fc828461368c565b6101408101613d25828d61368c565b613d32602083018c61368c565b8181036040830152613d44818b61376b565b90508181036060830152613d58818a61376b565b9050613d676080830189613cdb565b613d7460a0830188613cdb565b613d8160c0830187613cdb565b613d8e60e0830186613cc0565b613d9c610100830185613762565b613daa610120830184613cd2565b9b9a5050505050505050505050565b60a08101613dc7828861368c565b613dd4602083018761368c565b613de16040830186613cc9565b613dee606083018561368c565b613dfb608083018461368c565b9695505050505050565b60808101613e13828761368c565b613e20602083018661368c565b613e2d6040830185613cc9565b8181036060830152613dfb818461376b565b602080825281016113ac818461369b565b602080825281016113ac8184613709565b602081016111fc8284613762565b602081016111fc82846137a3565b602080825281016113ac818461376b565b602080825281016111fc816137fa565b602080825281016111fc81613833565b602080825281016111fc8161386c565b602080825281016111fc816138b8565b602080825281016111fc816138f1565b602080825281016111fc8161392a565b602080825281016111fc81613963565b602080825281016111fc8161399c565b602080825281016111fc816139d5565b602080825281016111fc81613a1a565b602080825281016111fc81613a53565b602080825281016111fc81613a8c565b602080825281016111fc81613ac5565b602080825281016111fc81613b08565b602080825281016111fc81613b4e565b602080825281016111fc81613b87565b602080825281016111fc81613bc0565b602080825281016111fc81613c07565b602080825281016111fc81613c4e565b602080825281016111fc81613c87565b602081016111fc8284613cc9565b602081016111fc8284613cd2565b60405181810167ffffffffffffffff8111828210171561400957600080fd5b604052919050565b600067ffffffffffffffff82111561402857600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b60006111fc82614070565b151590565b6001600160e01b03191690565b61ffff1690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b60006111fc8261404c565b82818337506000910152565b60005b838110156140c25781810151838201526020016140aa565b8381111561291a5750506000910152565b601f01601f191690565b6140e68161404c565b8114611d2b57600080fd5b6140e681614057565b6140e68161405c565b6140e681614069565b6140e681610770565b6140e68161407c565b6140e68161408556fea365627a7a72315820c4737c9cdc2632e960e90c5db492494fc111cc4303660b18cd5d572b11278db86c6578706572696d656e74616cf564736f6c634300050b0040",
  "deployedBytecode": "0x6080604052600436106102255760003560e01c80637368891411610123578063b88d4fde116100ab578063e5c249241161006f578063e5c249241461061d578063e982d5a914610653578063e985e9c514610673578063f33efd1e14610693578063fb796bb7146106a657610225565b8063b88d4fde1461058a578063c51e713c146105aa578063c57a8825146105bd578063c87b56dd146105dd578063e2b375a9146105fd57610225565b80638456cb59116100f25780638456cb59146105005780638462151c1461051557806395d89b4114610535578063a22cb4651461054a578063a4ede1281461056a57610225565b8063736889141461047c5780637affcb9a146104915780637b103999146104be57806384017e52146104e057610225565b80632a0c7799116101b1578063527097251161017557806352709725146103fd5780635c975abb146104125780635fd8c710146104275780636352211e1461043c57806370a082311461045c57610225565b80632a0c7799146103685780632e0dccbb146103955780633f4ba83a146103a857806342842e0e146103bd57806342966c68146103dd57610225565b806313966db5116101f857806313966db5146102d1578063180b9e3f146102f357806318160ddd1461032057806323b872dd146103355780632441c7091461035557610225565b806301ffc9a71461022a57806306fdde0314610260578063081812fc14610282578063095ea7b3146102af575b600080fd5b34801561023657600080fd5b5061024a610245366004613428565b6106b9565b6040516102579190613e61565b60405180910390f35b34801561026c57600080fd5b506102756106dc565b6040516102579190613e7d565b34801561028e57600080fd5b506102a261029d36600461364e565b610773565b6040516102579190613d08565b3480156102bb57600080fd5b506102cf6102ca3660046133da565b6107bf565b005b3480156102dd57600080fd5b506102e661095c565b6040516102579190613fce565b3480156102ff57600080fd5b5061031361030e36600461364e565b610962565b6040516102579190613fdc565b34801561032c57600080fd5b506102e661097a565b34801561034157600080fd5b506102cf61035036600461328e565b61098b565b6102e6610363366004613543565b610af1565b34801561037457600080fd5b50610388610383366004613236565b610c69565b6040516102579190613e50565b6102e66103a3366004613464565b610d71565b3480156103b457600080fd5b506102cf610ed9565b3480156103c957600080fd5b506102cf6103d836600461328e565b610f5d565b3480156103e957600080fd5b506102cf6103f836600461364e565b610f7d565b34801561040957600080fd5b506102a261109d565b34801561041e57600080fd5b5061024a6110ac565b34801561043357600080fd5b506102cf6110bc565b34801561044857600080fd5b506102a261045736600461364e565b611198565b34801561046857600080fd5b506102e6610477366004613236565b6111b3565b34801561048857600080fd5b506102a2611202565b34801561049d57600080fd5b506104b16104ac366004613384565b611211565b6040516102579190613e3f565b3480156104ca57600080fd5b506104d36113b3565b6040516102579190613e6f565b3480156104ec57600080fd5b506102cf6104fb36600461364e565b6113c2565b34801561050c57600080fd5b506102cf611426565b34801561052157600080fd5b50610388610530366004613236565b6114b1565b34801561054157600080fd5b5061027561156b565b34801561055657600080fd5b506102cf610565366004613354565b6115cc565b34801561057657600080fd5b506104b1610585366004613236565b611752565b34801561059657600080fd5b506102cf6105a53660046132db565b6118c8565b6102e66105b8366004613543565b611a30565b3480156105c957600080fd5b506102cf6105d8366004613236565b611b5a565b3480156105e957600080fd5b506102756105f836600461364e565b611bdb565b34801561060957600080fd5b506102cf610618366004613236565b611ca1565b34801561062957600080fd5b5061063d61063836600461364e565b611d2e565b6040516102579a99989796959493929190613d16565b34801561065f57600080fd5b506102cf61066e366004613236565b611f8a565b34801561067f57600080fd5b5061024a61068e366004613254565b612018565b6102e66106a1366004613464565b612046565b6102e66106b4366004613543565b61216b565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107685780601f1061073d57610100808354040283529160200191610768565b820191906000526020600020905b81548152906001019060200180831161074b57829003601f168201915b505050505090505b90565b600061077e826122a8565b6107a35760405162461bcd60e51b815260040161079a90613f7e565b60405180910390fd5b506000908152600e60205260409020546001600160a01b031690565b6004546001600160a01b0316634039ad0d6107d86122c5565b6040518263ffffffff1660e01b81526004016107f49190613d08565b60206040518083038186803b15801561080c57600080fd5b505afa158015610820573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610844919081019061340a565b6108605760405162461bcd60e51b815260040161079a90613f8e565b600254600160a01b900460ff161561087757600080fd5b600061088282611198565b9050806001600160a01b0316836001600160a01b031614156108b65760405162461bcd60e51b815260040161079a90613eee565b806001600160a01b03166108c86122c5565b6001600160a01b031614806108e457506108e48161068e6122c5565b6109005760405162461bcd60e51b815260040161079a90613fbe565b6000828152600e602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b600061098660056122c9565b905090565b600254600160a01b900460ff16156109a257600080fd5b6109b36109ad6122c5565b826122cd565b6109cf5760405162461bcd60e51b815260040161079a90613fae565b6000818152600a60205260408120546001600160a01b0316906109f183611198565b6000848152600a6020526040902060030154909150600160a01b900460ff16610a3c57610a1f858585612352565b15610a3c5760405162461bcd60e51b815260040161079a90613e9e565b600480546040516354a58b9b60e11b81526001600160a01b039091169163a94b173691610a73918991899189918991899101613db9565b60206040518083038186803b158015610a8b57600080fd5b505afa158015610a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ac3919081019061340a565b610adf5760405162461bcd60e51b815260040161079a90613fae565b610aea8585856123a6565b5050505050565b6004546000906001600160a01b031663aa271e1a610b0d6122c5565b6040518263ffffffff1660e01b8152600401610b299190613d08565b60206040518083038186803b158015610b4157600080fd5b505afa158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b79919081019061340a565b610b955760405162461bcd60e51b815260040161079a90613f9e565b600254600160a01b900460ff1615610bac57600080fd5b600354341015610bbb57600080fd5b60008363ffffffff1611610be15760405162461bcd60e51b815260040161079a90613f2e565b610bed8a8989896124ac565b610c095760405162461bcd60e51b815260040161079a90613f6e565b6000610c1b610c166122c5565b6125b3565b9050610c2d818c8c8c8c8c8c8c6125cf565b610c378184612891565b6000818152600960205260409020805463ffffffff861663ffffffff1990911617905590509998505050505050505050565b60606001600160a01b038216610c915760405162461bcd60e51b815260040161079a90613ece565b6001600160a01b0382166000908152600860205260408120610cb2906122c9565b905080610cd45760408051600080825260208201909252905b509150506106d7565b606081604051908082528060200260200182016040528015610d00578160200160208202803883390190505b5090506000610d0d61097a565b9050600060015b828111610d64576000818152600a60205260409020546001600160a01b0388811691161415610d5c5780848381518110610d4a57fe5b60209081029190910101526001909101905b600101610d14565b83955050505050506106d7565b6004546000906001600160a01b031663aa271e1a610d8d6122c5565b6040518263ffffffff1660e01b8152600401610da99190613d08565b60206040518083038186803b158015610dc157600080fd5b505afa158015610dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610df9919081019061340a565b610e155760405162461bcd60e51b815260040161079a90613f9e565b600254600160a01b900460ff1615610e2c57600080fd5b600354341015610e3b57600080fd5b60008263ffffffff1611610e615760405162461bcd60e51b815260040161079a90613f2e565b610e6d898888886124ac565b610e895760405162461bcd60e51b815260040161079a90613f6e565b6000610e96610c166122c5565b9050610ea8818b8b8b8b8b8b8b6125cf565b6000818152600960205260409020805463ffffffff851663ffffffff19909116179055905098975050505050505050565b6001546001600160a01b0316610eed6122c5565b6001600160a01b03161480610f1c57506002546001600160a01b0316610f116122c5565b6001600160a01b0316145b610f385760405162461bcd60e51b815260040161079a90613f3e565b600254600160a01b900460ff16610f4e57600080fd5b6002805460ff60a01b19169055565b610f78838383604051806020016040528060008152506118c8565b505050565b600254600160a01b900460ff1615610f9457600080fd5b6000610f9f82611198565b6000838152600a60205260409020549091506001600160a01b03908116908216811415611067576004546001600160a01b031663aa271e1a610fdf6122c5565b6040518263ffffffff1660e01b8152600401610ffb9190613d08565b60206040518083038186803b15801561101357600080fd5b505afa158015611027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061104b919081019061340a565b6110675760405162461bcd60e51b815260040161079a90613ede565b6110786110726122c5565b846122cd565b6110945760405162461bcd60e51b815260040161079a90613ede565b610f78836128d5565b6002546001600160a01b031681565b600254600160a01b900460ff1681565b6001546001600160a01b03166110d06122c5565b6001600160a01b031614806110ff57506002546001600160a01b03166110f46122c5565b6001600160a01b0316145b61111b5760405162461bcd60e51b815260040161079a90613f3e565b6040513031906000903390839061113190613cfd565b60006040518083038185875af1925050503d806000811461116e576040519150601f19603f3d011682016040523d82523d6000602084013e611173565b606091505b50509050806111945760405162461bcd60e51b815260040161079a90613efe565b5050565b6000908152600660205260409020546001600160a01b031690565b60006001600160a01b0382166111db5760405162461bcd60e51b815260040161079a90613ece565b6001600160a01b03821660009081526007602052604090206111fc906122c9565b92915050565b6001546001600160a01b031681565b6001600160a01b0383166000908152600b6020526040908190209051606091829161123f9086908690613ce4565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561132457600084815260209081902060408051918501805460026001821615610100026000190190911604601f810185900485028401830183529383018481529293909284929091849184018282801561130c5780601f106112e15761010080835404028352916020019161130c565b820191906000526020600020905b8154815290600101906020018083116112ef57829003601f168201915b5050505050815250508152602001906001019061126d565b5050505090506060815160405190808252806020026020018201604052801561136157816020015b606081526020019060019003908161134c5790505b50905060005b82518110156113a75782818151811061137c57fe5b60200260200101516000015182828151811061139457fe5b6020908102919091010152600101611367565b509150505b9392505050565b6004546001600160a01b031681565b6001546001600160a01b03166113d66122c5565b6001600160a01b0316148061140557506002546001600160a01b03166113fa6122c5565b6001600160a01b0316145b6114215760405162461bcd60e51b815260040161079a90613f3e565b600355565b6001546001600160a01b031661143a6122c5565b6001600160a01b0316148061146957506002546001600160a01b031661145e6122c5565b6001600160a01b0316145b6114855760405162461bcd60e51b815260040161079a90613f3e565b600254600160a01b900460ff161561149c57600080fd5b6002805460ff60a01b1916600160a01b179055565b606060006114be836111b3565b9050806114db576040805160008082526020820190925290610ccb565b606081604051908082528060200260200182016040528015611507578160200160208202803883390190505b509050600061151461097a565b9050600060015b828111610d64576000818152600660205260409020546001600160a01b0388811691161415611563578084838151811061155157fe5b60209081029190910101526001909101905b60010161151b565b60118054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107685780601f1061073d57610100808354040283529160200191610768565b6004546001600160a01b0316634039ad0d6115e56122c5565b6040518263ffffffff1660e01b81526004016116019190613d08565b60206040518083038186803b15801561161957600080fd5b505afa15801561162d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611651919081019061340a565b61166d5760405162461bcd60e51b815260040161079a90613f8e565b600254600160a01b900460ff161561168457600080fd5b61168c6122c5565b6001600160a01b0316826001600160a01b031614156116bd5760405162461bcd60e51b815260040161079a90613f1e565b80600f60006116ca6122c5565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561170e6122c5565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516117469190613e61565b60405180910390a35050565b6001600160a01b0381166000908152600c602090815260408083208054825181850281018501909352808352606094859484015b8282101561183d57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156118255780601f106117fa57610100808354040283529160200191611825565b820191906000526020600020905b81548152906001019060200180831161180857829003601f168201915b50505050508152505081526020019060010190611786565b5050505090506060815160405190808252806020026020018201604052801561187a57816020015b60608152602001906001900390816118655790505b50905060005b82518110156118c05782818151811061189557fe5b6020026020010151600001518282815181106118ad57fe5b6020908102919091010152600101611880565b509392505050565b600254600160a01b900460ff16156118df57600080fd5b6118f06118ea6122c5565b836122cd565b61190c5760405162461bcd60e51b815260040161079a90613fae565b6000828152600a60205260408120546001600160a01b03169061192e84611198565b6000858152600a6020526040902060030154909150600160a01b900460ff166119795761195c868686612352565b156119795760405162461bcd60e51b815260040161079a90613e9e565b600480546040516354a58b9b60e11b81526001600160a01b039091169163a94b1736916119b0918a918a918a918991899101613db9565b60206040518083038186803b1580156119c857600080fd5b505afa1580156119dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a00919081019061340a565b611a1c5760405162461bcd60e51b815260040161079a90613fae565b611a28868686866128e7565b505050505050565b6004546000906001600160a01b031663aa271e1a611a4c6122c5565b6040518263ffffffff1660e01b8152600401611a689190613d08565b60206040518083038186803b158015611a8057600080fd5b505afa158015611a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ab8919081019061340a565b611ad45760405162461bcd60e51b815260040161079a90613f9e565b600254600160a01b900460ff1615611aeb57600080fd5b600354341015611afa57600080fd5b60008363ffffffff1611611b205760405162461bcd60e51b815260040161079a90613f2e565b611b2c8a8989896124ac565b611b485760405162461bcd60e51b815260040161079a90613f6e565b6000610c1b611b556122c5565b612920565b6001546001600160a01b0316611b6e6122c5565b6001600160a01b03161480611b9d57506002546001600160a01b0316611b926122c5565b6001600160a01b0316145b611bb95760405162461bcd60e51b815260040161079a90613f3e565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6060611be6826122a8565b611c025760405162461bcd60e51b815260040161079a90613f7e565b6000828152600d602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015611c955780601f10611c6a57610100808354040283529160200191611c95565b820191906000526020600020905b815481529060010190602001808311611c7857829003601f168201915b50505050509050919050565b6001546001600160a01b0316611cb56122c5565b6001600160a01b03161480611ce457506002546001600160a01b0316611cd96122c5565b6001600160a01b0316145b611d005760405162461bcd60e51b815260040161079a90613f3e565b6001600160a01b03811615611d2b57600280546001600160a01b0319166001600160a01b0383161790555b50565b600080606080600080600080600080611d468b6122a8565b611d625760405162461bcd60e51b815260040161079a90613f7e565b611d6a613019565b60008c8152600a60209081526040918290208251610100808201855282546001600160a01b03168252600180840180548751600293821615909402600019011691909104601f8101869004860283018601909652858252919492938581019391929190830182828015611e1e5780601f10611df357610100808354040283529160200191611e1e565b820191906000526020600020905b815481529060010190602001808311611e0157829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015611eb05780601f10611e8557610100808354040283529160200191611eb0565b820191906000526020600020905b815481529060010190602001808311611e9357829003601f168201915b50505091835250506003919091015465ffffffffffff808216602080850191909152660100000000000083048216604080860191909152600160601b84049092166060850152600160901b830461ffff166080850152600160a01b90920460ff16151560a09093019290925260008f815260099091522054815191925063ffffffff1690611f3d8e611198565b83602001518460400151856060015186608001518760a001518860c001518960e00151898797508696509b509b509b509b509b509b509b509b509b509b5050509193959799509193959799565b6001546001600160a01b0316611f9e6122c5565b6001600160a01b03161480611fcd57506002546001600160a01b0316611fc26122c5565b6001600160a01b0316145b611fe95760405162461bcd60e51b815260040161079a90613f3e565b6001600160a01b03811615611d2b57600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600f6020908152604080832093909416825291909152205460ff1690565b6004546000906001600160a01b031663aa271e1a6120626122c5565b6040518263ffffffff1660e01b815260040161207e9190613d08565b60206040518083038186803b15801561209657600080fd5b505afa1580156120aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120ce919081019061340a565b6120ea5760405162461bcd60e51b815260040161079a90613f9e565b600254600160a01b900460ff161561210157600080fd5b60035434101561211057600080fd5b60008263ffffffff16116121365760405162461bcd60e51b815260040161079a90613f2e565b612142898888886124ac565b61215e5760405162461bcd60e51b815260040161079a90613f6e565b6000610e96611b556122c5565b6004546000906001600160a01b031663aa271e1a6121876122c5565b6040518263ffffffff1660e01b81526004016121a39190613d08565b60206040518083038186803b1580156121bb57600080fd5b505afa1580156121cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121f3919081019061340a565b61220f5760405162461bcd60e51b815260040161079a90613f9e565b600254600160a01b900460ff161561222657600080fd5b60035434101561223557600080fd5b60008363ffffffff161161225b5760405162461bcd60e51b815260040161079a90613f2e565b6122678a8989896124ac565b6122835760405162461bcd60e51b815260040161079a90613f6e565b60006122966122906122c5565b846129ff565b9050610c37818c8c8c8c8c8c8c6125cf565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b60006122d8826122a8565b6122f45760405162461bcd60e51b815260040161079a90613f7e565b60006122ff83611198565b9050806001600160a01b0316846001600160a01b0316148061233a5750836001600160a01b031661232f84610773565b6001600160a01b0316145b8061234a575061234a8185612018565b949350505050565b6000818152600a60205260408120546001600160a01b0390811690851681148061238d5750806001600160a01b0316846001600160a01b0316145b1561239c5760009150506113ac565b60019150506113ac565b826001600160a01b03166123b982611198565b6001600160a01b0316146123df5760405162461bcd60e51b815260040161079a90613fae565b6001600160a01b0382166124055760405162461bcd60e51b815260040161079a90613ebe565b61240e81612a36565b6001600160a01b038316600090815260076020526040902061242f90612a71565b6001600160a01b038216600090815260076020526040902061245090612a88565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600480546040516323dd3a3d60e11b81526000926001600160a01b03909216916347ba747a916124de91899101613e7d565b60206040518083038186803b1580156124f657600080fd5b505afa15801561250a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061252e919081019061340a565b61254a5760405162461bcd60e51b815260040161079a90613f0e565b8165ffffffffffff168465ffffffffffff16116125795760405162461bcd60e51b815260040161079a90613f4e565b8365ffffffffffff168365ffffffffffff16116125a85760405162461bcd60e51b815260040161079a90613f5e565b506001949350505050565b6000806113ac83604051806020016040528060008152506129ff565b6125d8886122a8565b6125f45760405162461bcd60e51b815260040161079a90613f7e565b6125fc613019565b6040518061010001604052806126106122c5565b6001600160a01b03908116825260208083018c905260408084018c905265ffffffffffff8b811660608601528a81166080860152891660a085015261ffff881660c085015286151560e09094019390935260008d8152600a825292909220835181546001600160a01b0319169216919091178155828201518051939450849391926126a39260018501929091019061305e565b50604082015180516126bf91600284019160209091019061305e565b5060608201516003919091018054608084015160a085015160c086015160e09096015165ffffffffffff1990931665ffffffffffff958616176bffffffffffff00000000000019166601000000000000928616929092029190911771ffffffffffff0000000000000000000000001916600160601b94909116939093029290921773ffff0000000000000000000000000000000000001916600160901b61ffff909416939093029290921760ff60a01b1916600160a01b9115159190910217905561278988612a91565b6127f257600c60006127996122c5565b6001600160a01b031681526020808201929092526040908101600090812082518085019093528b83528054600181018083559183529184902083518051929591909301926127ed928492919091019061305e565b505050505b6127fc8888612bbc565b61288657600b600061280c6122c5565b6001600160a01b03166001600160a01b031681526020019081526020016000208860405161283a9190613cf1565b90815260408051918290036020908101832083820190925289835281546001810180845560009384529282902084518051949594919092019261288192849291019061305e565b505050505b505050505050505050565b61289a826122a8565b6128b65760405162461bcd60e51b815260040161079a90613f7e565b6000828152600d602090815260409091208251610f789284019061305e565b611d2b6128e182611198565b82612d03565b6128f28484846123a6565b6128fe84848484612e50565b61291a5760405162461bcd60e51b815260040161079a90613eae565b50505050565b60006001600160a01b0382166129485760405162461bcd60e51b815260040161079a90613e8e565b6129526005612a88565b600061295e60056122c9565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b0389169081179091558352600790915290209091506129a090612a88565b6001600160a01b03831660009081526008602052604090206129c190612a88565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b600080612a0b84612920565b9050612a1a6000858386612e50565b6113ac5760405162461bcd60e51b815260040161079a90613eae565b6000818152600e60205260409020546001600160a01b031615611d2b576000908152600e6020526040902080546001600160a01b0319169055565b8054612a8490600163ffffffff612f1b16565b9055565b80546001019055565b336000908152600c602090815260408083208054825181850281018501909352808352606093859084015b82821015612b7357600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612b5b5780601f10612b3057610100808354040283529160200191612b5b565b820191906000526020600020905b815481529060010190602001808311612b3e57829003601f168201915b50505050508152505081526020019060010190612abc565b5092935060009250829150505b82518110156118c057612baa85848381518110612b9957fe5b602002602001015160000151612f5d565b15612bb457600191505b600101612b80565b336000908152600b6020526040808220905160609190612bdd908690613cf1565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015612cc257600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612caa5780601f10612c7f57610100808354040283529160200191612caa565b820191906000526020600020905b815481529060010190602001808311612c8d57829003601f168201915b50505050508152505081526020019060010190612c0b565b5092935060009250829150505b8251811015612cfa57612ce885848381518110612b9957fe5b15612cf257600191505b600101612ccf565b50949350505050565b816001600160a01b0316612d1682611198565b6001600160a01b031614612d3c5760405162461bcd60e51b815260040161079a90613ede565b612d4581612a36565b6001600160a01b0382166000908152600760205260409020612d6690612a71565b600081815260066020908152604080832080546001600160a01b0319169055600d9091529020546002600019600183161561010002019091160415612dbc576000818152600d60205260408120612dbc916130dc565b6000818152600a6020526040812080546001600160a01b031916815590612de660018301826130dc565b612df46002830160006130dc565b50600301805474ffffffffffffffffffffffffffffffffffffffffff1916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000612e64846001600160a01b0316612fb6565b612e705750600161234a565b6000846001600160a01b031663150b7a02612e896122c5565b8887876040518563ffffffff1660e01b8152600401612eab9493929190613e05565b602060405180830381600087803b158015612ec557600080fd5b505af1158015612ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612efd9190810190613446565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b60006113ac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612fed565b600081604051602001612f709190613cf1565b6040516020818303038152906040528051906020012083604051602001612f979190613cf1565b6040516020818303038152906040528051906020012014905092915050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470811580159061234a5750141592915050565b600081848411156130115760405162461bcd60e51b815260040161079a9190613e7d565b505050900390565b604080516101008101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061309f57805160ff19168380011785556130cc565b828001600101855582156130cc579182015b828111156130cc5782518255916020019190600101906130b1565b506130d892915061311c565b5090565b50805460018160011615610100020316600290046000825580601f106131025750611d2b565b601f016020900490600052602060002090810190611d2b91905b61077091905b808211156130d85760008155600101613122565b80356111fc816140dd565b80356111fc816140f1565b80516111fc816140f1565b80356111fc816140fa565b80516111fc816140fa565b600082601f83011261317e57600080fd5b813561319161318c82614011565b613fea565b915080825260208301602083018583830111156131ad57600080fd5b6131b883828461409b565b50505092915050565b60008083601f8401126131d357600080fd5b50813567ffffffffffffffff8111156131eb57600080fd5b60208301915083600182028301111561320357600080fd5b9250929050565b80356111fc81614103565b80356111fc8161410c565b80356111fc81614115565b80356111fc8161411e565b60006020828403121561324857600080fd5b600061234a8484613136565b6000806040838503121561326757600080fd5b60006132738585613136565b925050602061328485828601613136565b9150509250929050565b6000806000606084860312156132a357600080fd5b60006132af8686613136565b93505060206132c086828701613136565b92505060406132d186828701613215565b9150509250925092565b600080600080608085870312156132f157600080fd5b60006132fd8787613136565b945050602061330e87828801613136565b935050604061331f87828801613215565b925050606085013567ffffffffffffffff81111561333c57600080fd5b6133488782880161316d565b91505092959194509250565b6000806040838503121561336757600080fd5b60006133738585613136565b925050602061328485828601613141565b60008060006040848603121561339957600080fd5b60006133a58686613136565b935050602084013567ffffffffffffffff8111156133c257600080fd5b6133ce868287016131c1565b92509250509250925092565b600080604083850312156133ed57600080fd5b60006133f98585613136565b925050602061328485828601613215565b60006020828403121561341c57600080fd5b600061234a848461314c565b60006020828403121561343a57600080fd5b600061234a8484613157565b60006020828403121561345857600080fd5b600061234a8484613162565b600080600080600080600080610100898b03121561348157600080fd5b883567ffffffffffffffff81111561349857600080fd5b6134a48b828c0161316d565b985050602089013567ffffffffffffffff8111156134c157600080fd5b6134cd8b828c0161316d565b97505060406134de8b828c0161322b565b96505060606134ef8b828c0161322b565b95505060806135008b828c0161322b565b94505060a06135118b828c0161320a565b93505060c06135228b828c01613141565b92505060e06135338b828c01613220565b9150509295985092959890939650565b60008060008060008060008060006101208a8c03121561356257600080fd5b893567ffffffffffffffff81111561357957600080fd5b6135858c828d0161316d565b99505060208a013567ffffffffffffffff8111156135a257600080fd5b6135ae8c828d0161316d565b98505060406135bf8c828d0161322b565b97505060606135d08c828d0161322b565b96505060806135e18c828d0161322b565b95505060a06135f28c828d0161320a565b94505060c06136038c828d01613141565b93505060e06136148c828d01613220565b9250506101008a013567ffffffffffffffff81111561363257600080fd5b61363e8c828d0161316d565b9150509295985092959850929598565b60006020828403121561366057600080fd5b600061234a8484613215565b60006113ac838361376b565b60006136848383613cc9565b505060200190565b6136958161404c565b82525050565b60006136a68261403f565b6136b08185614043565b9350836020820285016136c285614039565b8060005b858110156136fc57848403895281516136df858261366c565b94506136ea83614039565b60209a909a01999250506001016136c6565b5091979650505050505050565b60006137148261403f565b61371e8185614043565b935061372983614039565b8060005b838110156137575781516137418882613678565b975061374c83614039565b92505060010161372d565b509495945050505050565b61369581614057565b60006137768261403f565b6137808185614043565b93506137908185602086016140a7565b613799816140d3565b9093019392505050565b61369581614090565b60006137b883856106d7565b93506137c583858461409b565b50500190565b60006137d68261403f565b6137e081856106d7565b93506137f08185602086016140a7565b9290920192915050565b6000613807601483614043565b7f4d494e545f544f5f5a45524f5f41444452455353000000000000000000000000815260200192915050565b6000613840601a83614043565b7f5345434f4e444152595f54524144494e475f44495341424c4544000000000000815260200192915050565b6000613879602a83614043565b7f5452414e534645525f544f5f4e4f4e5f45524337323152454345495645525f4981526926a82622a6a2a72a22a960b11b602082015260400192915050565b60006138c5601883614043565b7f5452414e534645525f544f5f5a45524f5f414444524553530000000000000000815260200192915050565b60006138fe601983614043565b7f43414e4e4f545f51554552595f5a45524f5f4144445245535300000000000000815260200192915050565b6000613937601183614043565b7f554e415554484f52495a45445f4255524e000000000000000000000000000000815260200192915050565b6000613970601583614043565b7f415050524f56414c5f49535f524544554e44414e540000000000000000000000815260200192915050565b60006139a9600f83614043565b7f57495448445241575f4641494c45440000000000000000000000000000000000815260200192915050565b60006139e2602383614043565b7f434f4e54454e545f49445f4e4f545f524547495354455245445f544f5f43414c8152622622a960e91b602082015260400192915050565b6000613a27601a83614043565b7f43414c4c45525f43414e4e4f545f415050524f56455f53454c46000000000000815260200192915050565b6000613a60601583614043565b7f494e56414c49445f46454445524154494f4e5f49440000000000000000000000815260200192915050565b6000613a99601383614043565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b6000613ad2602183614043565b7f53544152545f54494d455f41465445525f41554354494f4e5f454e445f54494d8152604560f81b602082015260400192915050565b6000613b15601983614043565b7f53544152545f54494d455f41465445525f454e445f54494d4500000000000000815260200192915050565b60006111fc6000836106d7565b6000613b5b601183614043565b7f494e56414c49445f54494d455f534c4f54000000000000000000000000000000815260200192915050565b6000613b94601283614043565b7f4e4f4e5f4558495354454e545f544f4b454e0000000000000000000000000000815260200192915050565b6000613bcd602583614043565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f5452414445528152645f524f4c4560d81b602082015260400192915050565b6000613c14602583614043565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f4d494e5445528152645f524f4c4560d81b602082015260400192915050565b6000613c5b601583614043565b7f554e415554484f52495a45445f5452414e534645520000000000000000000000815260200192915050565b6000613c94601583614043565b7f43414c4c45525f4e4f545f415554484f52495a45440000000000000000000000815260200192915050565b61369581614069565b61369581610770565b6136958161407c565b61369581614085565b600061234a8284866137ac565b60006113ac82846137cb565b60006111fc82613b41565b602081016111fc828461368c565b6101408101613d25828d61368c565b613d32602083018c61368c565b8181036040830152613d44818b61376b565b90508181036060830152613d58818a61376b565b9050613d676080830189613cdb565b613d7460a0830188613cdb565b613d8160c0830187613cdb565b613d8e60e0830186613cc0565b613d9c610100830185613762565b613daa610120830184613cd2565b9b9a5050505050505050505050565b60a08101613dc7828861368c565b613dd4602083018761368c565b613de16040830186613cc9565b613dee606083018561368c565b613dfb608083018461368c565b9695505050505050565b60808101613e13828761368c565b613e20602083018661368c565b613e2d6040830185613cc9565b8181036060830152613dfb818461376b565b602080825281016113ac818461369b565b602080825281016113ac8184613709565b602081016111fc8284613762565b602081016111fc82846137a3565b602080825281016113ac818461376b565b602080825281016111fc816137fa565b602080825281016111fc81613833565b602080825281016111fc8161386c565b602080825281016111fc816138b8565b602080825281016111fc816138f1565b602080825281016111fc8161392a565b602080825281016111fc81613963565b602080825281016111fc8161399c565b602080825281016111fc816139d5565b602080825281016111fc81613a1a565b602080825281016111fc81613a53565b602080825281016111fc81613a8c565b602080825281016111fc81613ac5565b602080825281016111fc81613b08565b602080825281016111fc81613b4e565b602080825281016111fc81613b87565b602080825281016111fc81613bc0565b602080825281016111fc81613c07565b602080825281016111fc81613c4e565b602080825281016111fc81613c87565b602081016111fc8284613cc9565b602081016111fc8284613cd2565b60405181810167ffffffffffffffff8111828210171561400957600080fd5b604052919050565b600067ffffffffffffffff82111561402857600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b60006111fc82614070565b151590565b6001600160e01b03191690565b61ffff1690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b60006111fc8261404c565b82818337506000910152565b60005b838110156140c25781810151838201526020016140aa565b8381111561291a5750506000910152565b601f01601f191690565b6140e68161404c565b8114611d2b57600080fd5b6140e681614057565b6140e68161405c565b6140e681614069565b6140e681610770565b6140e68161407c565b6140e68161408556fea365627a7a72315820c4737c9cdc2632e960e90c5db492494fc111cc4303660b18cd5d572b11278db86c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "850:1239:8:-;;;1440:26:3;;;-1:-1:-1;;;;1440:26:3;;;1579:15;1554:40;;1366:336:8;5:2:-1;;;;30:1;27;20:12;5:2;1366:336:8;;;;;;;;;;;;;;;;;;;;;720:40:2;739:20;-1:-1:-1;;;;;720:18:2;:40;:::i;:::-;6073::3;6092:20;-1:-1:-1;;;;;6073:18:3;:40;:::i;:::-;6193:12;-1:-1:-1;;;;;6193:10:3;:12;:::i;:::-;6184:6;:21;;-1:-1:-1;;;;;;6184:21:3;-1:-1:-1;;;;;6184:21:3;;;;;;;;;;6224:12;:10;:12::i;:::-;6215:6;:21;;-1:-1:-1;;;;;;6215:21:3;-1:-1:-1;;;;;6215:21:3;;;;;;;;;;1464:12:8;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1486:16:8;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1590:49:8;1609:29;-1:-1:-1;;;;;1590:18:8;:49;:::i;:::-;1650:44;1678:15;1650:27;;;;;:44;;:::i;:::-;1366:336;;;850:1239;;1444:190:2;1519:25;;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1587:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1587:40:2;1623:4;1587:40;;;1444:190::o;6710:90:3:-;6782:10;6710:90;;:::o;8036:144::-;7291:6;;-1:-1:-1;;;;;7291:6:3;7275:12;-1:-1:-1;;;;;7275:10:3;:12;:::i;:::-;-1:-1:-1;;;;;7275:22:3;;7274:52;;;-1:-1:-1;7319:6:3;;-1:-1:-1;;;;;7319:6:3;7303:12;-1:-1:-1;;;;;7303:10:3;:12;:::i;:::-;-1:-1:-1;;;;;7303:22:3;;7274:52;7253:118;;;;;;;;;;;;;;8134:8;:39;;-1:-1:-1;;;;;;8134:39:3;-1:-1:-1;;;;;8134:39:3;;;;;;;;;;8036:144::o;850:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:1239:8;;;-1:-1:-1;850:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;819:24;;-1:-1;;;;;852:30;;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;-1:-1;;;;;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1600:66;1580:87;;1695:2;1686:12;;1486:218;-1:-1;;1486:218;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1973:66;1953:87;;2068:2;2059:12;;1859:218;-1:-1;;1859:218;2085:407;2276:2;2290:47;;;2261:18;;2351:131;2261:18;2351:131;;2499:407;2690:2;2704:47;;;2675:18;;2765:131;2675:18;2765:131;;2913:256;2975:2;2969:9;3001:17;;;-1:-1;;;;;3061:34;;3097:22;;;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3149;3142:22;2953:216;;-1:-1;2953:216;3176:322;;-1:-1;;;;;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;-1:-1;3483:4;3419;3396:17;;;;-1:-1;;3392:33;3473:15;;3243:255;3506:163;3609:19;;;3658:4;3649:14;;3602:67;3677:91;;-1:-1;;;;;3837:54;;3739:24;3820:76;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4057:11;;;4051:18;4038:11;;;4031:39;4012:2;4005:10;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;;850:1239:8;;;;;;",
  "deployedSourceMap": "850:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;917:133:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1807:83:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1807:83:8;;;:::i;:::-;;;;;;;;28119:210:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28119:210:3;;;;;;;;:::i;:::-;;;;;;;;27338:496;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;27338:496:3;;;;;;;;:::i;:::-;;1554:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1554:40:3;;;:::i;:::-;;;;;;;;2432:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2432:54:3;;;;;;;;:::i;:::-;;;;;;;;24699:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24699:98:3;;;:::i;29888:755::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;29888:755:3;;;;;;;;:::i;14287:966::-;;;;;;;;;:::i;23592:973::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23592:973:3;;;;;;;;:::i;:::-;;;;;;;;12228:881;;;;;;;;;:::i;8970:78::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8970:78:3;;;:::i;31292:134::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;31292:134:3;;;;;;;;:::i;37569:476::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;37569:476:3;;;;;;;;:::i;1329:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1329:21:3;;;:::i;1440:26::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1440:26:3;;;:::i;9113:305::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9113:305:3;;;:::i;25466:152::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25466:152:3;;;;;;;;:::i;25006:241::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25006:241:3;;;;;;;;:::i;1302:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1302:21:3;;;:::i;22779:403::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22779:403:3;;;;;;;;:::i;:::-;;;;;;;;1772:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1772:32:3;;;:::i;:::-;;;;;;;;8273:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8273:105:3;;;;;;;;:::i;8814:78::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8814:78:3;;;:::i;26036:840::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;26036:840:3;;;;;;;;:::i;1999:87:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1999:87:8;;;:::i;28622:305:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28622:305:3;;;;;;;;:::i;22325:330::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22325:330:3;;;;;;;;:::i;32148:788::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;32148:788:3;;;;;;;;:::i;11181:958::-;;;;;;;;;:::i;8036:144::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8036:144:3;;;;;;;;:::i;17995:210::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;17995:210:3;;;;;;;;:::i;7714:169::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7714:169:3;;;;;;;;:::i;20953:952::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;20953:952:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7538:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7538:169:3;;;;;;;;:::i;29266:185::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;29266:185:3;;;;;;;;:::i;10168:873::-;;;;;;;;;:::i;13270:914::-;;;;;;;;;:::i;917:133:2:-;-1:-1:-1;;;;;;1010:33:2;;987:4;1010:33;;;;;;;;;;;;;917:133;;;;:::o;1807:83:8:-;1878:5;1871:12;;;;;;;;-1:-1:-1;;1871:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:13;;1871:12;;1878:5;;1871:12;;1878:5;1871:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:83;;:::o;28119:210:3:-;28178:7;28219:16;28227:7;28219;:16::i;:::-;28198:81;;;;-1:-1:-1;;;28198:81:3;;;;;;;;;;;;;;;;;-1:-1:-1;28297:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;28297:24:3;;28119:210::o;27338:496::-;9939:8;;-1:-1:-1;;;;;9939:8:3;:17;9957:12;:10;:12::i;:::-;9939:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9939:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9939:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9939:31:3;;;;;;;;;9918:115;;;;-1:-1:-1;;;9918:115:3;;;;;;;;;8572:6;;-1:-1:-1;;;8572:6:3;;;;8571:7;8563:16;;;;;;27455:18;27476:16;27484:7;27476;:16::i;:::-;27455:37;;27530:10;-1:-1:-1;;;;;27524:16:3;:2;-1:-1:-1;;;;;27524:16:3;;;27503:84;;;;-1:-1:-1;;;27503:84:3;;;;;;;;;27635:10;-1:-1:-1;;;;;27619:26:3;:12;:10;:12::i;:::-;-1:-1:-1;;;;;27619:26:3;;:72;;;;27649:42;27666:10;27678:12;:10;:12::i;27649:42::-;27598:140;;;;-1:-1:-1;;;27598:140:3;;;;;;;;;27749:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;27749:29:3;-1:-1:-1;;;;;27749:29:3;;;;;;;;;27793:33;;27749:24;;27793:33;;;;;;;8589:1;27338:496;;:::o;1554:40::-;;;;:::o;2432:54::-;;;;;;;;;;;;;;;:::o;24699:98::-;24743:7;24770:19;:9;:17;:19::i;:::-;24763:26;;24699:98;:::o;29888:755::-;8572:6;;-1:-1:-1;;;8572:6:3;;;;8571:7;8563:16;;;;;;30026:41;30045:12;:10;:12::i;:::-;30059:7;30026:18;:41::i;:::-;30005:109;;;;-1:-1:-1;;;30005:109:3;;;;;;;;;30125:14;30142:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;30142:32:3;;30200:16;30159:7;30200;:16::i;:::-;30231:25;;;;:16;:25;;;;;:51;;;30184:32;;-1:-1:-1;;;;30231:51:3;;;;30227:220;;30332:35;30349:4;30355:2;30359:7;30332:16;:35::i;:::-;:44;30307:129;;;;-1:-1:-1;;;30307:129:3;;;;;;;;;30478:8;;;:67;;-1:-1:-1;;;30478:67:3;;-1:-1:-1;;;;;30478:8:3;;;;:33;;:67;;30512:4;;30518:2;;30522:7;;30531:6;;30539:5;;30478:67;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30478:67:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30478:67:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;30478:67:3;;;;;;;;;30457:135;;;;-1:-1:-1;;;30457:135:3;;;;;;;;;30603:32;30617:4;30623:2;30627:7;30603:13;:32::i;:::-;8589:1;;29888:755;;;:::o;14287:966::-;9649:8;;14688:7;;-1:-1:-1;;;;;9649:8:3;:17;9667:12;:10;:12::i;:::-;9649:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9649:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9649:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9649:31:3;;;;;;;;;9628:115;;;;-1:-1:-1;;;9628:115:3;;;;;;;;;8572:6;;-1:-1:-1;;;8572:6:3;;;;8571:7;8563:16;;;;;;14733:7;;14720:9;:20;;14712:29;;;;;;14775:1;14760:12;:16;;;14752:50;;;;-1:-1:-1;;;14752:50:3;;;;;;;;;14834:63;14851:9;14862;14873:7;14882:14;14834:16;:63::i;:::-;14813:127;;;;-1:-1:-1;;;14813:127:3;;;;;;;;;14951:15;14969:23;14979:12;:10;:12::i;:::-;14969:9;:23::i;:::-;14951:41;;15002:124;15020:7;15029:9;15040:12;15054:9;15065:7;15074:14;15090:8;15100:25;15002:17;:124::i;:::-;15136:31;15149:7;15158:8;15136:12;:31::i;:::-;15177:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;15177:43:3;;;;;;15197:7;-1:-1:-1;14287:966:3;;;;;;;;;;;:::o;23592:973::-;23655:16;-1:-1:-1;;;;;23705:20:3;;23684:92;;;;-1:-1:-1;;;23684:92:3;;;;;;;;;-1:-1:-1;;;;;23808:26:3;;23787:18;23808:26;;;:18;:26;;;;;:36;;:34;:36::i;:::-;23787:57;-1:-1:-1;23858:15:3;23854:704;;23933:16;;;23947:1;23933:16;;;;;;;;;;;;23926:23;;;;;23854:704;23980:23;24020:10;24006:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;24006:25:3;;23980:51;;24045:19;24067:13;:11;:13::i;:::-;24045:35;-1:-1:-1;24094:19:3;24297:1;24282:238;24311:11;24300:7;:22;24282:238;;24357:25;;;;:16;:25;;;;;:32;-1:-1:-1;;;;;24357:42:3;;;:32;;:42;24353:153;;;24445:7;24423:6;24430:11;24423:19;;;;;;;;;;;;;;;;;:29;24474:13;;;;;24353:153;24324:9;;24282:238;;;24541:6;24534:13;;;;;;;;;12228:881;9649:8;;12585:7;;-1:-1:-1;;;;;9649:8:3;:17;9667:12;:10;:12::i;:::-;9649:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9649:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9649:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9649:31:3;;;;;;;;;9628:115;;;;-1:-1:-1;;;9628:115:3;;;;;;;;;8572:6;;-1:-1:-1;;;8572:6:3;;;;8571:7;8563:16;;;;;;12630:7;;12617:9;:20;;12609:29;;;;;;12672:1;12657:12;:16;;;12649:50;;;;-1:-1:-1;;;12649:50:3;;;;;;;;;12731:63;12748:9;12759;12770:7;12779:14;12731:16;:63::i;:::-;12710:127;;;;-1:-1:-1;;;12710:127:3;;;;;;;;;12848:15;12866:23;12876:12;:10;:12::i;12866:23::-;12848:41;;12899:124;12917:7;12926:9;12937:12;12951:9;12962:7;12971:14;12987:8;12997:25;12899:17;:124::i;:::-;13033:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;13033:43:3;;;;;;13053:7;-1:-1:-1;12228:881:3;;;;;;;;;;:::o;8970:78::-;7291:6;;-1:-1:-1;;;;;7291:6:3;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7275:22:3;;7274:52;;;-1:-1:-1;7319:6:3;;-1:-1:-1;;;;;7319:6:3;7303:12;:10;:12::i;:::-;-1:-1:-1;;;;;7303:22:3;;7274:52;7253:118;;;;-1:-1:-1;;;7253:118:3;;;;;;;;;8713:6;;-1:-1:-1;;;8713:6:3;;;;8705:15;;;;;;9027:6;:14;;-1:-1:-1;;;;9027:14:3;;;8970:78::o;31292:134::-;31379:39;31396:4;31402:2;31406:7;31379:39;;;;;;;;;;;;:16;:39::i;:::-;31292:134;;;:::o;37569:476::-;8572:6;;-1:-1:-1;;;8572:6:3;;;;8571:7;8563:16;;;;;;37632:18;37653:16;37661:7;37653;:16::i;:::-;37679:14;37696:25;;;:16;:25;;;;;:32;37632:37;;-1:-1:-1;;;;;;37696:32:3;;;;37743:20;;;;37739:158;;;37804:8;;-1:-1:-1;;;;;37804:8:3;:17;37822:12;:10;:12::i;:::-;37804:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37804:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37804:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;37804:31:3;;;;;;;;;37779:107;;;;-1:-1:-1;;;37779:107:3;;;;;;;;;37928:41;37947:12;:10;:12::i;:::-;37961:7;37928:18;:41::i;:::-;37907:105;;;;-1:-1:-1;;;37907:105:3;;;;;;;;;38023:14;38029:7;38023:5;:14::i;1329:21::-;;;-1:-1:-1;;;;;1329:21:3;;:::o;1440:26::-;;;-1:-1:-1;;;1440:26:3;;;;;:::o;9113:305::-;7291:6;;-1:-1:-1;;;;;7291:6:3;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7275:22:3;;7274:52;;;-1:-1:-1;7319:6:3;;-1:-1:-1;;;;;7319:6:3;7303:12;:10;:12::i;:::-;-1:-1:-1;;;;;7303:22:3;;7274:52;7253:118;;;;-1:-1:-1;;;7253:118:3;;;;;;;;;9331:34;;9289:4;9281:21;;9266:12;;9331:10;;9281:21;;9331:34;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;9312:53:3;;;9383:7;9375:35;;;;-1:-1:-1;;;9375:35:3;;;;;;;;;7381:1;;9113:305::o;25466:152::-;25521:7;25562:20;;;:11;:20;;;;;;-1:-1:-1;;;;;25562:20:3;;25466:152::o;25006:241::-;25066:7;-1:-1:-1;;;;;25107:24:3;;25086:96;;;;-1:-1:-1;;;25086:96:3;;;;;;;;;-1:-1:-1;;;;;25200:29:3;;;;;;:17;:29;;;;;:39;;:37;:39::i;:::-;25193:46;25006:241;-1:-1:-1;;25006:241:3:o;1302:21::-;;;-1:-1:-1;;;;;1302:21:3;;:::o;22779:403::-;-1:-1:-1;;;;;22961:35:3;;;;;;:27;:35;;;;;;;:46;;22901:15;;;;22961:46;;22997:9;;;;22961:46;;;;;;;;;;;;;;;22929:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22929:78:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23017:17;23050:1;:8;23037:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23017:42:3;-1:-1:-1;23075:6:3;23070:86;23091:1;:8;23087:1;:12;23070:86;;;23128:1;23130;23128:4;;;;;;;;;;;;;;:17;;;23120:1;23122;23120:4;;;;;;;;;;;;;;;;;:25;23101:3;;23070:86;;;-1:-1:-1;23173:1:3;-1:-1:-1;;22779:403:3;;;;;;:::o;1772:32::-;;;-1:-1:-1;;;;;1772:32:3;;:::o;8273:105::-;7291:6;;-1:-1:-1;;;;;7291:6:3;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7275:22:3;;7274:52;;;-1:-1:-1;7319:6:3;;-1:-1:-1;;;;;7319:6:3;7303:12;:10;:12::i;:::-;-1:-1:-1;;;;;7303:22:3;;7274:52;7253:118;;;;-1:-1:-1;;;7253:118:3;;;;;;;;;8357:7;:13;8273:105::o;8814:78::-;7291:6;;-1:-1:-1;;;;;7291:6:3;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7275:22:3;;7274:52;;;-1:-1:-1;7319:6:3;;-1:-1:-1;;;;;7319:6:3;7303:12;:10;:12::i;:::-;-1:-1:-1;;;;;7303:22:3;;7274:52;7253:118;;;;-1:-1:-1;;;7253:118:3;;;;;;;;;8572:6;;-1:-1:-1;;;8572:6:3;;;;8571:7;8563:16;;;;;;8872:6;:13;;-1:-1:-1;;;;8872:13:3;-1:-1:-1;;;8872:13:3;;;8814:78::o;26036:840::-;26101:16;26129:18;26150:21;26160:10;26150:9;:21::i;:::-;26129:42;-1:-1:-1;26185:15:3;26181:689;;26260:16;;;26274:1;26260:16;;;;;;;;;;;;26181:689;26307:23;26347:10;26333:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;26333:25:3;;26307:51;;26372:19;26394:13;:11;:13::i;:::-;26372:35;-1:-1:-1;26421:19:3;26617:1;26602:230;26631:11;26620:7;:22;26602:230;;26677:20;;;;:11;:20;;;;;;-1:-1:-1;;;;;26677:34:3;;;:20;;:34;26673:145;;;26757:7;26735:6;26742:11;26735:19;;;;;;;;;;;;;;;;;:29;26786:13;;;;;26673:145;26644:9;;26602:230;;1999:87:8;2072:7;2065:14;;;;;;;;-1:-1:-1;;2065:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:13;;2065:14;;2072:7;;2065:14;;2072:7;2065:14;;;;;;;;;;;;;;;;;;;;;;;;28622:305:3;9939:8;;-1:-1:-1;;;;;9939:8:3;:17;9957:12;:10;:12::i;:::-;9939:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9939:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9939:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9939:31:3;;;;;;;;;9918:115;;;;-1:-1:-1;;;9918:115:3;;;;;;;;;8572:6;;-1:-1:-1;;;8572:6:3;;;;8571:7;8563:16;;;;;;28761:12;:10;:12::i;:::-;-1:-1:-1;;;;;28755:18:3;:2;-1:-1:-1;;;;;28755:18:3;;;28747:57;;;;-1:-1:-1;;;28747:57:3;;;;;;;;;28854:8;28815:18;:32;28834:12;:10;:12::i;:::-;-1:-1:-1;;;;;28815:32:3;;;;;;;;;;;;;;;;;-1:-1:-1;28815:32:3;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;28815:47:3;;;;;;;;;;;28892:12;:10;:12::i;:::-;-1:-1:-1;;;;;28877:42:3;;28910:8;28877:42;;;;;;;;;;;;;;;28622:305;;:::o;22325:330::-;-1:-1:-1;;;;;22452:32:3;;;;;;:24;:32;;;;;;;;22423:61;;;;;;;;;;;;;;;;;22395:15;;;;22423:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22423:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22494:17;22527:1;:8;22514:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22494:42:3;-1:-1:-1;22552:6:3;22547:82;22568:1;:8;22564:1;:12;22547:82;;;22604:1;22606;22604:4;;;;;;;;;;;;;;:14;;;22597:1;22599;22597:4;;;;;;;;;;;;;;;;;:21;22578:3;;22547:82;;;-1:-1:-1;22646:1:3;22325:330;-1:-1:-1;;;22325:330:3:o;32148:788::-;8572:6;;-1:-1:-1;;;8572:6:3;;;;8571:7;8563:16;;;;;;32309:41;32328:12;:10;:12::i;:::-;32342:7;32309:18;:41::i;:::-;32288:109;;;;-1:-1:-1;;;32288:109:3;;;;;;;;;32408:14;32425:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;32425:32:3;;32483:16;32442:7;32483;:16::i;:::-;32514:25;;;;:16;:25;;;;;:51;;;32467:32;;-1:-1:-1;;;;32514:51:3;;;;32510:220;;32615:35;32632:4;32638:2;32642:7;32615:16;:35::i;:::-;:44;32590:129;;;;-1:-1:-1;;;32590:129:3;;;;;;;;;32761:8;;;:67;;-1:-1:-1;;;32761:67:3;;-1:-1:-1;;;;;32761:8:3;;;;:33;;:67;;32795:4;;32801:2;;32805:7;;32814:6;;32822:5;;32761:67;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32761:67:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32761:67:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;32761:67:3;;;;;;;;;32740:135;;;;-1:-1:-1;;;32740:135:3;;;;;;;;;32886:42;32904:4;32910:2;32914:7;32923:4;32886:17;:42::i;:::-;8589:1;;32148:788;;;;:::o;11181:958::-;9649:8;;11578:7;;-1:-1:-1;;;;;9649:8:3;:17;9667:12;:10;:12::i;:::-;9649:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9649:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9649:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9649:31:3;;;;;;;;;9628:115;;;;-1:-1:-1;;;9628:115:3;;;;;;;;;8572:6;;-1:-1:-1;;;8572:6:3;;;;8571:7;8563:16;;;;;;11623:7;;11610:9;:20;;11602:29;;;;;;11665:1;11650:12;:16;;;11642:50;;;;-1:-1:-1;;;11642:50:3;;;;;;;;;11724:63;11741:9;11752;11763:7;11772:14;11724:16;:63::i;:::-;11703:127;;;;-1:-1:-1;;;11703:127:3;;;;;;;;;11841:15;11859:19;11865:12;:10;:12::i;:::-;11859:5;:19::i;8036:144::-;7291:6;;-1:-1:-1;;;;;7291:6:3;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7275:22:3;;7274:52;;;-1:-1:-1;7319:6:3;;-1:-1:-1;;;;;7319:6:3;7303:12;:10;:12::i;:::-;-1:-1:-1;;;;;7303:22:3;;7274:52;7253:118;;;;-1:-1:-1;;;7253:118:3;;;;;;;;;8134:8;:39;;-1:-1:-1;;;;;;8134:39:3;-1:-1:-1;;;;;8134:39:3;;;;;;;;;;8036:144::o;17995:210::-;18053:13;18100:16;18108:7;18100;:16::i;:::-;18079:81;;;;-1:-1:-1;;;18079:81:3;;;;;;;;;18178:19;;;;:10;:19;;;;;;;;;18171:26;;;;;;-1:-1:-1;;18171:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18178:19;;18171:26;;18178:19;18171:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17995:210;;;:::o;7714:169::-;7291:6;;-1:-1:-1;;;;;7291:6:3;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7275:22:3;;7274:52;;;-1:-1:-1;7319:6:3;;-1:-1:-1;;;;;7319:6:3;7303:12;:10;:12::i;:::-;-1:-1:-1;;;;;7303:22:3;;7274:52;7253:118;;;;-1:-1:-1;;;7253:118:3;;;;;;;;;-1:-1:-1;;;;;7811:22:3;;;7807:70;;7849:6;:17;;-1:-1:-1;;;;;;7849:17:3;-1:-1:-1;;;;;7849:17:3;;;;;7807:70;7714:169;:::o;20953:952::-;21025:14;21049:13;21072:23;21105:26;21141:16;21167:14;21191:21;21222:15;21247:30;21287:19;21345:16;21353:7;21345;:16::i;:::-;21324:81;;;;-1:-1:-1;;;21324:81:3;;;;;;;;;21416:25;;:::i;:::-;21444;;;;:16;:25;;;;;;;;;21416:53;;;;;;;;;;-1:-1:-1;;;;;21416:53:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21416:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;21444:25;;21416:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21416:53:3;;;-1:-1:-1;;21416:53:3;;;;;;;;;;;;;;;;-1:-1:-1;;21416:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21416:53:3;;;-1:-1:-1;;21416:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21416:53:3;;;;;;;;;-1:-1:-1;;;21416:53:3;;;;;;;;-1:-1:-1;;;21416:53:3;;;;;;;;;;;;;;;-1:-1:-1;21502:28:3;;;:19;:28;;;;;21562:16;;;;-1:-1:-1;21502:28:3;;;21592:16;21502:28;21592:7;:16::i;:::-;21622:9;:19;;;21655:9;:22;;;21691:9;:19;;;21724:9;:17;;;21755:9;:24;;;21793:9;:18;;;21825:9;:35;;;21874:13;21541:356;;;;;;;;;;;;;;;;;;;;;;;;;;;;20953:952;;;;;;;;;;;:::o;7538:169::-;7291:6;;-1:-1:-1;;;;;7291:6:3;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7275:22:3;;7274:52;;;-1:-1:-1;7319:6:3;;-1:-1:-1;;;;;7319:6:3;7303:12;:10;:12::i;:::-;-1:-1:-1;;;;;7303:22:3;;7274:52;7253:118;;;;-1:-1:-1;;;7253:118:3;;;;;;;;;-1:-1:-1;;;;;7635:22:3;;;7631:70;;7673:6;:17;;-1:-1:-1;;;;;7673:17:3;;-1:-1:-1;;;;;;7673:17:3;;;;;;7538:169;:::o;29266:185::-;-1:-1:-1;;;;;29403:30:3;;;29375:4;29403:30;;;:18;:30;;;;;;;;:40;;;;;;;;;;;;;;;29266:185::o;10168:873::-;9649:8;;10521:7;;-1:-1:-1;;;;;9649:8:3;:17;9667:12;:10;:12::i;:::-;9649:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9649:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9649:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9649:31:3;;;;;;;;;9628:115;;;;-1:-1:-1;;;9628:115:3;;;;;;;;;8572:6;;-1:-1:-1;;;8572:6:3;;;;8571:7;8563:16;;;;;;10566:7;;10553:9;:20;;10545:29;;;;;;10608:1;10593:12;:16;;;10585:50;;;;-1:-1:-1;;;10585:50:3;;;;;;;;;10667:63;10684:9;10695;10706:7;10715:14;10667:16;:63::i;:::-;10646:127;;;;-1:-1:-1;;;10646:127:3;;;;;;;;;10784:15;10802:19;10808:12;:10;:12::i;13270:914::-;9649:8;;13654:7;;-1:-1:-1;;;;;9649:8:3;:17;9667:12;:10;:12::i;:::-;9649:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9649:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9649:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9649:31:3;;;;;;;;;9628:115;;;;-1:-1:-1;;;9628:115:3;;;;;;;;;8572:6;;-1:-1:-1;;;8572:6:3;;;;8571:7;8563:16;;;;;;13699:7;;13686:9;:20;;13678:29;;;;;;13741:1;13726:12;:16;;;13718:50;;;;-1:-1:-1;;;13718:50:3;;;;;;;;;13800:63;13817:9;13828;13839:7;13848:14;13800:16;:63::i;:::-;13779:127;;;;-1:-1:-1;;;13779:127:3;;;;;;;;;13917:15;13935:29;13945:12;:10;:12::i;:::-;13959:4;13935:9;:29::i;:::-;13917:47;;13974:124;13992:7;14001:9;14012:12;14026:9;14037:7;14046:14;14062:8;14072:25;13974:17;:124::i;34143:165::-;34200:4;34238:20;;;:11;:20;;;;;;-1:-1:-1;;;;;34238:20:3;34276:24;;;34143:165::o;6710:90::-;6782:10;6710:90;:::o;1061:112:1:-;1152:14;;1061:112::o;34669:384:3:-;34778:4;34820:16;34828:7;34820;:16::i;:::-;34799:81;;;;-1:-1:-1;;;34799:81:3;;;;;;;;;34891:18;34912:16;34920:7;34912;:16::i;:::-;34891:37;;34958:10;-1:-1:-1;;;;;34947:21:3;:7;-1:-1:-1;;;;;34947:21:3;;:56;;;;34996:7;-1:-1:-1;;;;;34972:31:3;:20;34984:7;34972:11;:20::i;:::-;-1:-1:-1;;;;;34972:31:3;;34947:56;:97;;;;35007:37;35024:10;35036:7;35007:16;:37::i;:::-;34939:106;34669:384;-1:-1:-1;;;;34669:384:3:o;39440:350::-;39587:4;39625:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;39625:32:3;;;;39672:14;;;;;:30;;;39696:6;-1:-1:-1;;;;;39690:12:3;:2;-1:-1:-1;;;;;39690:12:3;;39672:30;39668:115;;;39725:5;39718:12;;;;;39668:115;39768:4;39761:11;;;;;35434:486;35561:4;-1:-1:-1;;;;;35541:24:3;:16;35549:7;35541;:16::i;:::-;-1:-1:-1;;;;;35541:24:3;;35520:92;;;;-1:-1:-1;;;35520:92:3;;;;;;;;;-1:-1:-1;;;;;35644:16:3;;35623:87;;;;-1:-1:-1;;;35623:87:3;;;;;;;;;35721:23;35736:7;35721:14;:23::i;:::-;-1:-1:-1;;;;;35755:23:3;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;35800:21:3;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;35844:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;35844:25:3;-1:-1:-1;;;;;35844:25:3;;;;;;;;;35885:27;;35844:20;;35885:27;;;;;;;35434:486;;;:::o;18263:566::-;18470:8;;;:49;;-1:-1:-1;;;18470:49:3;;18432:4;;-1:-1:-1;;;;;18470:8:3;;;;:38;;:49;;18509:9;;18470:49;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18470:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18470:49:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18470:49:3;;;;;;;;;18449:131;;;;-1:-1:-1;;;18449:131:3;;;;;;;;;18624:14;18612:26;;:9;:26;;;18591:106;;;;-1:-1:-1;;;18591:106:3;;;;;;;;;18739:9;18729:19;;:7;:19;;;18708:91;;;;-1:-1:-1;;;18708:91:3;;;;;;;;;-1:-1:-1;18817:4:3;18263:566;;;;;;:::o;15746:136::-;15795:7;15815:15;15833:17;15843:2;15833:17;;;;;;;;;;;;:9;:17::i;19738:1208::-;20052:16;20060:7;20052;:16::i;:::-;20031:81;;;;-1:-1:-1;;;20031:81:3;;;;;;;;;20123:25;;:::i;:::-;20151:398;;;;;;;;20190:12;:10;:12::i;:::-;-1:-1:-1;;;;;20151:398:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20560:25:3;;;:16;:25;;;;;;:37;;;;-1:-1:-1;;;;;;20560:37:3;;;;;;;;;;;;;;;;;-1:-1:-1;20560:37:3;;:25;;:37;;-1:-1:-1;20560:37:3;;;;;;;;:::i;:::-;-1:-1:-1;20560:37:3;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20560:37:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20560:37:3;;;;;;;;-1:-1:-1;;20560:37:3;;;;;;;;;;;;;-1:-1:-1;;20560:37:3;-1:-1:-1;;;20560:37:3;;;;;;;;;;;;-1:-1:-1;;20560:37:3;-1:-1:-1;;;20560:37:3;;;;;;;;;;;;-1:-1:-1;;;;20560:37:3;-1:-1:-1;;;20560:37:3;;;;;;;;;;20613;20640:9;20613:26;:37::i;:::-;20608:142;;20666:24;:38;20691:12;:10;:12::i;:::-;-1:-1:-1;;;;;20666:38:3;;;;;;;;;;;;;;;-1:-1:-1;20666:38:3;;;20711:26;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;20666:73:3;;;;;;;;;;;23:18:-1;;20666:73:3;;;;;;;;;;;;;;;:::i;:::-;;;;;20608:142;20765:54;20795:9;20806:12;20765:29;:54::i;:::-;20760:179;;20835:27;:41;20863:12;:10;:12::i;:::-;-1:-1:-1;;;;;20835:41:3;-1:-1:-1;;;;;20835:41:3;;;;;;;;;;;;20877:9;20835:52;;;;;;;;;;;;;;;;;;;;;;;;20894:32;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;-1:-1;20835:93:3;;;;;;;;;;;23:18:-1;;20835:52:3;:93;;;;;;;;;;;;;:::i;:::-;;;;;20760:179;19738:1208;;;;;;;;;:::o;17600:203::-;17699:16;17707:7;17699;:16::i;:::-;17678:81;;;;-1:-1:-1;;;17678:81:3;;;;;;;;;17770:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;39077:92::-;39129:32;39135:16;39143:7;39135;:16::i;:::-;39153:7;39129:5;:32::i;33640:308::-;33761:32;33775:4;33781:2;33785:7;33761:13;:32::i;:::-;33825:47;33848:4;33854:2;33858:7;33867:4;33825:22;:47::i;:::-;33804:136;;;;-1:-1:-1;;;33804:136:3;;;;;;;;;33640:308;;;;:::o;16933:398::-;16978:7;-1:-1:-1;;;;;17006:16:3;;16998:49;;;;-1:-1:-1;;;16998:49:3;;;;;;;;;17058:21;:9;:19;:21::i;:::-;17089:15;17107:19;:9;:17;:19::i;:::-;17137:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;17137:25:3;-1:-1:-1;;;;;17137:25:3;;;;;;;;17172:21;;:17;:21;;;;;17137:20;;-1:-1:-1;17172:33:3;;:31;:33::i;:::-;-1:-1:-1;;;;;17215:22:3;;;;;;:18;:22;;;;;:34;;:32;:34::i;:::-;17265:33;;17290:7;;-1:-1:-1;;;;;17265:33:3;;;17282:1;;17265:33;;17282:1;;17265:33;17316:7;16933:398;-1:-1:-1;;16933:398:3:o;16446:301::-;16514:7;16534:15;16552:9;16558:2;16552:5;:9::i;:::-;16534:27;;16593:53;16624:1;16628:2;16632:7;16641:4;16593:22;:53::i;:::-;16572:142;;;;-1:-1:-1;;;16572:142:3;;;;;;;;37027:173;37127:1;37091:24;;;:15;:24;;;;;;-1:-1:-1;;;;;37091:24:3;:38;37087:106;;37180:1;37145:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;37145:37:3;;;37027:173::o;1274:108:1:-;1354:14;;:21;;1373:1;1354:21;:18;:21;:::i;:::-;1337:38;;1274:108::o;1179:89::-;1242:19;;1260:1;1242:19;;;1179:89::o;18836:413:3:-;19006:10;18935:4;18981:36;;;:24;:36;;;;;;;;18952:65;;;;;;;;;;;;;;;;;:26;;18935:4;;18952:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18952:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18952:65:3;;-1:-1:-1;19027:15:3;;-1:-1:-1;19027:15:3;;-1:-1:-1;;19060:155:3;19081:1;:8;19077:1;:12;19060:155;;;19114:39;19127:9;19138:1;19140;19138:4;;;;;;;;;;;;;;:14;;;19114:12;:39::i;:::-;19110:95;;;19186:4;19173:17;;19110:95;19091:3;;19060:155;;19256:475;19471:10;19394:4;19443:39;;;:27;:39;;;;;;:50;;19411:29;;19443:39;:50;;19483:9;;19443:50;;;;;;;;;;;;;;;19411:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19411:82:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19411:82:3;;-1:-1:-1;19503:15:3;;-1:-1:-1;19503:15:3;;-1:-1:-1;;19536:161:3;19557:1;:8;19553:1;:12;19536:161;;;19590:45;19603:12;19617:1;19619;19617:4;;;;;;;19590:45;19586:101;;;19668:4;19655:17;;19586:101;19567:3;;19536:161;;;-1:-1:-1;19714:10:3;19256:475;-1:-1:-1;;;;19256:475:3:o;38319:577::-;38432:10;-1:-1:-1;;;;;38412:30:3;:16;38420:7;38412;:16::i;:::-;-1:-1:-1;;;;;38412:30:3;;38391:94;;;;-1:-1:-1;;;38391:94:3;;;;;;;;;38496:23;38511:7;38496:14;:23::i;:::-;-1:-1:-1;;;;;38530:29:3;;;;;;:17;:29;;;;;:41;;:39;:41::i;:::-;38612:1;38581:20;;;:11;:20;;;;;;;;:33;;-1:-1:-1;;;;;;38581:33:3;;;38672:10;:19;;;;;38666:33;;-1:-1:-1;;38581:33:3;38666;;;38581;38666;;;;;;:38;38662:95;;38727:19;;;;:10;:19;;;;;38720:26;;;:::i;:::-;38806:25;;;;:16;:25;;;;;38799:32;;-1:-1:-1;;;;;;38799:32:3;;;38806:25;38799:32;;;;38806:25;38799:32;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;38799:32:3;;;;-1:-1:-1;;38799:32:3;;;38847:41;;38880:7;;38799:32;;-1:-1:-1;;;;;38847:41:3;;;;;38799:32;;38847:41;38319:577;;:::o;36508:357::-;36636:4;36662:15;:2;-1:-1:-1;;;;;36662:13:3;;:15::i;:::-;36657:58;;-1:-1:-1;36700:4:3;36693:11;;36657:58;36725:13;36757:2;-1:-1:-1;;;;;36741:36:3;;36778:12;:10;:12::i;:::-;36792:4;36798:7;36807:4;36741:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36741:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36741:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;36741:71:3;;;;;;;;;-1:-1:-1;;;;;;36830:26:3;-1:-1:-1;;;36830:26:3;;-1:-1:-1;;36508:357:3;;;;;;:::o;1276:134:10:-;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;39204:230:3:-;39329:4;39421:1;39403:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;39403:21:3;;;39393:32;;;;;;39385:1;39367:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;39367:21:3;;;39357:32;;;;;;:68;39349:78;;39204:230;;;;:::o;559:797:0:-;619:4;1267:20;;1112:66;1306:15;;;;;:42;;-1:-1:-1;1325:23:0;;;1298:51;-1:-1:-1;;559:797:0:o;1846:187:10:-;1932:7;1967:12;1959:6;;;;1951:29;;;;-1:-1:-1;;;1951:29:10;;;;;;;;;;-1:-1:-1;;;2002:5:10;;;1846:187::o;850:1239:8:-;;;;;;;;;-1:-1:-1;850:1239:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:1239:8;;;-1:-1:-1;850:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;348:13;;366:30;348:13;366:30;;408:128;474:20;;499:32;474:20;499:32;;543:132;620:13;;638:32;620:13;638:32;;683:440;;784:3;777:4;769:6;765:17;761:27;751:2;;802:1;799;792:12;751:2;839:6;826:20;861:64;876:48;917:6;876:48;;;861:64;;;852:73;;945:6;938:5;931:21;981:4;973:6;969:17;1014:4;1007:5;1003:16;1049:3;1040:6;1035:3;1031:16;1028:25;1025:2;;;1066:1;1063;1056:12;1025:2;1076:41;1110:6;1105:3;1100;1076:41;;;744:379;;;;;;;;1146:336;;;1261:3;1254:4;1246:6;1242:17;1238:27;1228:2;;1279:1;1276;1269:12;1228:2;-1:-1;1299:20;;1339:18;1328:30;;1325:2;;;1371:1;1368;1361:12;1325:2;1405:4;1397:6;1393:17;1381:29;;1455:3;1448;1440:6;1436:16;1426:8;1422:31;1419:40;1416:2;;;1472:1;1469;1462:12;1416:2;1221:261;;;;;;1941:128;2007:20;;2032:32;2007:20;2032:32;;2076:130;2143:20;;2168:33;2143:20;2168:33;;2213:128;2279:20;;2304:32;2279:20;2304:32;;2348:128;2414:20;;2439:32;2414:20;2439:32;;2483:241;;2587:2;2575:9;2566:7;2562:23;2558:32;2555:2;;;2603:1;2600;2593:12;2555:2;2638:1;2655:53;2700:7;2680:9;2655:53;;2731:366;;;2852:2;2840:9;2831:7;2827:23;2823:32;2820:2;;;2868:1;2865;2858:12;2820:2;2903:1;2920:53;2965:7;2945:9;2920:53;;;2910:63;;2882:97;3010:2;3028:53;3073:7;3064:6;3053:9;3049:22;3028:53;;;3018:63;;2989:98;2814:283;;;;;;3104:491;;;;3242:2;3230:9;3221:7;3217:23;3213:32;3210:2;;;3258:1;3255;3248:12;3210:2;3293:1;3310:53;3355:7;3335:9;3310:53;;;3300:63;;3272:97;3400:2;3418:53;3463:7;3454:6;3443:9;3439:22;3418:53;;;3408:63;;3379:98;3508:2;3526:53;3571:7;3562:6;3551:9;3547:22;3526:53;;;3516:63;;3487:98;3204:391;;;;;;3602:721;;;;;3766:3;3754:9;3745:7;3741:23;3737:33;3734:2;;;3783:1;3780;3773:12;3734:2;3818:1;3835:53;3880:7;3860:9;3835:53;;;3825:63;;3797:97;3925:2;3943:53;3988:7;3979:6;3968:9;3964:22;3943:53;;;3933:63;;3904:98;4033:2;4051:53;4096:7;4087:6;4076:9;4072:22;4051:53;;;4041:63;;4012:98;4169:2;4158:9;4154:18;4141:32;4193:18;4185:6;4182:30;4179:2;;;4225:1;4222;4215:12;4179:2;4245:62;4299:7;4290:6;4279:9;4275:22;4245:62;;;4235:72;;4120:193;3728:595;;;;;;;;4330:360;;;4448:2;4436:9;4427:7;4423:23;4419:32;4416:2;;;4464:1;4461;4454:12;4416:2;4499:1;4516:53;4561:7;4541:9;4516:53;;;4506:63;;4478:97;4606:2;4624:50;4666:7;4657:6;4646:9;4642:22;4624:50;;4697:492;;;;4838:2;4826:9;4817:7;4813:23;4809:32;4806:2;;;4854:1;4851;4844:12;4806:2;4889:1;4906:53;4951:7;4931:9;4906:53;;;4896:63;;4868:97;5024:2;5013:9;5009:18;4996:32;5048:18;5040:6;5037:30;5034:2;;;5080:1;5077;5070:12;5034:2;5108:65;5165:7;5156:6;5145:9;5141:22;5108:65;;;5098:75;;;;4975:204;4800:389;;;;;;5196:366;;;5317:2;5305:9;5296:7;5292:23;5288:32;5285:2;;;5333:1;5330;5323:12;5285:2;5368:1;5385:53;5430:7;5410:9;5385:53;;;5375:63;;5347:97;5475:2;5493:53;5538:7;5529:6;5518:9;5514:22;5493:53;;5569:257;;5681:2;5669:9;5660:7;5656:23;5652:32;5649:2;;;5697:1;5694;5687:12;5649:2;5732:1;5749:61;5802:7;5782:9;5749:61;;5833:239;;5936:2;5924:9;5915:7;5911:23;5907:32;5904:2;;;5952:1;5949;5942:12;5904:2;5987:1;6004:52;6048:7;6028:9;6004:52;;6079:261;;6193:2;6181:9;6172:7;6168:23;6164:32;6161:2;;;6209:1;6206;6199:12;6161:2;6244:1;6261:63;6316:7;6296:9;6261:63;;6347:1317;;;;;;;;;6582:3;6570:9;6561:7;6557:23;6553:33;6550:2;;;6599:1;6596;6589:12;6550:2;6634:31;;6685:18;6674:30;;6671:2;;;6717:1;6714;6707:12;6671:2;6737:63;6792:7;6783:6;6772:9;6768:22;6737:63;;;6727:73;;6613:193;6865:2;6854:9;6850:18;6837:32;6889:18;6881:6;6878:30;6875:2;;;6921:1;6918;6911:12;6875:2;6941:63;6996:7;6987:6;6976:9;6972:22;6941:63;;;6931:73;;6816:194;7041:2;7059:52;7103:7;7094:6;7083:9;7079:22;7059:52;;;7049:62;;7020:97;7148:2;7166:52;7210:7;7201:6;7190:9;7186:22;7166:52;;;7156:62;;7127:97;7255:3;7274:52;7318:7;7309:6;7298:9;7294:22;7274:52;;;7264:62;;7234:98;7363:3;7382:52;7426:7;7417:6;7406:9;7402:22;7382:52;;;7372:62;;7342:98;7471:3;7490:50;7532:7;7523:6;7512:9;7508:22;7490:50;;;7480:60;;7450:96;7577:3;7596:52;7640:7;7631:6;7620:9;7616:22;7596:52;;;7586:62;;7556:98;6544:1120;;;;;;;;;;;;7671:1547;;;;;;;;;;7932:3;7920:9;7911:7;7907:23;7903:33;7900:2;;;7949:1;7946;7939:12;7900:2;7984:31;;8035:18;8024:30;;8021:2;;;8067:1;8064;8057:12;8021:2;8087:63;8142:7;8133:6;8122:9;8118:22;8087:63;;;8077:73;;7963:193;8215:2;8204:9;8200:18;8187:32;8239:18;8231:6;8228:30;8225:2;;;8271:1;8268;8261:12;8225:2;8291:63;8346:7;8337:6;8326:9;8322:22;8291:63;;;8281:73;;8166:194;8391:2;8409:52;8453:7;8444:6;8433:9;8429:22;8409:52;;;8399:62;;8370:97;8498:2;8516:52;8560:7;8551:6;8540:9;8536:22;8516:52;;;8506:62;;8477:97;8605:3;8624:52;8668:7;8659:6;8648:9;8644:22;8624:52;;;8614:62;;8584:98;8713:3;8732:52;8776:7;8767:6;8756:9;8752:22;8732:52;;;8722:62;;8692:98;8821:3;8840:50;8882:7;8873:6;8862:9;8858:22;8840:50;;;8830:60;;8800:96;8927:3;8946:52;8990:7;8981:6;8970:9;8966:22;8946:52;;;8936:62;;8906:98;9063:3;9052:9;9048:19;9035:33;9088:18;9080:6;9077:30;9074:2;;;9120:1;9117;9110:12;9074:2;9140:62;9194:7;9185:6;9174:9;9170:22;9140:62;;;9130:72;;9014:194;7894:1324;;;;;;;;;;;;10781:241;;10885:2;10873:9;10864:7;10860:23;10856:32;10853:2;;;10901:1;10898;10891:12;10853:2;10936:1;10953:53;10998:7;10978:9;10953:53;;11030:181;;11143:62;11201:3;11193:6;11143:62;;11220:173;;11307:46;11349:3;11341:6;11307:46;;;-1:-1;;11382:4;11373:14;;11300:93;11401:113;11484:24;11502:5;11484:24;;;11479:3;11472:37;11466:48;;;11550:896;;11707:60;11761:5;11707:60;;;11780:92;11865:6;11860:3;11780:92;;;11773:99;;11895:3;11937:4;11929:6;11925:17;11920:3;11916:27;11964:62;12020:5;11964:62;;;12046:7;12074:1;12059:348;12084:6;12081:1;12078:13;12059:348;;;12146:9;12140:4;12136:20;12131:3;12124:33;12191:6;12185:13;12213:76;12284:4;12269:13;12213:76;;;12205:84;;12306:66;12365:6;12306:66;;;12395:4;12386:14;;;;;12296:76;-1:-1;;12106:1;12099:9;12059:348;;;-1:-1;12420:4;;11686:760;-1:-1;;;;;;;11686:760;12485:690;;12630:54;12678:5;12630:54;;;12697:86;12776:6;12771:3;12697:86;;;12690:93;;12804:56;12854:5;12804:56;;;12880:7;12908:1;12893:260;12918:6;12915:1;12912:13;12893:260;;;12985:6;12979:13;13006:63;13065:3;13050:13;13006:63;;;12999:70;;13086:60;13139:6;13086:60;;;13076:70;-1:-1;;12940:1;12933:9;12893:260;;;-1:-1;13166:3;;12609:566;-1:-1;;;;;12609:566;13183:104;13260:21;13275:5;13260:21;;13294:343;;13404:38;13436:5;13404:38;;;13454:70;13517:6;13512:3;13454:70;;;13447:77;;13529:52;13574:6;13569:3;13562:4;13555:5;13551:16;13529:52;;;13602:29;13624:6;13602:29;;;13593:39;;;;13384:253;-1:-1;;;13384:253;13644:174;13751:61;13806:5;13751:61;;13850:313;;13984:89;14066:6;14061:3;13984:89;;;13977:96;;14085:43;14121:6;14116:3;14109:5;14085:43;;;-1:-1;;14141:16;;13970:193;14525:360;;14655:39;14688:5;14655:39;;;14706:89;14788:6;14783:3;14706:89;;;14699:96;;14800:52;14845:6;14840:3;14833:4;14826:5;14822:16;14800:52;;;14864:16;;;;;14635:250;-1:-1;;14635:250;15219:364;;15379:67;15443:2;15438:3;15379:67;;;15479:66;15459:87;;15574:2;15565:12;;15365:218;-1:-1;;15365:218;15592:364;;15752:67;15816:2;15811:3;15752:67;;;15852:66;15832:87;;15947:2;15938:12;;15738:218;-1:-1;;15738:218;15965:465;;16125:67;16189:2;16184:3;16125:67;;;16225:66;16205:87;;-1:-1;;;16321:2;16312:12;;16305:88;16421:2;16412:12;;16111:319;-1:-1;;16111:319;16439:364;;16599:67;16663:2;16658:3;16599:67;;;16699:66;16679:87;;16794:2;16785:12;;16585:218;-1:-1;;16585:218;16812:364;;16972:67;17036:2;17031:3;16972:67;;;17072:66;17052:87;;17167:2;17158:12;;16958:218;-1:-1;;16958:218;17185:364;;17345:67;17409:2;17404:3;17345:67;;;17445:66;17425:87;;17540:2;17531:12;;17331:218;-1:-1;;17331:218;17558:364;;17718:67;17782:2;17777:3;17718:67;;;17818:66;17798:87;;17913:2;17904:12;;17704:218;-1:-1;;17704:218;17931:364;;18091:67;18155:2;18150:3;18091:67;;;18191:66;18171:87;;18286:2;18277:12;;18077:218;-1:-1;;18077:218;18304:465;;18464:67;18528:2;18523:3;18464:67;;;18564:66;18544:87;;-1:-1;;;18660:2;18651:12;;18644:88;18760:2;18751:12;;18450:319;-1:-1;;18450:319;18778:364;;18938:67;19002:2;18997:3;18938:67;;;19038:66;19018:87;;19133:2;19124:12;;18924:218;-1:-1;;18924:218;19151:364;;19311:67;19375:2;19370:3;19311:67;;;19411:66;19391:87;;19506:2;19497:12;;19297:218;-1:-1;;19297:218;19524:364;;19684:67;19748:2;19743:3;19684:67;;;19784:66;19764:87;;19879:2;19870:12;;19670:218;-1:-1;;19670:218;19897:465;;20057:67;20121:2;20116:3;20057:67;;;20157:66;20137:87;;-1:-1;;;20253:2;20244:12;;20237:88;20353:2;20344:12;;20043:319;-1:-1;;20043:319;20371:364;;20531:67;20595:2;20590:3;20531:67;;;20631:66;20611:87;;20726:2;20717:12;;20517:218;-1:-1;;20517:218;20744:296;;20921:83;21002:1;20997:3;20921:83;;21049:364;;21209:67;21273:2;21268:3;21209:67;;;21309:66;21289:87;;21404:2;21395:12;;21195:218;-1:-1;;21195:218;21422:364;;21582:67;21646:2;21641:3;21582:67;;;21682:66;21662:87;;21777:2;21768:12;;21568:218;-1:-1;;21568:218;21795:465;;21955:67;22019:2;22014:3;21955:67;;;22055:66;22035:87;;-1:-1;;;22151:2;22142:12;;22135:88;22251:2;22242:12;;21941:319;-1:-1;;21941:319;22269:465;;22429:67;22493:2;22488:3;22429:67;;;22529:66;22509:87;;-1:-1;;;22625:2;22616:12;;22609:88;22725:2;22716:12;;22415:319;-1:-1;;22415:319;22743:364;;22903:67;22967:2;22962:3;22903:67;;;23003:66;22983:87;;23098:2;23089:12;;22889:218;-1:-1;;22889:218;23116:364;;23276:67;23340:2;23335:3;23276:67;;;23376:66;23356:87;;23471:2;23462:12;;23262:218;-1:-1;;23262:218;23488:110;23569:23;23586:5;23569:23;;23605:103;23678:24;23696:5;23678:24;;23835:110;23916:23;23933:5;23916:23;;23952:110;24033:23;24050:5;24033:23;;24069:286;;24225:105;24326:3;24317:6;24309;24225:105;;24362:266;;24508:95;24599:3;24590:6;24508:95;;24635:370;;24833:147;24976:3;24833:147;;25012:213;25130:2;25115:18;;25144:71;25119:9;25188:6;25144:71;;25232:1363;25626:3;25611:19;;25641:71;25615:9;25685:6;25641:71;;;25723:72;25791:2;25780:9;25776:18;25767:6;25723:72;;;25843:9;25837:4;25833:20;25828:2;25817:9;25813:18;25806:48;25868:78;25941:4;25932:6;25868:78;;;25860:86;;25994:9;25988:4;25984:20;25979:2;25968:9;25964:18;25957:48;26019:78;26092:4;26083:6;26019:78;;;26011:86;;26108:71;26174:3;26163:9;26159:19;26150:6;26108:71;;;26190;26256:3;26245:9;26241:19;26232:6;26190:71;;;26272;26338:3;26327:9;26323:19;26314:6;26272:71;;;26354;26420:3;26409:9;26405:19;26396:6;26354:71;;;26436:67;26498:3;26487:9;26483:19;26474:6;26436:67;;;26514:71;26580:3;26569:9;26565:19;26556:6;26514:71;;;25597:998;;;;;;;;;;;;;;26602:659;26832:3;26817:19;;26847:71;26821:9;26891:6;26847:71;;;26929:72;26997:2;26986:9;26982:18;26973:6;26929:72;;;27012;27080:2;27069:9;27065:18;27056:6;27012:72;;;27095;27163:2;27152:9;27148:18;27139:6;27095:72;;;27178:73;27246:3;27235:9;27231:19;27222:6;27178:73;;;26803:458;;;;;;;;;27268:631;27488:3;27473:19;;27503:71;27477:9;27547:6;27503:71;;;27585:72;27653:2;27642:9;27638:18;27629:6;27585:72;;;27668;27736:2;27725:9;27721:18;27712:6;27668:72;;;27788:9;27782:4;27778:20;27773:2;27762:9;27758:18;27751:48;27813:76;27884:4;27875:6;27813:76;;27906:385;28086:2;28100:47;;;28071:18;;28161:120;28071:18;28267:6;28161:120;;28298:361;28466:2;28480:47;;;28451:18;;28541:108;28451:18;28635:6;28541:108;;28666:201;28778:2;28763:18;;28792:65;28767:9;28830:6;28792:65;;28874:261;29016:2;29001:18;;29030:95;29005:9;29098:6;29030:95;;29142:301;29280:2;29294:47;;;29265:18;;29355:78;29265:18;29419:6;29355:78;;29450:407;29641:2;29655:47;;;29626:18;;29716:131;29626:18;29716:131;;29864:407;30055:2;30069:47;;;30040:18;;30130:131;30040:18;30130:131;;30278:407;30469:2;30483:47;;;30454:18;;30544:131;30454:18;30544:131;;30692:407;30883:2;30897:47;;;30868:18;;30958:131;30868:18;30958:131;;31106:407;31297:2;31311:47;;;31282:18;;31372:131;31282:18;31372:131;;31520:407;31711:2;31725:47;;;31696:18;;31786:131;31696:18;31786:131;;31934:407;32125:2;32139:47;;;32110:18;;32200:131;32110:18;32200:131;;32348:407;32539:2;32553:47;;;32524:18;;32614:131;32524:18;32614:131;;32762:407;32953:2;32967:47;;;32938:18;;33028:131;32938:18;33028:131;;33176:407;33367:2;33381:47;;;33352:18;;33442:131;33352:18;33442:131;;33590:407;33781:2;33795:47;;;33766:18;;33856:131;33766:18;33856:131;;34004:407;34195:2;34209:47;;;34180:18;;34270:131;34180:18;34270:131;;34418:407;34609:2;34623:47;;;34594:18;;34684:131;34594:18;34684:131;;34832:407;35023:2;35037:47;;;35008:18;;35098:131;35008:18;35098:131;;35246:407;35437:2;35451:47;;;35422:18;;35512:131;35422:18;35512:131;;35660:407;35851:2;35865:47;;;35836:18;;35926:131;35836:18;35926:131;;36074:407;36265:2;36279:47;;;36250:18;;36340:131;36250:18;36340:131;;36488:407;36679:2;36693:47;;;36664:18;;36754:131;36664:18;36754:131;;36902:407;37093:2;37107:47;;;37078:18;;37168:131;37078:18;37168:131;;37316:407;37507:2;37521:47;;;37492:18;;37582:131;37492:18;37582:131;;37730:213;37848:2;37833:18;;37862:71;37837:9;37906:6;37862:71;;37950:209;38066:2;38051:18;;38080:69;38055:9;38122:6;38080:69;;38166:256;38228:2;38222:9;38254:17;;;38329:18;38314:34;;38350:22;;;38311:62;38308:2;;;38386:1;38383;38376:12;38308:2;38402;38395:22;38206:216;;-1:-1;38206:216;38429:321;;38572:18;38564:6;38561:30;38558:2;;;38604:1;38601;38594:12;38558:2;-1:-1;38735:4;38671;38648:17;;;;-1:-1;;38644:33;38725:15;;38495:255;39086:157;39216:4;39207:14;;39164:79;39408:143;39517:12;;39488:63;40321:184;40445:19;;;40494:4;40485:14;;40438:67;41512:91;;41574:24;41592:5;41574:24;;41610:85;41676:13;41669:21;;41652:43;41702:144;-1:-1;;;;;;41763:78;;41746:100;41853:84;41925:6;41914:18;;41897:40;41944:121;-1:-1;;;;;42006:54;;41989:76;42151:88;42223:10;42212:22;;42195:44;42246:92;42318:14;42307:26;;42290:48;42345:169;;42448:61;42503:5;42448:61;;42661:145;42742:6;42737:3;42732;42719:30;-1:-1;42798:1;42780:16;;42773:27;42712:94;42815:268;42880:1;42887:101;42901:6;42898:1;42895:13;42887:101;;;42968:11;;;42962:18;42949:11;;;42942:39;42923:2;42916:10;42887:101;;;43003:6;43000:1;42997:13;42994:2;;;-1:-1;;43068:1;43050:16;;43043:27;42864:219;43091:97;43179:2;43159:14;-1:-1;;43155:28;;43139:49;43196:117;43265:24;43283:5;43265:24;;;43258:5;43255:35;43245:2;;43304:1;43301;43294:12;43320:111;43386:21;43401:5;43386:21;;43438:115;43506:23;43523:5;43506:23;;43560:115;43628:23;43645:5;43628:23;;43682:117;43751:24;43769:5;43751:24;;43806:115;43874:23;43891:5;43874:23;;43928:115;43996:23;44013:5;43996:23;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2564
      ]
    },
    "id": 2565,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2508,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2509,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2510,
        "nodeType": "ImportDirective",
        "scope": 2565,
        "sourceUnit": 2355,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2511,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2354,
              "src": "876:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2354",
                "typeString": "contract ERC721"
              }
            },
            "id": 2512,
            "nodeType": "InheritanceSpecifier",
            "src": "876:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2354,
          2364,
          2467
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2564,
        "linearizedBaseContracts": [
          2564,
          2354,
          2467,
          142,
          2364
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2514,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2564,
            "src": "908:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2513,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2516,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2564,
            "src": "955:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2515,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "955:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2519,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2564,
            "src": "1244:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2517,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1244:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2518,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1300:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2546,
              "nodeType": "Block",
              "src": "1453:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2528,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2514,
                      "src": "1464:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2529,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2521,
                      "src": "1472:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2531,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2532,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2516,
                      "src": "1486:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2533,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2523,
                      "src": "1496:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1486:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2535,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2537,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2519,
                        "src": "1609:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2536,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1590:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2539,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2543,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2525,
                        "src": "1678:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2540,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2858,
                        "src": "1650:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2564",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 399,
                      "src": "1650:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2545,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2547,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2521,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "1379:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2520,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2523,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "1399:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2522,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2525,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "1421:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1378:67:8"
            },
            "returnParameters": {
              "id": 2527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:8"
            },
            "scope": 2564,
            "src": "1366:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2554,
              "nodeType": "Block",
              "src": "1861:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2552,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2514,
                    "src": "1878:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2551,
                  "id": 2553,
                  "nodeType": "Return",
                  "src": "1871:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:8"
            },
            "returnParameters": {
              "id": 2551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2550,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2555,
                  "src": "1846:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2549,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1845:15:8"
            },
            "scope": 2564,
            "src": "1807:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2562,
              "nodeType": "Block",
              "src": "2055:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2560,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2516,
                    "src": "2072:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2559,
                  "id": 2561,
                  "nodeType": "Return",
                  "src": "2065:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2563,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:2:8"
            },
            "returnParameters": {
              "id": 2559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2558,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "2040:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2557,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2039:15:8"
            },
            "scope": 2564,
            "src": "1999:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2565,
        "src": "850:1239:8"
      }
    ],
    "src": "0:2090:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2564
      ]
    },
    "id": 2565,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2508,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2509,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2510,
        "nodeType": "ImportDirective",
        "scope": 2565,
        "sourceUnit": 2355,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2511,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2354,
              "src": "876:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2354",
                "typeString": "contract ERC721"
              }
            },
            "id": 2512,
            "nodeType": "InheritanceSpecifier",
            "src": "876:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2354,
          2364,
          2467
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2564,
        "linearizedBaseContracts": [
          2564,
          2354,
          2467,
          142,
          2364
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2514,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2564,
            "src": "908:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2513,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2516,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2564,
            "src": "955:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2515,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "955:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2519,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2564,
            "src": "1244:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2517,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1244:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2518,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1300:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2546,
              "nodeType": "Block",
              "src": "1453:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2528,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2514,
                      "src": "1464:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2529,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2521,
                      "src": "1472:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2531,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2532,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2516,
                      "src": "1486:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2533,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2523,
                      "src": "1496:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1486:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2535,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2537,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2519,
                        "src": "1609:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2536,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1590:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2539,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2543,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2525,
                        "src": "1678:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2540,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2858,
                        "src": "1650:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2564",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 399,
                      "src": "1650:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2545,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2547,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2521,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "1379:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2520,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2523,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "1399:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2522,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2525,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "1421:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1378:67:8"
            },
            "returnParameters": {
              "id": 2527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:8"
            },
            "scope": 2564,
            "src": "1366:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2554,
              "nodeType": "Block",
              "src": "1861:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2552,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2514,
                    "src": "1878:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2551,
                  "id": 2553,
                  "nodeType": "Return",
                  "src": "1871:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:8"
            },
            "returnParameters": {
              "id": 2551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2550,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2555,
                  "src": "1846:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2549,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1845:15:8"
            },
            "scope": 2564,
            "src": "1807:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2562,
              "nodeType": "Block",
              "src": "2055:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2560,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2516,
                    "src": "2072:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2559,
                  "id": 2561,
                  "nodeType": "Return",
                  "src": "2065:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2563,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:2:8"
            },
            "returnParameters": {
              "id": 2559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2558,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2563,
                  "src": "2040:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2557,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2039:15:8"
            },
            "scope": 2564,
            "src": "1999:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2565,
        "src": "850:1239:8"
      }
    ],
    "src": "0:2090:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2020-01-21T00:40:07.209Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Customized for MicrosponsorsBurns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned"
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "mint(string,string,uint48,uint48,uint48,uint16,bool,uint32)": {
        "details": "Function to mint tokens.",
        "return": "tokenId"
      },
      "mintWithTokenURI(string,string,uint48,uint48,uint48,uint16,bool,uint32,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause minting and transfers."
      },
      "safeMint(string,string,uint48,uint48,uint48,uint16,bool,uint32)": {
        "details": "Function to safely mint tokens.",
        "return": "tokenId"
      },
      "safeMint(string,string,uint48,uint48,uint48,uint16,bool,uint32,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check."
        },
        "return": "tokenId"
      },
      "safeMintWithTokenURI(string,string,uint48,uint48,uint48,uint16,bool,uint32,string)": {
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations."
      },
      "tokenMinterPropertyNames(address,string)": {
        "details": "Look up all Property Names a Minter has created Time Slots for      with a particular Content ID"
      },
      "tokenURI(uint256)": {
        "params": {
          "tokenId": "uint256 ID of the token to query"
        },
        "return": "URI for a given token ID."
      },
      "tokensMintedBy(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time)."
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership1(address)": {
        "details": "Transfer owner (admin) functions to another address",
        "params": {
          "newOwner": "Address of new owner/ admin of contract"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause minting and transfers."
      },
      "updateMintFee(uint256)": {
        "details": "Update the fee (in wei) charged for minting a single token"
      },
      "updateRegistryAddress(address)": {
        "details": "Update contract address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      },
      "withdrawBalance()": {
        "details": "Admin withdraws entire balance from contract."
      }
    }
  },
  "userdoc": {
    "methods": {
      "tokenURI(uint256)": {
        "notice": "Throws if the token ID does not exist. May return an empty string."
      },
      "tokensMintedBy(address)": {
        "notice": "Return all the Token IDs minted by a given account."
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  }
}