{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenToFederationId",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokensMintedBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "enableGlobalResale",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        }
      ],
      "name": "tokenMinterPropertyNames",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "updateMintFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "safeMintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isGlobalResaleEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableGlobalResale",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenToFederationId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokensMintedBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableGlobalResale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"tokenMinterPropertyNames\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"updateMintFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isGlobalResaleEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableGlobalResale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Customized for MicrosponsorsBurns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned\"}},\"constructor\":{\"details\":\"Constructor function\"},\"disableGlobalResale()\":{\"details\":\"Called by contract owner to disable token tranfer (resale) by buyer.\"},\"enableGlobalResale()\":{\"details\":\"Called by contract owner to enable token transfer (resale) by buyer.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"mint(string,string,uint48,uint48,uint48,uint16,uint32)\":{\"details\":\"Function to mint tokens.\",\"return\":\"tokenId\"},\"mintWithTokenURI(string,string,uint48,uint48,uint48,uint16,uint32,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause minting and transfers.\"},\"safeMint(string,string,uint48,uint48,uint48,uint16,uint32)\":{\"details\":\"Function to safely mint tokens.\",\"return\":\"tokenId\"},\"safeMint(string,string,uint48,uint48,uint48,uint16,uint32,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\"},\"return\":\"tokenId\"},\"safeMintWithTokenURI(string,string,uint48,uint48,uint48,uint16,uint32,string)\":{\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations.\"},\"tokenMinterPropertyNames(address,string)\":{\"details\":\"Look up all Property Names a Minter has created Time Slots for      with a particular Content ID\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"uint256 ID of the token to query\"},\"return\":\"URI for a given token ID.\"},\"tokensMintedBy(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\"},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership1(address)\":{\"details\":\"Transfer owner (admin) functions to another address\",\"params\":{\"newOwner\":\"Address of new owner/ admin of contract\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause minting and transfers.\"},\"updateMintFee(uint256)\":{\"details\":\"Update the fee (in wei) charged for minting a single token\"},\"updateRegistryAddress(address)\":{\"details\":\"Update contract address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}},\"withdrawBalance()\":{\"details\":\"Admin withdraws entire balance from contract.\"}}},\"userdoc\":{\"methods\":{\"tokenURI(uint256)\":{\"notice\":\"Throws if the token ID does not exist. May return an empty string.\"},\"tokensMintedBy(address)\":{\"notice\":\"Return all the Token IDs minted by a given account.\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Copyright 2020 Niche Networks, Inc. (owns & operates Microsponsors.io) Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0xed92763e609841d87ad4f5a61a642b95f89e133b917d44049bc1a143aaa7d711\",\"urls\":[\"bzz-raw://c4d7df73735c1413bea1fa3f5fbc5ffc7e4f492c8daec4a839e2f6a9802dc537\",\"dweb:/ipfs/QmckqAWnmZUAG7H7tXoaApJPQpRR9hnaD3e36pwcrqEzCr\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0x1a017ef5e80bc16408e7e1fb7e25d7acaba18fb67edacf54e111fac987cd3bc8\",\"urls\":[\"bzz-raw://97e5aa2bff8bc111bc8ff4d2df17eb99a61cf09a2a27a2a3082f4c910f09e329\",\"dweb:/ipfs/QmbuNi56PTdAxcBr6YiQWzSrZM8mSqrD2YU5AeCkgmWPra\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "0x60806040526002805461ffff60a01b19169055655af3107a40006003553480156200002957600080fd5b5060405162004d6e38038062004d6e8339810160408190526200004c9162000400565b620000807f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b036200019016565b620000b47f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b036200019016565b620000c76001600160e01b036200023516565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000f162000235565b600280546001600160a01b0319166001600160a01b0392909216919091179055825162000126906010906020860190620002ef565b5081516200013c906011906020850190620002ef565b50620001717f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b036200019016565b62000187816200023a60201b62001f211760201c565b505050620005d4565b7fffffffff000000000000000000000000000000000000000000000000000000008082161415620001f8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ef90620004f9565b60405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b335b90565b6001546001600160a01b0316620002596001600160e01b036200023516565b6001600160a01b031614806200029457506002546001600160a01b0316620002896001600160e01b036200023516565b6001600160a01b0316145b620002cd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ef906200050b565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033257805160ff191683800117855562000362565b8280016001018555821562000362579182015b828111156200036257825182559160200191906001019062000345565b506200037092915062000374565b5090565b6200023791905b808211156200037057600081556001016200037b565b80516200039e81620005ba565b92915050565b600082601f830112620003b657600080fd5b8151620003cd620003c78262000544565b6200051d565b91508082526020830160208301858383011115620003ea57600080fd5b620003f783828462000587565b50505092915050565b6000806000606084860312156200041657600080fd5b83516001600160401b038111156200042d57600080fd5b6200043b86828701620003a4565b93505060208401516001600160401b038111156200045857600080fd5b6200046686828701620003a4565b9250506040620004798682870162000391565b9150509250925092565b600062000492601c836200056c565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000815260200192915050565b6000620004cd601b836200056c565b7f4552433732313a204f4e4c595f434f4e54524143545f4f574e45520000000000815260200192915050565b602080825281016200039e8162000483565b602080825281016200039e81620004be565b6040518181016001600160401b03811182821017156200053c57600080fd5b604052919050565b60006001600160401b038211156200055b57600080fd5b506020601f91909101601f19160190565b90815260200190565b60006001600160a01b0382166200039e565b60005b83811015620005a45781810151838201526020016200058a565b83811115620005b4576000848401525b50505050565b620005c58162000575565b8114620005d157600080fd5b50565b61478a80620005e46000396000f3fe6080604052600436106102465760003560e01c806363e1a83811610139578063a22cb465116100b6578063c57a88251161007a578063c57a882514610643578063c87b56dd14610663578063e2b375a914610683578063e5c24924146106a3578063e982d5a9146106d8578063e985e9c5146106f857610246565b8063a22cb465146105b9578063a4ede128146105d9578063a930fc73146105f9578063b06e2f9f1461060e578063b88d4fde1461062357610246565b806384017e52116100fd57806384017e521461053c5780638456cb591461055c5780638462151c1461057157806395d89b41146105915780639ce7dca3146105a657610246565b806363e1a838146104a557806370a08231146104b857806373688914146104d85780637affcb9a146104ed5780637b1039991461051a57610246565b80633d857187116101c7578063527097251161018b578063527097251461043157806357550b66146104465780635c975abb1461045b5780635fd8c710146104705780636352211e1461048557610246565b80633d857187146103b65780633f4ba83a146103c957806342842e0e146103de57806342966c68146103fe57806344c140d01461041e57610246565b8063180b9e3f1161020e578063180b9e3f1461031457806318160ddd146103415780631c7029811461035657806323b872dd146103695780632a0c77991461038957610246565b806301ffc9a71461024b57806306fdde0314610281578063081812fc146102a3578063095ea7b3146102d057806313966db5146102f2575b600080fd5b34801561025757600080fd5b5061026b610266366004613698565b610718565b60405161027891906143e1565b60405180910390f35b34801561028d57600080fd5b5061029661073b565b60405161027891906143fd565b3480156102af57600080fd5b506102c36102be366004613896565b6107d2565b60405161027891906142b1565b3480156102dc57600080fd5b506102f06102eb36600461364a565b61081e565b005b3480156102fe57600080fd5b506103076109bb565b60405161027891906145ee565b34801561032057600080fd5b5061033461032f366004613896565b6109c1565b60405161027891906145fc565b34801561034d57600080fd5b506103076109d9565b6103076103643660046136d4565b6109ea565b34801561037557600080fd5b506102f06103843660046134fe565b610b55565b34801561039557600080fd5b506103a96103a43660046134a6565b610d35565b60405161027891906143d0565b6103076103c436600461379f565b610e3d565b3480156103d557600080fd5b506102f0610fb3565b3480156103ea57600080fd5b506102f06103f93660046134fe565b611037565b34801561040a57600080fd5b506102f0610419366004613896565b611052565b61030761042c36600461379f565b61109c565b34801561043d57600080fd5b506102c36111d8565b34801561045257600080fd5b506102f06111e7565b34801561046757600080fd5b5061026b61125b565b34801561047c57600080fd5b506102f061126b565b34801561049157600080fd5b506102c36104a0366004613896565b611347565b6103076104b33660046136d4565b611362565b3480156104c457600080fd5b506103076104d33660046134a6565b611487565b3480156104e457600080fd5b506102c36114d6565b3480156104f957600080fd5b5061050d6105083660046135f4565b6114e5565b60405161027891906143bf565b34801561052657600080fd5b5061052f611687565b60405161027891906143ef565b34801561054857600080fd5b506102f0610557366004613896565b611696565b34801561056857600080fd5b506102f06116fa565b34801561057d57600080fd5b506103a961058c3660046134a6565b611785565b34801561059d57600080fd5b5061029661183f565b6103076105b436600461379f565b6118a0565b3480156105c557600080fd5b506102f06105d43660046135c4565b6119c5565b3480156105e557600080fd5b5061050d6105f43660046134a6565b611b4b565b34801561060557600080fd5b5061026b611cc1565b34801561061a57600080fd5b506102f0611cd1565b34801561062f57600080fd5b506102f061063e36600461354b565b611d3f565b34801561064f57600080fd5b506102f061065e3660046134a6565b611f21565b34801561066f57600080fd5b5061029661067e366004613896565b611fa2565b34801561068f57600080fd5b506102f061069e3660046134a6565b612068565b3480156106af57600080fd5b506106c36106be366004613896565b6120f6565b604051610278999897969594939291906142bf565b3480156106e457600080fd5b506102f06106f33660046134a6565b61233a565b34801561070457600080fd5b5061026b6107133660046134c4565b6123c8565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107c75780601f1061079c576101008083540402835291602001916107c7565b820191906000526020600020905b8154815290600101906020018083116107aa57829003601f168201915b505050505090505b90565b60006107dd826123f6565b6108025760405162461bcd60e51b81526004016107f9906144fe565b60405180910390fd5b506000908152600e60205260409020546001600160a01b031690565b6004546001600160a01b0316634039ad0d610837612413565b6040518263ffffffff1660e01b815260040161085391906142b1565b60206040518083038186803b15801561086b57600080fd5b505afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108a3919081019061367a565b6108bf5760405162461bcd60e51b81526004016107f99061450e565b600254600160a01b900460ff16156108d657600080fd5b60006108e182611347565b9050806001600160a01b0316836001600160a01b031614156109155760405162461bcd60e51b81526004016107f99061453e565b806001600160a01b0316610927612413565b6001600160a01b03161480610943575061094381610713612413565b61095f5760405162461bcd60e51b81526004016107f9906144de565b6000828152600e602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b60006109e56005612417565b905090565b6004546000906001600160a01b031663aa271e1a610a06612413565b6040518263ffffffff1660e01b8152600401610a2291906142b1565b60206040518083038186803b158015610a3a57600080fd5b505afa158015610a4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a72919081019061367a565b610a8e5760405162461bcd60e51b81526004016107f9906145ce565b600254600160a01b900460ff1615610aa557600080fd5b600354341015610ab457600080fd5b60008263ffffffff1611610ada5760405162461bcd60e51b81526004016107f99061451e565b610ae68887878761241b565b610b025760405162461bcd60e51b81526004016107f99061455e565b6000610b14610b0f612413565b612523565b9050610b25818a8a8a8a8a8a61253f565b6000818152600960205260409020805463ffffffff851663ffffffff199091161790559050979650505050505050565b600254600160a01b900460ff1615610b6c57600080fd5b6004805460405163f9ce6eab60e01b81526001600160a01b039091169163f9ce6eab91610b9f9187918791879101614353565b60206040518083038186803b158015610bb757600080fd5b505afa158015610bcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bef919081019061367a565b610c0b5760405162461bcd60e51b81526004016107f99061445e565b610c1c610c16612413565b826127ba565b610c385760405162461bcd60e51b81526004016107f99061454e565b600254600160a81b900460ff16610c7657610c54838383612837565b15610c715760405162461bcd60e51b81526004016107f9906144be565b610d25565b610c81838383612837565b15610d2557600480546040516360c1c90f60e11b81526001600160a01b039091169163c183921e91610cb99187918791879101614353565b60206040518083038186803b158015610cd157600080fd5b505afa158015610ce5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d09919081019061367a565b610d255760405162461bcd60e51b81526004016107f9906145de565b610d30838383612a17565b505050565b60606001600160a01b038216610d5d5760405162461bcd60e51b81526004016107f99061443e565b6001600160a01b0382166000908152600860205260408120610d7e90612417565b905080610da05760408051600080825260208201909252905b50915050610736565b606081604051908082528060200260200182016040528015610dcc578160200160208202803883390190505b5090506000610dd96109d9565b9050600060015b828111610e30576000818152600a60205260409020546001600160a01b0388811691161415610e285780848381518110610e1657fe5b60209081029190910101526001909101905b600101610de0565b8395505050505050610736565b6004546000906001600160a01b031663aa271e1a610e59612413565b6040518263ffffffff1660e01b8152600401610e7591906142b1565b60206040518083038186803b158015610e8d57600080fd5b505afa158015610ea1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ec5919081019061367a565b610ee15760405162461bcd60e51b81526004016107f9906145ce565b600254600160a01b900460ff1615610ef857600080fd5b600354341015610f0757600080fd5b60008363ffffffff1611610f2d5760405162461bcd60e51b81526004016107f99061451e565b610f398988888861241b565b610f555760405162461bcd60e51b81526004016107f99061455e565b6000610f67610f62612413565b612b1d565b9050610f78818b8b8b8b8b8b61253f565b610f828184612bfc565b6000818152600960205260409020805463ffffffff861663ffffffff19909116179055905098975050505050505050565b6001546001600160a01b0316610fc7612413565b6001600160a01b03161480610ff657506002546001600160a01b0316610feb612413565b6001600160a01b0316145b6110125760405162461bcd60e51b81526004016107f9906144ce565b600254600160a01b900460ff1661102857600080fd5b6002805460ff60a01b19169055565b610d3083838360405180602001604052806000815250611d3f565b600254600160a01b900460ff161561106957600080fd5b611074610c16612413565b6110905760405162461bcd60e51b81526004016107f9906145ae565b61109981612c40565b50565b6004546000906001600160a01b031663aa271e1a6110b8612413565b6040518263ffffffff1660e01b81526004016110d491906142b1565b60206040518083038186803b1580156110ec57600080fd5b505afa158015611100573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611124919081019061367a565b6111405760405162461bcd60e51b81526004016107f9906145ce565b600254600160a01b900460ff161561115757600080fd5b60035434101561116657600080fd5b60008363ffffffff161161118c5760405162461bcd60e51b81526004016107f99061451e565b6111988988888861241b565b6111b45760405162461bcd60e51b81526004016107f99061455e565b60006111c76111c1612413565b84612c52565b9050610f82818b8b8b8b8b8b61253f565b6002546001600160a01b031681565b6001546001600160a01b03166111fb612413565b6001600160a01b0316148061122a57506002546001600160a01b031661121f612413565b6001600160a01b0316145b6112465760405162461bcd60e51b81526004016107f9906144ce565b6002805460ff60a81b1916600160a81b179055565b600254600160a01b900460ff1681565b6001546001600160a01b031661127f612413565b6001600160a01b031614806112ae57506002546001600160a01b03166112a3612413565b6001600160a01b0316145b6112ca5760405162461bcd60e51b81526004016107f9906144ce565b604051303190600090339083906112e0906142a6565b60006040518083038185875af1925050503d806000811461131d576040519150601f19603f3d011682016040523d82523d6000602084013e611322565b606091505b50509050806113435760405162461bcd60e51b81526004016107f99061442e565b5050565b6000908152600660205260409020546001600160a01b031690565b6004546000906001600160a01b031663aa271e1a61137e612413565b6040518263ffffffff1660e01b815260040161139a91906142b1565b60206040518083038186803b1580156113b257600080fd5b505afa1580156113c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113ea919081019061367a565b6114065760405162461bcd60e51b81526004016107f9906145ce565b600254600160a01b900460ff161561141d57600080fd5b60035434101561142c57600080fd5b60008263ffffffff16116114525760405162461bcd60e51b81526004016107f99061451e565b61145e8887878761241b565b61147a5760405162461bcd60e51b81526004016107f99061455e565b6000610b14610f62612413565b60006001600160a01b0382166114af5760405162461bcd60e51b81526004016107f99061443e565b6001600160a01b03821660009081526007602052604090206114d090612417565b92915050565b6001546001600160a01b031681565b6001600160a01b0383166000908152600b60205260409081902090516060918291611513908690869061428d565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156115f857600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156115e05780601f106115b5576101008083540402835291602001916115e0565b820191906000526020600020905b8154815290600101906020018083116115c357829003601f168201915b50505050508152505081526020019060010190611541565b5050505090506060815160405190808252806020026020018201604052801561163557816020015b60608152602001906001900390816116205790505b50905060005b825181101561167b5782818151811061165057fe5b60200260200101516000015182828151811061166857fe5b602090810291909101015260010161163b565b509150505b9392505050565b6004546001600160a01b031681565b6001546001600160a01b03166116aa612413565b6001600160a01b031614806116d957506002546001600160a01b03166116ce612413565b6001600160a01b0316145b6116f55760405162461bcd60e51b81526004016107f9906144ce565b600355565b6001546001600160a01b031661170e612413565b6001600160a01b0316148061173d57506002546001600160a01b0316611732612413565b6001600160a01b0316145b6117595760405162461bcd60e51b81526004016107f9906144ce565b600254600160a01b900460ff161561177057600080fd5b6002805460ff60a01b1916600160a01b179055565b6060600061179283611487565b9050806117af576040805160008082526020820190925290610d97565b6060816040519080825280602002602001820160405280156117db578160200160208202803883390190505b50905060006117e86109d9565b9050600060015b828111610e30576000818152600660205260409020546001600160a01b0388811691161415611837578084838151811061182557fe5b60209081029190910101526001909101905b6001016117ef565b60118054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107c75780601f1061079c576101008083540402835291602001916107c7565b6004546000906001600160a01b031663aa271e1a6118bc612413565b6040518263ffffffff1660e01b81526004016118d891906142b1565b60206040518083038186803b1580156118f057600080fd5b505afa158015611904573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611928919081019061367a565b6119445760405162461bcd60e51b81526004016107f9906145ce565b600254600160a01b900460ff161561195b57600080fd5b60035434101561196a57600080fd5b60008363ffffffff16116119905760405162461bcd60e51b81526004016107f99061451e565b61199c8988888861241b565b6119b85760405162461bcd60e51b81526004016107f99061455e565b6000610f67610b0f612413565b6004546001600160a01b0316634039ad0d6119de612413565b6040518263ffffffff1660e01b81526004016119fa91906142b1565b60206040518083038186803b158015611a1257600080fd5b505afa158015611a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a4a919081019061367a565b611a665760405162461bcd60e51b81526004016107f99061450e565b600254600160a01b900460ff1615611a7d57600080fd5b611a85612413565b6001600160a01b0316826001600160a01b03161415611ab65760405162461bcd60e51b81526004016107f99061447e565b80600f6000611ac3612413565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611b07612413565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611b3f91906143e1565b60405180910390a35050565b6001600160a01b0381166000908152600c602090815260408083208054825181850281018501909352808352606094859484015b82821015611c3657600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015611c1e5780601f10611bf357610100808354040283529160200191611c1e565b820191906000526020600020905b815481529060010190602001808311611c0157829003601f168201915b50505050508152505081526020019060010190611b7f565b50505050905060608151604051908082528060200260200182016040528015611c7357816020015b6060815260200190600190039081611c5e5790505b50905060005b8251811015611cb957828181518110611c8e57fe5b602002602001015160000151828281518110611ca657fe5b6020908102919091010152600101611c79565b509392505050565b600254600160a81b900460ff1681565b6001546001600160a01b0316611ce5612413565b6001600160a01b03161480611d1457506002546001600160a01b0316611d09612413565b6001600160a01b0316145b611d305760405162461bcd60e51b81526004016107f9906144ce565b6002805460ff60a81b19169055565b600254600160a01b900460ff1615611d5657600080fd5b6004805460405163f9ce6eab60e01b81526001600160a01b039091169163f9ce6eab91611d899188918891889101614353565b60206040518083038186803b158015611da157600080fd5b505afa158015611db5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611dd9919081019061367a565b611df55760405162461bcd60e51b81526004016107f99061459e565b611e06611e00612413565b836127ba565b611e225760405162461bcd60e51b81526004016107f99061454e565b600254600160a81b900460ff16611e6057611e3e848484612837565b15611e5b5760405162461bcd60e51b81526004016107f9906144be565b611f0f565b611e6b848484612837565b15611f0f57600480546040516360c1c90f60e11b81526001600160a01b039091169163c183921e91611ea39188918891889101614353565b60206040518083038186803b158015611ebb57600080fd5b505afa158015611ecf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ef3919081019061367a565b611f0f5760405162461bcd60e51b81526004016107f9906145de565b611f1b84848484612c89565b50505050565b6001546001600160a01b0316611f35612413565b6001600160a01b03161480611f6457506002546001600160a01b0316611f59612413565b6001600160a01b0316145b611f805760405162461bcd60e51b81526004016107f9906144ce565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6060611fad826123f6565b611fc95760405162461bcd60e51b81526004016107f9906145be565b6000828152600d602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909183018282801561205c5780601f106120315761010080835404028352916020019161205c565b820191906000526020600020905b81548152906001019060200180831161203f57829003601f168201915b50505050509050919050565b6001546001600160a01b031661207c612413565b6001600160a01b031614806120ab57506002546001600160a01b03166120a0612413565b6001600160a01b0316145b6120c75760405162461bcd60e51b81526004016107f9906144ce565b6001600160a01b0381161561109957600280546001600160a01b0383166001600160a01b031990911617905550565b600080606080600080600080600061210d8a6123f6565b6121295760405162461bcd60e51b81526004016107f99061440e565b612131613291565b60008b8152600a6020908152604091829020825160e08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f81018690048602830186019096528582529194929385810193919291908301828280156121e95780601f106121be576101008083540402835291602001916121e9565b820191906000526020600020905b8154815290600101906020018083116121cc57829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f8101839004830285018301909152808452938101939083018282801561227b5780601f106122505761010080835404028352916020019161227b565b820191906000526020600020905b81548152906001019060200180831161225e57829003601f168201915b50505091835250506003919091015465ffffffffffff808216602080850191909152600160301b83048216604080860191909152600160601b84049092166060850152600160901b90920461ffff1660809093019290925260008e815260099091522054815191925063ffffffff16906122f48d611347565b83602001518460400151856060015186608001518760a001518860c00151888696508595509a509a509a509a509a509a509a509a509a5050509193959799909294969850565b6001546001600160a01b031661234e612413565b6001600160a01b0316148061237d57506002546001600160a01b0316612372612413565b6001600160a01b0316145b6123995760405162461bcd60e51b81526004016107f9906144ce565b6001600160a01b0381161561109957600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600f6020908152604080832093909416825291909152205460ff1690565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b600480546040516323dd3a3d60e11b81526000926001600160a01b03909216916347ba747a9161244d918991016143fd565b60206040518083038186803b15801561246557600080fd5b505afa158015612479573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061249d919081019061367a565b6124b95760405162461bcd60e51b81526004016107f9906144ae565b8165ffffffffffff168465ffffffffffff16116124e85760405162461bcd60e51b81526004016107f99061448e565b8365ffffffffffff168365ffffffffffff16116125175760405162461bcd60e51b81526004016107f99061444e565b5060015b949350505050565b6000806116808360405180602001604052806000815250612c52565b612548876123f6565b6125645760405162461bcd60e51b81526004016107f99061458e565b61256c613291565b6040518060e0016040528061257f612413565b6001600160a01b03908116825260208083018b905260408084018b905265ffffffffffff8a811660608601528981166080860152881660a085015261ffff871660c09094019390935260008c8152600a825292909220835181546001600160a01b03191692169190911781558282015180519394508493919261260a926001850192909101906132ce565b50604082015180516126269160028401916020909101906132ce565b50606082015160039091018054608084015160a085015160c09095015161ffff16600160901b0261ffff60901b1965ffffffffffff968716600160601b0265ffffffffffff60601b19938816600160301b026bffffffffffff000000000000199890971665ffffffffffff199095169490941796909616949094171617929092161790556126b387612cbc565b61271c57600c60006126c3612413565b6001600160a01b031681526020808201929092526040908101600090812082518085019093528a835280546001810180835591835291849020835180519295919093019261271792849291909101906132ce565b505050505b6127268787612de7565b6127b057600b6000612736612413565b6001600160a01b03166001600160a01b0316815260200190815260200160002087604051612764919061429a565b9081526040805191829003602090810183208382019092528883528154600181018084556000938452928290208451805194959491909201926127ab9284929101906132ce565b505050505b5050505050505050565b60006127c5826123f6565b6127e15760405162461bcd60e51b81526004016107f99061449e565b60006127ec83611347565b9050806001600160a01b0316846001600160a01b031614806128275750836001600160a01b031661281c846107d2565b6001600160a01b0316145b8061251b575061251b81856123c8565b6000612841613291565b6000838152600a6020908152604091829020825160e08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f81018690048602830186019096528582529194929385810193919291908301828280156128f95780601f106128ce576101008083540402835291602001916128f9565b820191906000526020600020905b8154815290600101906020018083116128dc57829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f8101839004830285018301909152808452938101939083018282801561298b5780601f106129605761010080835404028352916020019161298b565b820191906000526020600020905b81548152906001019060200180831161296e57829003601f168201915b50505091835250506003919091015465ffffffffffff8082166020840152600160301b820481166040840152600160601b820416606083015261ffff600160901b9091041660809091015280519091506001600160a01b03868116911614156129f8576000915050611680565b80516001600160a01b0385811691161415612517576000915050611680565b826001600160a01b0316612a2a82611347565b6001600160a01b031614612a505760405162461bcd60e51b81526004016107f99061452e565b6001600160a01b038216612a765760405162461bcd60e51b81526004016107f99061446e565b612a7f81612f2e565b6001600160a01b0383166000908152600760205260409020612aa090612f69565b6001600160a01b0382166000908152600760205260409020612ac190612f80565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006001600160a01b038216612b455760405162461bcd60e51b81526004016107f9906144ee565b612b4f6005612f80565b6000612b5b6005612417565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b038916908117909155835260079091529020909150612b9d90612f80565b6001600160a01b0383166000908152600860205260409020612bbe90612f80565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b612c05826123f6565b612c215760405162461bcd60e51b81526004016107f99061457e565b6000828152600d602090815260409091208251610d30928401906132ce565b611099612c4c82611347565b82612f89565b600080612c5e84612b1d565b9050612c6d60008583866130c8565b6116805760405162461bcd60e51b81526004016107f99061441e565b612c94848484612a17565b612ca0848484846130c8565b611f1b5760405162461bcd60e51b81526004016107f99061441e565b336000908152600c602090815260408083208054825181850281018501909352808352606093859084015b82821015612d9e57600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612d865780601f10612d5b57610100808354040283529160200191612d86565b820191906000526020600020905b815481529060010190602001808311612d6957829003601f168201915b50505050508152505081526020019060010190612ce7565b5092935060009250829150505b8251811015611cb957612dd585848381518110612dc457fe5b602002602001015160000151613193565b15612ddf57600191505b600101612dab565b336000908152600b6020526040808220905160609190612e0890869061429a565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015612eed57600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612ed55780601f10612eaa57610100808354040283529160200191612ed5565b820191906000526020600020905b815481529060010190602001808311612eb857829003601f168201915b50505050508152505081526020019060010190612e36565b5092935060009250829150505b8251811015612f2557612f1385848381518110612dc457fe5b15612f1d57600191505b600101612efa565b50949350505050565b6000818152600e60205260409020546001600160a01b031615611099576000908152600e6020526040902080546001600160a01b0319169055565b8054612f7c90600163ffffffff6131ec16565b9055565b80546001019055565b816001600160a01b0316612f9c82611347565b6001600160a01b031614612fc25760405162461bcd60e51b81526004016107f99061456e565b612fcb81612f2e565b6001600160a01b0382166000908152600760205260409020612fec90612f69565b600081815260066020908152604080832080546001600160a01b0319169055600d9091529020546002600019600183161561010002019091160415613042576000818152600d602052604081206130429161334c565b6000818152600a6020526040812080546001600160a01b03191681559061306c600183018261334c565b61307a60028301600061334c565b5060030180546001600160a01b031916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006130dc846001600160a01b031661322e565b6130e85750600161251b565b6000846001600160a01b031663150b7a02613101612413565b8887876040518563ffffffff1660e01b8152600401613123949392919061437b565b602060405180830381600087803b15801561313d57600080fd5b505af1158015613151573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061317591908101906136b6565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b6000816040516020016131a6919061429a565b60405160208183030381529060405280519060200120836040516020016131cd919061429a565b6040516020818303038152906040528051906020012014905092915050565b600061168083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613265565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470811580159061251b5750141592915050565b600081848411156132895760405162461bcd60e51b81526004016107f991906143fd565b505050900390565b6040805160e08101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061330f57805160ff191683800117855561333c565b8280016001018555821561333c579182015b8281111561333c578251825591602001919060010190613321565b5061334892915061338c565b5090565b50805460018160011615610100020316600290046000825580601f106133725750611099565b601f01602090049060005260206000209081019061109991905b6107cf91905b808211156133485760008155600101613392565b80356114d0816146fd565b80356114d081614711565b80516114d081614711565b80356114d08161471a565b80516114d08161471a565b600082601f8301126133ee57600080fd5b81356134016133fc82614631565b61460a565b9150808252602083016020830185838301111561341d57600080fd5b6134288382846146bb565b50505092915050565b60008083601f84011261344357600080fd5b50813567ffffffffffffffff81111561345b57600080fd5b60208301915083600182028301111561347357600080fd5b9250929050565b80356114d081614723565b80356114d08161472c565b80356114d081614735565b80356114d08161473e565b6000602082840312156134b857600080fd5b600061251b84846133a6565b600080604083850312156134d757600080fd5b60006134e385856133a6565b92505060206134f4858286016133a6565b9150509250929050565b60008060006060848603121561351357600080fd5b600061351f86866133a6565b9350506020613530868287016133a6565b925050604061354186828701613485565b9150509250925092565b6000806000806080858703121561356157600080fd5b600061356d87876133a6565b945050602061357e878288016133a6565b935050604061358f87828801613485565b925050606085013567ffffffffffffffff8111156135ac57600080fd5b6135b8878288016133dd565b91505092959194509250565b600080604083850312156135d757600080fd5b60006135e385856133a6565b92505060206134f4858286016133b1565b60008060006040848603121561360957600080fd5b600061361586866133a6565b935050602084013567ffffffffffffffff81111561363257600080fd5b61363e86828701613431565b92509250509250925092565b6000806040838503121561365d57600080fd5b600061366985856133a6565b92505060206134f485828601613485565b60006020828403121561368c57600080fd5b600061251b84846133bc565b6000602082840312156136aa57600080fd5b600061251b84846133c7565b6000602082840312156136c857600080fd5b600061251b84846133d2565b600080600080600080600060e0888a0312156136ef57600080fd5b873567ffffffffffffffff81111561370657600080fd5b6137128a828b016133dd565b975050602088013567ffffffffffffffff81111561372f57600080fd5b61373b8a828b016133dd565b965050604061374c8a828b0161349b565b955050606061375d8a828b0161349b565b945050608061376e8a828b0161349b565b93505060a061377f8a828b0161347a565b92505060c06137908a828b01613490565b91505092959891949750929550565b600080600080600080600080610100898b0312156137bc57600080fd5b883567ffffffffffffffff8111156137d357600080fd5b6137df8b828c016133dd565b985050602089013567ffffffffffffffff8111156137fc57600080fd5b6138088b828c016133dd565b97505060406138198b828c0161349b565b965050606061382a8b828c0161349b565b955050608061383b8b828c0161349b565b94505060a061384c8b828c0161347a565b93505060c061385d8b828c01613490565b92505060e089013567ffffffffffffffff81111561387a57600080fd5b6138868b828c016133dd565b9150509295985092959890939650565b6000602082840312156138a857600080fd5b600061251b8484613485565b600061168083836139b3565b60006138cc8383614272565b505060200190565b6138dd8161466c565b82525050565b60006138ee8261465f565b6138f88185614663565b93508360208202850161390a85614659565b8060005b85811015613944578484038952815161392785826138b4565b945061393283614659565b60209a909a019992505060010161390e565b5091979650505050505050565b600061395c8261465f565b6139668185614663565b935061397183614659565b8060005b8381101561399f57815161398988826138c0565b975061399483614659565b925050600101613975565b509495945050505050565b6138dd81614677565b60006139be8261465f565b6139c88185614663565b93506139d88185602086016146c7565b6139e1816146f3565b9093019392505050565b6138dd816146b0565b6000613a008385610736565b9350613a0d8385846146bb565b50500190565b6000613a1e8261465f565b613a288185610736565b9350613a388185602086016146c7565b9290920192915050565b6000613a4f601d83614663565b7f4552433732313a204e6f6e2d6578697374656e7420546f6b656e204944000000815260200192915050565b6000613a88603283614663565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b602082015260400192915050565b6000613adc600f83614663565b6e15da5d1a191c985dc819985a5b1959608a1b815260200192915050565b6000613b07602583614663565b7f4552433732313a2063616e6e6f7420717565727920746865207a65726f206164815264647265737360d81b602082015260400192915050565b6000613b4e602a83614663565b7f4552433732313a2073746172742074696d65206d757374206265206265666f728152696520656e642074696d6560b01b602082015260400192915050565b6000613b9a601c83614663565b7f4552433732313a20756e6174686f72697a6564207472616e7366657200000000815260200192915050565b6000613bd3602483614663565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b602082015260400192915050565b6000613c19601983614663565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000815260200192915050565b6000613c52603583614663565b7f4552433732313a2073746172742074696d65206d757374206265206166746572815274206974732061756374696f6e20656e642074696d6560581b602082015260400192915050565b6000613ca9602c83614663565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b6000613cf7602e83614663565b7f4552433732313a20636f6e74656e74206964206973206e6f742072656769737481526d32b932b2103a379031b0b63632b960911b602082015260400192915050565b6000613d47602f83614663565b7f4552433732313a20746f6b656e20726573616c6520697320726573747269637481526e656420617420746869732074696d6560881b602082015260400192915050565b6000613d98601b83614663565b7f4552433732313a204f4e4c595f434f4e54524143545f4f574e45520000000000815260200192915050565b6000613dd1603e83614663565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f81527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015260400192915050565b6000613e30602083614663565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373815260200192915050565b6000613e69602c83614663565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b6000613eb7603483614663565b7f4552433732313a2063616c6c6572206973206e6f7420617574686f72697a656481527320666f72207468652054726164657220726f6c6560601b602082015260400192915050565b6000613f0d601583614663565b741253959053125117d19151115490551253d397d251605a1b815260200192915050565b6000613f3e602983614663565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981526839903737ba1037bbb760b91b602082015260400192915050565b6000613f89601d83614663565b7f4552433732313a20617070726f76616c20697320726564756e64616e74000000815260200192915050565b60006114d0600083610736565b6000613fcf603183614663565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f8152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b602082015260400192915050565b6000614022601183614663565b701253959053125117d512535157d4d313d5607a1b815260200192915050565b600061404f602583614663565b7f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f8152643a1037bbb760d91b602082015260400192915050565b6000614096602483614663565b7f4552433732313a2055524920736574206f66206e6f6e6578697374656e74207481526337b5b2b760e11b602082015260400192915050565b60006140dc601a83614663565b7f4552433732313a206e6f6e2d6578697374656e7420746f6b656e000000000000815260200192915050565b6000614115601d83614663565b7f4552433732313a20756e617574686f72697a6564207472616e73666572000000815260200192915050565b600061414e602e83614663565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6581526d1c881b9bdc88185c1c1c9bdd995960921b602082015260400192915050565b600061419e602783614663565b7f4552433732313a2055524920717565727920666f72206e6f6e6578697374656e8152663a103a37b5b2b760c91b602082015260400192915050565b60006141e7603483614663565b7f4552433732313a2063616c6c6572206973206e6f7420617574686f72697a656481527320666f7220746865204d696e74657220726f6c6560601b602082015260400192915050565b600061423d601b83614663565b7f4552433732313a20756e617574686f72697a656420726573616c650000000000815260200192915050565b6138dd81614689565b6138dd816107cf565b6138dd8161469c565b6138dd816146a5565b600061251b8284866139f4565b60006116808284613a13565b60006114d082613fb5565b602081016114d082846138d4565b61012081016142ce828c6138d4565b6142db602083018b6138d4565b81810360408301526142ed818a6139b3565b9050818103606083015261430181896139b3565b90506143106080830188614284565b61431d60a0830187614284565b61432a60c0830186614284565b61433760e0830185614269565b61434561010083018461427b565b9a9950505050505050505050565b6060810161436182866138d4565b61436e60208301856138d4565b61251b6040830184614272565b6080810161438982876138d4565b61439660208301866138d4565b6143a36040830185614272565b81810360608301526143b581846139b3565b9695505050505050565b6020808252810161168081846138e3565b602080825281016116808184613951565b602081016114d082846139aa565b602081016114d082846139eb565b6020808252810161168081846139b3565b602080825281016114d081613a42565b602080825281016114d081613a7b565b602080825281016114d081613acf565b602080825281016114d081613afa565b602080825281016114d081613b41565b602080825281016114d081613b8d565b602080825281016114d081613bc6565b602080825281016114d081613c0c565b602080825281016114d081613c45565b602080825281016114d081613c9c565b602080825281016114d081613cea565b602080825281016114d081613d3a565b602080825281016114d081613d8b565b602080825281016114d081613dc4565b602080825281016114d081613e23565b602080825281016114d081613e5c565b602080825281016114d081613eaa565b602080825281016114d081613f00565b602080825281016114d081613f31565b602080825281016114d081613f7c565b602080825281016114d081613fc2565b602080825281016114d081614015565b602080825281016114d081614042565b602080825281016114d081614089565b602080825281016114d0816140cf565b602080825281016114d081614108565b602080825281016114d081614141565b602080825281016114d081614191565b602080825281016114d0816141da565b602080825281016114d081614230565b602081016114d08284614272565b602081016114d0828461427b565b60405181810167ffffffffffffffff8111828210171561462957600080fd5b604052919050565b600067ffffffffffffffff82111561464857600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b60006114d082614690565b151590565b6001600160e01b03191690565b61ffff1690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b60006114d08261466c565b82818337506000910152565b60005b838110156146e25781810151838201526020016146ca565b83811115611f1b5750506000910152565b601f01601f191690565b6147068161466c565b811461109957600080fd5b61470681614677565b6147068161467c565b61470681614689565b614706816107cf565b6147068161469c565b614706816146a556fea365627a7a7231582031c5f9051b0ed13c10576549825d5dc1f01d4b55204482918eb54a66e3a520ff6c6578706572696d656e74616cf564736f6c634300050b0040",
  "deployedBytecode": "0x6080604052600436106102465760003560e01c806363e1a83811610139578063a22cb465116100b6578063c57a88251161007a578063c57a882514610643578063c87b56dd14610663578063e2b375a914610683578063e5c24924146106a3578063e982d5a9146106d8578063e985e9c5146106f857610246565b8063a22cb465146105b9578063a4ede128146105d9578063a930fc73146105f9578063b06e2f9f1461060e578063b88d4fde1461062357610246565b806384017e52116100fd57806384017e521461053c5780638456cb591461055c5780638462151c1461057157806395d89b41146105915780639ce7dca3146105a657610246565b806363e1a838146104a557806370a08231146104b857806373688914146104d85780637affcb9a146104ed5780637b1039991461051a57610246565b80633d857187116101c7578063527097251161018b578063527097251461043157806357550b66146104465780635c975abb1461045b5780635fd8c710146104705780636352211e1461048557610246565b80633d857187146103b65780633f4ba83a146103c957806342842e0e146103de57806342966c68146103fe57806344c140d01461041e57610246565b8063180b9e3f1161020e578063180b9e3f1461031457806318160ddd146103415780631c7029811461035657806323b872dd146103695780632a0c77991461038957610246565b806301ffc9a71461024b57806306fdde0314610281578063081812fc146102a3578063095ea7b3146102d057806313966db5146102f2575b600080fd5b34801561025757600080fd5b5061026b610266366004613698565b610718565b60405161027891906143e1565b60405180910390f35b34801561028d57600080fd5b5061029661073b565b60405161027891906143fd565b3480156102af57600080fd5b506102c36102be366004613896565b6107d2565b60405161027891906142b1565b3480156102dc57600080fd5b506102f06102eb36600461364a565b61081e565b005b3480156102fe57600080fd5b506103076109bb565b60405161027891906145ee565b34801561032057600080fd5b5061033461032f366004613896565b6109c1565b60405161027891906145fc565b34801561034d57600080fd5b506103076109d9565b6103076103643660046136d4565b6109ea565b34801561037557600080fd5b506102f06103843660046134fe565b610b55565b34801561039557600080fd5b506103a96103a43660046134a6565b610d35565b60405161027891906143d0565b6103076103c436600461379f565b610e3d565b3480156103d557600080fd5b506102f0610fb3565b3480156103ea57600080fd5b506102f06103f93660046134fe565b611037565b34801561040a57600080fd5b506102f0610419366004613896565b611052565b61030761042c36600461379f565b61109c565b34801561043d57600080fd5b506102c36111d8565b34801561045257600080fd5b506102f06111e7565b34801561046757600080fd5b5061026b61125b565b34801561047c57600080fd5b506102f061126b565b34801561049157600080fd5b506102c36104a0366004613896565b611347565b6103076104b33660046136d4565b611362565b3480156104c457600080fd5b506103076104d33660046134a6565b611487565b3480156104e457600080fd5b506102c36114d6565b3480156104f957600080fd5b5061050d6105083660046135f4565b6114e5565b60405161027891906143bf565b34801561052657600080fd5b5061052f611687565b60405161027891906143ef565b34801561054857600080fd5b506102f0610557366004613896565b611696565b34801561056857600080fd5b506102f06116fa565b34801561057d57600080fd5b506103a961058c3660046134a6565b611785565b34801561059d57600080fd5b5061029661183f565b6103076105b436600461379f565b6118a0565b3480156105c557600080fd5b506102f06105d43660046135c4565b6119c5565b3480156105e557600080fd5b5061050d6105f43660046134a6565b611b4b565b34801561060557600080fd5b5061026b611cc1565b34801561061a57600080fd5b506102f0611cd1565b34801561062f57600080fd5b506102f061063e36600461354b565b611d3f565b34801561064f57600080fd5b506102f061065e3660046134a6565b611f21565b34801561066f57600080fd5b5061029661067e366004613896565b611fa2565b34801561068f57600080fd5b506102f061069e3660046134a6565b612068565b3480156106af57600080fd5b506106c36106be366004613896565b6120f6565b604051610278999897969594939291906142bf565b3480156106e457600080fd5b506102f06106f33660046134a6565b61233a565b34801561070457600080fd5b5061026b6107133660046134c4565b6123c8565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107c75780601f1061079c576101008083540402835291602001916107c7565b820191906000526020600020905b8154815290600101906020018083116107aa57829003601f168201915b505050505090505b90565b60006107dd826123f6565b6108025760405162461bcd60e51b81526004016107f9906144fe565b60405180910390fd5b506000908152600e60205260409020546001600160a01b031690565b6004546001600160a01b0316634039ad0d610837612413565b6040518263ffffffff1660e01b815260040161085391906142b1565b60206040518083038186803b15801561086b57600080fd5b505afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108a3919081019061367a565b6108bf5760405162461bcd60e51b81526004016107f99061450e565b600254600160a01b900460ff16156108d657600080fd5b60006108e182611347565b9050806001600160a01b0316836001600160a01b031614156109155760405162461bcd60e51b81526004016107f99061453e565b806001600160a01b0316610927612413565b6001600160a01b03161480610943575061094381610713612413565b61095f5760405162461bcd60e51b81526004016107f9906144de565b6000828152600e602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b60006109e56005612417565b905090565b6004546000906001600160a01b031663aa271e1a610a06612413565b6040518263ffffffff1660e01b8152600401610a2291906142b1565b60206040518083038186803b158015610a3a57600080fd5b505afa158015610a4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a72919081019061367a565b610a8e5760405162461bcd60e51b81526004016107f9906145ce565b600254600160a01b900460ff1615610aa557600080fd5b600354341015610ab457600080fd5b60008263ffffffff1611610ada5760405162461bcd60e51b81526004016107f99061451e565b610ae68887878761241b565b610b025760405162461bcd60e51b81526004016107f99061455e565b6000610b14610b0f612413565b612523565b9050610b25818a8a8a8a8a8a61253f565b6000818152600960205260409020805463ffffffff851663ffffffff199091161790559050979650505050505050565b600254600160a01b900460ff1615610b6c57600080fd5b6004805460405163f9ce6eab60e01b81526001600160a01b039091169163f9ce6eab91610b9f9187918791879101614353565b60206040518083038186803b158015610bb757600080fd5b505afa158015610bcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bef919081019061367a565b610c0b5760405162461bcd60e51b81526004016107f99061445e565b610c1c610c16612413565b826127ba565b610c385760405162461bcd60e51b81526004016107f99061454e565b600254600160a81b900460ff16610c7657610c54838383612837565b15610c715760405162461bcd60e51b81526004016107f9906144be565b610d25565b610c81838383612837565b15610d2557600480546040516360c1c90f60e11b81526001600160a01b039091169163c183921e91610cb99187918791879101614353565b60206040518083038186803b158015610cd157600080fd5b505afa158015610ce5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d09919081019061367a565b610d255760405162461bcd60e51b81526004016107f9906145de565b610d30838383612a17565b505050565b60606001600160a01b038216610d5d5760405162461bcd60e51b81526004016107f99061443e565b6001600160a01b0382166000908152600860205260408120610d7e90612417565b905080610da05760408051600080825260208201909252905b50915050610736565b606081604051908082528060200260200182016040528015610dcc578160200160208202803883390190505b5090506000610dd96109d9565b9050600060015b828111610e30576000818152600a60205260409020546001600160a01b0388811691161415610e285780848381518110610e1657fe5b60209081029190910101526001909101905b600101610de0565b8395505050505050610736565b6004546000906001600160a01b031663aa271e1a610e59612413565b6040518263ffffffff1660e01b8152600401610e7591906142b1565b60206040518083038186803b158015610e8d57600080fd5b505afa158015610ea1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ec5919081019061367a565b610ee15760405162461bcd60e51b81526004016107f9906145ce565b600254600160a01b900460ff1615610ef857600080fd5b600354341015610f0757600080fd5b60008363ffffffff1611610f2d5760405162461bcd60e51b81526004016107f99061451e565b610f398988888861241b565b610f555760405162461bcd60e51b81526004016107f99061455e565b6000610f67610f62612413565b612b1d565b9050610f78818b8b8b8b8b8b61253f565b610f828184612bfc565b6000818152600960205260409020805463ffffffff861663ffffffff19909116179055905098975050505050505050565b6001546001600160a01b0316610fc7612413565b6001600160a01b03161480610ff657506002546001600160a01b0316610feb612413565b6001600160a01b0316145b6110125760405162461bcd60e51b81526004016107f9906144ce565b600254600160a01b900460ff1661102857600080fd5b6002805460ff60a01b19169055565b610d3083838360405180602001604052806000815250611d3f565b600254600160a01b900460ff161561106957600080fd5b611074610c16612413565b6110905760405162461bcd60e51b81526004016107f9906145ae565b61109981612c40565b50565b6004546000906001600160a01b031663aa271e1a6110b8612413565b6040518263ffffffff1660e01b81526004016110d491906142b1565b60206040518083038186803b1580156110ec57600080fd5b505afa158015611100573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611124919081019061367a565b6111405760405162461bcd60e51b81526004016107f9906145ce565b600254600160a01b900460ff161561115757600080fd5b60035434101561116657600080fd5b60008363ffffffff161161118c5760405162461bcd60e51b81526004016107f99061451e565b6111988988888861241b565b6111b45760405162461bcd60e51b81526004016107f99061455e565b60006111c76111c1612413565b84612c52565b9050610f82818b8b8b8b8b8b61253f565b6002546001600160a01b031681565b6001546001600160a01b03166111fb612413565b6001600160a01b0316148061122a57506002546001600160a01b031661121f612413565b6001600160a01b0316145b6112465760405162461bcd60e51b81526004016107f9906144ce565b6002805460ff60a81b1916600160a81b179055565b600254600160a01b900460ff1681565b6001546001600160a01b031661127f612413565b6001600160a01b031614806112ae57506002546001600160a01b03166112a3612413565b6001600160a01b0316145b6112ca5760405162461bcd60e51b81526004016107f9906144ce565b604051303190600090339083906112e0906142a6565b60006040518083038185875af1925050503d806000811461131d576040519150601f19603f3d011682016040523d82523d6000602084013e611322565b606091505b50509050806113435760405162461bcd60e51b81526004016107f99061442e565b5050565b6000908152600660205260409020546001600160a01b031690565b6004546000906001600160a01b031663aa271e1a61137e612413565b6040518263ffffffff1660e01b815260040161139a91906142b1565b60206040518083038186803b1580156113b257600080fd5b505afa1580156113c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113ea919081019061367a565b6114065760405162461bcd60e51b81526004016107f9906145ce565b600254600160a01b900460ff161561141d57600080fd5b60035434101561142c57600080fd5b60008263ffffffff16116114525760405162461bcd60e51b81526004016107f99061451e565b61145e8887878761241b565b61147a5760405162461bcd60e51b81526004016107f99061455e565b6000610b14610f62612413565b60006001600160a01b0382166114af5760405162461bcd60e51b81526004016107f99061443e565b6001600160a01b03821660009081526007602052604090206114d090612417565b92915050565b6001546001600160a01b031681565b6001600160a01b0383166000908152600b60205260409081902090516060918291611513908690869061428d565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156115f857600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156115e05780601f106115b5576101008083540402835291602001916115e0565b820191906000526020600020905b8154815290600101906020018083116115c357829003601f168201915b50505050508152505081526020019060010190611541565b5050505090506060815160405190808252806020026020018201604052801561163557816020015b60608152602001906001900390816116205790505b50905060005b825181101561167b5782818151811061165057fe5b60200260200101516000015182828151811061166857fe5b602090810291909101015260010161163b565b509150505b9392505050565b6004546001600160a01b031681565b6001546001600160a01b03166116aa612413565b6001600160a01b031614806116d957506002546001600160a01b03166116ce612413565b6001600160a01b0316145b6116f55760405162461bcd60e51b81526004016107f9906144ce565b600355565b6001546001600160a01b031661170e612413565b6001600160a01b0316148061173d57506002546001600160a01b0316611732612413565b6001600160a01b0316145b6117595760405162461bcd60e51b81526004016107f9906144ce565b600254600160a01b900460ff161561177057600080fd5b6002805460ff60a01b1916600160a01b179055565b6060600061179283611487565b9050806117af576040805160008082526020820190925290610d97565b6060816040519080825280602002602001820160405280156117db578160200160208202803883390190505b50905060006117e86109d9565b9050600060015b828111610e30576000818152600660205260409020546001600160a01b0388811691161415611837578084838151811061182557fe5b60209081029190910101526001909101905b6001016117ef565b60118054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107c75780601f1061079c576101008083540402835291602001916107c7565b6004546000906001600160a01b031663aa271e1a6118bc612413565b6040518263ffffffff1660e01b81526004016118d891906142b1565b60206040518083038186803b1580156118f057600080fd5b505afa158015611904573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611928919081019061367a565b6119445760405162461bcd60e51b81526004016107f9906145ce565b600254600160a01b900460ff161561195b57600080fd5b60035434101561196a57600080fd5b60008363ffffffff16116119905760405162461bcd60e51b81526004016107f99061451e565b61199c8988888861241b565b6119b85760405162461bcd60e51b81526004016107f99061455e565b6000610f67610b0f612413565b6004546001600160a01b0316634039ad0d6119de612413565b6040518263ffffffff1660e01b81526004016119fa91906142b1565b60206040518083038186803b158015611a1257600080fd5b505afa158015611a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a4a919081019061367a565b611a665760405162461bcd60e51b81526004016107f99061450e565b600254600160a01b900460ff1615611a7d57600080fd5b611a85612413565b6001600160a01b0316826001600160a01b03161415611ab65760405162461bcd60e51b81526004016107f99061447e565b80600f6000611ac3612413565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611b07612413565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611b3f91906143e1565b60405180910390a35050565b6001600160a01b0381166000908152600c602090815260408083208054825181850281018501909352808352606094859484015b82821015611c3657600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015611c1e5780601f10611bf357610100808354040283529160200191611c1e565b820191906000526020600020905b815481529060010190602001808311611c0157829003601f168201915b50505050508152505081526020019060010190611b7f565b50505050905060608151604051908082528060200260200182016040528015611c7357816020015b6060815260200190600190039081611c5e5790505b50905060005b8251811015611cb957828181518110611c8e57fe5b602002602001015160000151828281518110611ca657fe5b6020908102919091010152600101611c79565b509392505050565b600254600160a81b900460ff1681565b6001546001600160a01b0316611ce5612413565b6001600160a01b03161480611d1457506002546001600160a01b0316611d09612413565b6001600160a01b0316145b611d305760405162461bcd60e51b81526004016107f9906144ce565b6002805460ff60a81b19169055565b600254600160a01b900460ff1615611d5657600080fd5b6004805460405163f9ce6eab60e01b81526001600160a01b039091169163f9ce6eab91611d899188918891889101614353565b60206040518083038186803b158015611da157600080fd5b505afa158015611db5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611dd9919081019061367a565b611df55760405162461bcd60e51b81526004016107f99061459e565b611e06611e00612413565b836127ba565b611e225760405162461bcd60e51b81526004016107f99061454e565b600254600160a81b900460ff16611e6057611e3e848484612837565b15611e5b5760405162461bcd60e51b81526004016107f9906144be565b611f0f565b611e6b848484612837565b15611f0f57600480546040516360c1c90f60e11b81526001600160a01b039091169163c183921e91611ea39188918891889101614353565b60206040518083038186803b158015611ebb57600080fd5b505afa158015611ecf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ef3919081019061367a565b611f0f5760405162461bcd60e51b81526004016107f9906145de565b611f1b84848484612c89565b50505050565b6001546001600160a01b0316611f35612413565b6001600160a01b03161480611f6457506002546001600160a01b0316611f59612413565b6001600160a01b0316145b611f805760405162461bcd60e51b81526004016107f9906144ce565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6060611fad826123f6565b611fc95760405162461bcd60e51b81526004016107f9906145be565b6000828152600d602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909183018282801561205c5780601f106120315761010080835404028352916020019161205c565b820191906000526020600020905b81548152906001019060200180831161203f57829003601f168201915b50505050509050919050565b6001546001600160a01b031661207c612413565b6001600160a01b031614806120ab57506002546001600160a01b03166120a0612413565b6001600160a01b0316145b6120c75760405162461bcd60e51b81526004016107f9906144ce565b6001600160a01b0381161561109957600280546001600160a01b0383166001600160a01b031990911617905550565b600080606080600080600080600061210d8a6123f6565b6121295760405162461bcd60e51b81526004016107f99061440e565b612131613291565b60008b8152600a6020908152604091829020825160e08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f81018690048602830186019096528582529194929385810193919291908301828280156121e95780601f106121be576101008083540402835291602001916121e9565b820191906000526020600020905b8154815290600101906020018083116121cc57829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f8101839004830285018301909152808452938101939083018282801561227b5780601f106122505761010080835404028352916020019161227b565b820191906000526020600020905b81548152906001019060200180831161225e57829003601f168201915b50505091835250506003919091015465ffffffffffff808216602080850191909152600160301b83048216604080860191909152600160601b84049092166060850152600160901b90920461ffff1660809093019290925260008e815260099091522054815191925063ffffffff16906122f48d611347565b83602001518460400151856060015186608001518760a001518860c00151888696508595509a509a509a509a509a509a509a509a509a5050509193959799909294969850565b6001546001600160a01b031661234e612413565b6001600160a01b0316148061237d57506002546001600160a01b0316612372612413565b6001600160a01b0316145b6123995760405162461bcd60e51b81526004016107f9906144ce565b6001600160a01b0381161561109957600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600f6020908152604080832093909416825291909152205460ff1690565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b600480546040516323dd3a3d60e11b81526000926001600160a01b03909216916347ba747a9161244d918991016143fd565b60206040518083038186803b15801561246557600080fd5b505afa158015612479573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061249d919081019061367a565b6124b95760405162461bcd60e51b81526004016107f9906144ae565b8165ffffffffffff168465ffffffffffff16116124e85760405162461bcd60e51b81526004016107f99061448e565b8365ffffffffffff168365ffffffffffff16116125175760405162461bcd60e51b81526004016107f99061444e565b5060015b949350505050565b6000806116808360405180602001604052806000815250612c52565b612548876123f6565b6125645760405162461bcd60e51b81526004016107f99061458e565b61256c613291565b6040518060e0016040528061257f612413565b6001600160a01b03908116825260208083018b905260408084018b905265ffffffffffff8a811660608601528981166080860152881660a085015261ffff871660c09094019390935260008c8152600a825292909220835181546001600160a01b03191692169190911781558282015180519394508493919261260a926001850192909101906132ce565b50604082015180516126269160028401916020909101906132ce565b50606082015160039091018054608084015160a085015160c09095015161ffff16600160901b0261ffff60901b1965ffffffffffff968716600160601b0265ffffffffffff60601b19938816600160301b026bffffffffffff000000000000199890971665ffffffffffff199095169490941796909616949094171617929092161790556126b387612cbc565b61271c57600c60006126c3612413565b6001600160a01b031681526020808201929092526040908101600090812082518085019093528a835280546001810180835591835291849020835180519295919093019261271792849291909101906132ce565b505050505b6127268787612de7565b6127b057600b6000612736612413565b6001600160a01b03166001600160a01b0316815260200190815260200160002087604051612764919061429a565b9081526040805191829003602090810183208382019092528883528154600181018084556000938452928290208451805194959491909201926127ab9284929101906132ce565b505050505b5050505050505050565b60006127c5826123f6565b6127e15760405162461bcd60e51b81526004016107f99061449e565b60006127ec83611347565b9050806001600160a01b0316846001600160a01b031614806128275750836001600160a01b031661281c846107d2565b6001600160a01b0316145b8061251b575061251b81856123c8565b6000612841613291565b6000838152600a6020908152604091829020825160e08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f81018690048602830186019096528582529194929385810193919291908301828280156128f95780601f106128ce576101008083540402835291602001916128f9565b820191906000526020600020905b8154815290600101906020018083116128dc57829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f8101839004830285018301909152808452938101939083018282801561298b5780601f106129605761010080835404028352916020019161298b565b820191906000526020600020905b81548152906001019060200180831161296e57829003601f168201915b50505091835250506003919091015465ffffffffffff8082166020840152600160301b820481166040840152600160601b820416606083015261ffff600160901b9091041660809091015280519091506001600160a01b03868116911614156129f8576000915050611680565b80516001600160a01b0385811691161415612517576000915050611680565b826001600160a01b0316612a2a82611347565b6001600160a01b031614612a505760405162461bcd60e51b81526004016107f99061452e565b6001600160a01b038216612a765760405162461bcd60e51b81526004016107f99061446e565b612a7f81612f2e565b6001600160a01b0383166000908152600760205260409020612aa090612f69565b6001600160a01b0382166000908152600760205260409020612ac190612f80565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006001600160a01b038216612b455760405162461bcd60e51b81526004016107f9906144ee565b612b4f6005612f80565b6000612b5b6005612417565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b038916908117909155835260079091529020909150612b9d90612f80565b6001600160a01b0383166000908152600860205260409020612bbe90612f80565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b612c05826123f6565b612c215760405162461bcd60e51b81526004016107f99061457e565b6000828152600d602090815260409091208251610d30928401906132ce565b611099612c4c82611347565b82612f89565b600080612c5e84612b1d565b9050612c6d60008583866130c8565b6116805760405162461bcd60e51b81526004016107f99061441e565b612c94848484612a17565b612ca0848484846130c8565b611f1b5760405162461bcd60e51b81526004016107f99061441e565b336000908152600c602090815260408083208054825181850281018501909352808352606093859084015b82821015612d9e57600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612d865780601f10612d5b57610100808354040283529160200191612d86565b820191906000526020600020905b815481529060010190602001808311612d6957829003601f168201915b50505050508152505081526020019060010190612ce7565b5092935060009250829150505b8251811015611cb957612dd585848381518110612dc457fe5b602002602001015160000151613193565b15612ddf57600191505b600101612dab565b336000908152600b6020526040808220905160609190612e0890869061429a565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015612eed57600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612ed55780601f10612eaa57610100808354040283529160200191612ed5565b820191906000526020600020905b815481529060010190602001808311612eb857829003601f168201915b50505050508152505081526020019060010190612e36565b5092935060009250829150505b8251811015612f2557612f1385848381518110612dc457fe5b15612f1d57600191505b600101612efa565b50949350505050565b6000818152600e60205260409020546001600160a01b031615611099576000908152600e6020526040902080546001600160a01b0319169055565b8054612f7c90600163ffffffff6131ec16565b9055565b80546001019055565b816001600160a01b0316612f9c82611347565b6001600160a01b031614612fc25760405162461bcd60e51b81526004016107f99061456e565b612fcb81612f2e565b6001600160a01b0382166000908152600760205260409020612fec90612f69565b600081815260066020908152604080832080546001600160a01b0319169055600d9091529020546002600019600183161561010002019091160415613042576000818152600d602052604081206130429161334c565b6000818152600a6020526040812080546001600160a01b03191681559061306c600183018261334c565b61307a60028301600061334c565b5060030180546001600160a01b031916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006130dc846001600160a01b031661322e565b6130e85750600161251b565b6000846001600160a01b031663150b7a02613101612413565b8887876040518563ffffffff1660e01b8152600401613123949392919061437b565b602060405180830381600087803b15801561313d57600080fd5b505af1158015613151573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061317591908101906136b6565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b6000816040516020016131a6919061429a565b60405160208183030381529060405280519060200120836040516020016131cd919061429a565b6040516020818303038152906040528051906020012014905092915050565b600061168083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613265565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470811580159061251b5750141592915050565b600081848411156132895760405162461bcd60e51b81526004016107f991906143fd565b505050900390565b6040805160e08101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061330f57805160ff191683800117855561333c565b8280016001018555821561333c579182015b8281111561333c578251825591602001919060010190613321565b5061334892915061338c565b5090565b50805460018160011615610100020316600290046000825580601f106133725750611099565b601f01602090049060005260206000209081019061109991905b6107cf91905b808211156133485760008155600101613392565b80356114d0816146fd565b80356114d081614711565b80516114d081614711565b80356114d08161471a565b80516114d08161471a565b600082601f8301126133ee57600080fd5b81356134016133fc82614631565b61460a565b9150808252602083016020830185838301111561341d57600080fd5b6134288382846146bb565b50505092915050565b60008083601f84011261344357600080fd5b50813567ffffffffffffffff81111561345b57600080fd5b60208301915083600182028301111561347357600080fd5b9250929050565b80356114d081614723565b80356114d08161472c565b80356114d081614735565b80356114d08161473e565b6000602082840312156134b857600080fd5b600061251b84846133a6565b600080604083850312156134d757600080fd5b60006134e385856133a6565b92505060206134f4858286016133a6565b9150509250929050565b60008060006060848603121561351357600080fd5b600061351f86866133a6565b9350506020613530868287016133a6565b925050604061354186828701613485565b9150509250925092565b6000806000806080858703121561356157600080fd5b600061356d87876133a6565b945050602061357e878288016133a6565b935050604061358f87828801613485565b925050606085013567ffffffffffffffff8111156135ac57600080fd5b6135b8878288016133dd565b91505092959194509250565b600080604083850312156135d757600080fd5b60006135e385856133a6565b92505060206134f4858286016133b1565b60008060006040848603121561360957600080fd5b600061361586866133a6565b935050602084013567ffffffffffffffff81111561363257600080fd5b61363e86828701613431565b92509250509250925092565b6000806040838503121561365d57600080fd5b600061366985856133a6565b92505060206134f485828601613485565b60006020828403121561368c57600080fd5b600061251b84846133bc565b6000602082840312156136aa57600080fd5b600061251b84846133c7565b6000602082840312156136c857600080fd5b600061251b84846133d2565b600080600080600080600060e0888a0312156136ef57600080fd5b873567ffffffffffffffff81111561370657600080fd5b6137128a828b016133dd565b975050602088013567ffffffffffffffff81111561372f57600080fd5b61373b8a828b016133dd565b965050604061374c8a828b0161349b565b955050606061375d8a828b0161349b565b945050608061376e8a828b0161349b565b93505060a061377f8a828b0161347a565b92505060c06137908a828b01613490565b91505092959891949750929550565b600080600080600080600080610100898b0312156137bc57600080fd5b883567ffffffffffffffff8111156137d357600080fd5b6137df8b828c016133dd565b985050602089013567ffffffffffffffff8111156137fc57600080fd5b6138088b828c016133dd565b97505060406138198b828c0161349b565b965050606061382a8b828c0161349b565b955050608061383b8b828c0161349b565b94505060a061384c8b828c0161347a565b93505060c061385d8b828c01613490565b92505060e089013567ffffffffffffffff81111561387a57600080fd5b6138868b828c016133dd565b9150509295985092959890939650565b6000602082840312156138a857600080fd5b600061251b8484613485565b600061168083836139b3565b60006138cc8383614272565b505060200190565b6138dd8161466c565b82525050565b60006138ee8261465f565b6138f88185614663565b93508360208202850161390a85614659565b8060005b85811015613944578484038952815161392785826138b4565b945061393283614659565b60209a909a019992505060010161390e565b5091979650505050505050565b600061395c8261465f565b6139668185614663565b935061397183614659565b8060005b8381101561399f57815161398988826138c0565b975061399483614659565b925050600101613975565b509495945050505050565b6138dd81614677565b60006139be8261465f565b6139c88185614663565b93506139d88185602086016146c7565b6139e1816146f3565b9093019392505050565b6138dd816146b0565b6000613a008385610736565b9350613a0d8385846146bb565b50500190565b6000613a1e8261465f565b613a288185610736565b9350613a388185602086016146c7565b9290920192915050565b6000613a4f601d83614663565b7f4552433732313a204e6f6e2d6578697374656e7420546f6b656e204944000000815260200192915050565b6000613a88603283614663565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b602082015260400192915050565b6000613adc600f83614663565b6e15da5d1a191c985dc819985a5b1959608a1b815260200192915050565b6000613b07602583614663565b7f4552433732313a2063616e6e6f7420717565727920746865207a65726f206164815264647265737360d81b602082015260400192915050565b6000613b4e602a83614663565b7f4552433732313a2073746172742074696d65206d757374206265206265666f728152696520656e642074696d6560b01b602082015260400192915050565b6000613b9a601c83614663565b7f4552433732313a20756e6174686f72697a6564207472616e7366657200000000815260200192915050565b6000613bd3602483614663565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b602082015260400192915050565b6000613c19601983614663565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000815260200192915050565b6000613c52603583614663565b7f4552433732313a2073746172742074696d65206d757374206265206166746572815274206974732061756374696f6e20656e642074696d6560581b602082015260400192915050565b6000613ca9602c83614663565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b6000613cf7602e83614663565b7f4552433732313a20636f6e74656e74206964206973206e6f742072656769737481526d32b932b2103a379031b0b63632b960911b602082015260400192915050565b6000613d47602f83614663565b7f4552433732313a20746f6b656e20726573616c6520697320726573747269637481526e656420617420746869732074696d6560881b602082015260400192915050565b6000613d98601b83614663565b7f4552433732313a204f4e4c595f434f4e54524143545f4f574e45520000000000815260200192915050565b6000613dd1603e83614663565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f81527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015260400192915050565b6000613e30602083614663565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373815260200192915050565b6000613e69602c83614663565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b6000613eb7603483614663565b7f4552433732313a2063616c6c6572206973206e6f7420617574686f72697a656481527320666f72207468652054726164657220726f6c6560601b602082015260400192915050565b6000613f0d601583614663565b741253959053125117d19151115490551253d397d251605a1b815260200192915050565b6000613f3e602983614663565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981526839903737ba1037bbb760b91b602082015260400192915050565b6000613f89601d83614663565b7f4552433732313a20617070726f76616c20697320726564756e64616e74000000815260200192915050565b60006114d0600083610736565b6000613fcf603183614663565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f8152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b602082015260400192915050565b6000614022601183614663565b701253959053125117d512535157d4d313d5607a1b815260200192915050565b600061404f602583614663565b7f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f8152643a1037bbb760d91b602082015260400192915050565b6000614096602483614663565b7f4552433732313a2055524920736574206f66206e6f6e6578697374656e74207481526337b5b2b760e11b602082015260400192915050565b60006140dc601a83614663565b7f4552433732313a206e6f6e2d6578697374656e7420746f6b656e000000000000815260200192915050565b6000614115601d83614663565b7f4552433732313a20756e617574686f72697a6564207472616e73666572000000815260200192915050565b600061414e602e83614663565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6581526d1c881b9bdc88185c1c1c9bdd995960921b602082015260400192915050565b600061419e602783614663565b7f4552433732313a2055524920717565727920666f72206e6f6e6578697374656e8152663a103a37b5b2b760c91b602082015260400192915050565b60006141e7603483614663565b7f4552433732313a2063616c6c6572206973206e6f7420617574686f72697a656481527320666f7220746865204d696e74657220726f6c6560601b602082015260400192915050565b600061423d601b83614663565b7f4552433732313a20756e617574686f72697a656420726573616c650000000000815260200192915050565b6138dd81614689565b6138dd816107cf565b6138dd8161469c565b6138dd816146a5565b600061251b8284866139f4565b60006116808284613a13565b60006114d082613fb5565b602081016114d082846138d4565b61012081016142ce828c6138d4565b6142db602083018b6138d4565b81810360408301526142ed818a6139b3565b9050818103606083015261430181896139b3565b90506143106080830188614284565b61431d60a0830187614284565b61432a60c0830186614284565b61433760e0830185614269565b61434561010083018461427b565b9a9950505050505050505050565b6060810161436182866138d4565b61436e60208301856138d4565b61251b6040830184614272565b6080810161438982876138d4565b61439660208301866138d4565b6143a36040830185614272565b81810360608301526143b581846139b3565b9695505050505050565b6020808252810161168081846138e3565b602080825281016116808184613951565b602081016114d082846139aa565b602081016114d082846139eb565b6020808252810161168081846139b3565b602080825281016114d081613a42565b602080825281016114d081613a7b565b602080825281016114d081613acf565b602080825281016114d081613afa565b602080825281016114d081613b41565b602080825281016114d081613b8d565b602080825281016114d081613bc6565b602080825281016114d081613c0c565b602080825281016114d081613c45565b602080825281016114d081613c9c565b602080825281016114d081613cea565b602080825281016114d081613d3a565b602080825281016114d081613d8b565b602080825281016114d081613dc4565b602080825281016114d081613e23565b602080825281016114d081613e5c565b602080825281016114d081613eaa565b602080825281016114d081613f00565b602080825281016114d081613f31565b602080825281016114d081613f7c565b602080825281016114d081613fc2565b602080825281016114d081614015565b602080825281016114d081614042565b602080825281016114d081614089565b602080825281016114d0816140cf565b602080825281016114d081614108565b602080825281016114d081614141565b602080825281016114d081614191565b602080825281016114d0816141da565b602080825281016114d081614230565b602081016114d08284614272565b602081016114d0828461427b565b60405181810167ffffffffffffffff8111828210171561462957600080fd5b604052919050565b600067ffffffffffffffff82111561464857600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b60006114d082614690565b151590565b6001600160e01b03191690565b61ffff1690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b60006114d08261466c565b82818337506000910152565b60005b838110156146e25781810151838201526020016146ca565b83811115611f1b5750506000910152565b601f01601f191690565b6147068161466c565b811461109957600080fd5b61470681614677565b6147068161467c565b61470681614689565b614706816107cf565b6147068161469c565b614706816146a556fea365627a7a7231582031c5f9051b0ed13c10576549825d5dc1f01d4b55204482918eb54a66e3a520ff6c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "925:1239:8:-;;;1511:26:3;;;-1:-1:-1;;;;1642:41:3;;;1796:15;1771:40;;1441:336:8;5:2:-1;;;;30:1;27;20:12;5:2;1441:336:8;;;;;;;;;;;;;;;;;;;;;720:40:2;739:20;-1:-1:-1;;;;;720:18:2;:40;:::i;:::-;6206::3;6225:20;-1:-1:-1;;;;;6206:18:3;:40;:::i;:::-;6326:12;-1:-1:-1;;;;;6326:10:3;:12;:::i;:::-;6317:6;:21;;-1:-1:-1;;;;;;6317:21:3;-1:-1:-1;;;;;6317:21:3;;;;;;;;;;6357:12;:10;:12::i;:::-;6348:6;:21;;-1:-1:-1;;;;;;6348:21:3;-1:-1:-1;;;;;6348:21:3;;;;;;;;;;1539:12:8;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1561:16:8;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1665:49:8;1684:29;-1:-1:-1;;;;;1665:18:8;:49;:::i;:::-;1725:44;1753:15;1725:27;;;;;:44;;:::i;:::-;1441:336;;;925:1239;;1444:190:2;1519:25;;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1587:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1587:40:2;1623:4;1587:40;;;1444:190::o;6843:90:3:-;6915:10;6843:90;;:::o;8177:144::-;7424:6;;-1:-1:-1;;;;;7424:6:3;7408:12;-1:-1:-1;;;;;7408:10:3;:12;:::i;:::-;-1:-1:-1;;;;;7408:22:3;;7407:52;;;-1:-1:-1;7452:6:3;;-1:-1:-1;;;;;7452:6:3;7436:12;-1:-1:-1;;;;;7436:10:3;:12;:::i;:::-;-1:-1:-1;;;;;7436:22:3;;7407:52;7386:126;;;;;;;;;;;;;;8275:8;:39;;-1:-1:-1;;;;;;8275:39:3;-1:-1:-1;;;;;8275:39:3;;;;;;;;;;8177:144::o;925:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;925:1239:8;;;-1:-1:-1;925:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;819:24;;-1:-1;;;;;852:30;;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;-1:-1;;;;;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1600:66;1580:87;;1695:2;1686:12;;1486:218;-1:-1;;1486:218;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1973:66;1953:87;;2068:2;2059:12;;1859:218;-1:-1;;1859:218;2085:407;2276:2;2290:47;;;2261:18;;2351:131;2261:18;2351:131;;2499:407;2690:2;2704:47;;;2675:18;;2765:131;2675:18;2765:131;;2913:256;2975:2;2969:9;3001:17;;;-1:-1;;;;;3061:34;;3097:22;;;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3149;3142:22;2953:216;;-1:-1;2953:216;3176:322;;-1:-1;;;;;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;-1:-1;3483:4;3419;3396:17;;;;-1:-1;;3392:33;3473:15;;3243:255;3506:163;3609:19;;;3658:4;3649:14;;3602:67;3677:91;;-1:-1;;;;;3837:54;;3739:24;3820:76;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4057:11;;;4051:18;4038:11;;;4031:39;4012:2;4005:10;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;;925:1239:8;;;;;;",
  "deployedSourceMap": "925:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;917:133:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1882:83:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1882:83:8;;;:::i;:::-;;;;;;;;28315:236:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28315:236:3;;;;;;;;:::i;:::-;;;;;;;;27485:545;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;27485:545:3;;;;;;;;:::i;:::-;;1771:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1771:40:3;;;:::i;:::-;;;;;;;;2649:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2649:54:3;;;;;;;;:::i;:::-;;;;;;;;24834:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24834:98:3;;;:::i;12628:814::-;;;;;;;;;:::i;30109:913::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;30109:913:3;;;;;;;;:::i;23715:985::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23715:985:3;;;;;;;;:::i;:::-;;;;;;;;11648:891;;;;;;;;;:::i;9474:78::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9474:78:3;;;:::i;31671:134::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;31671:134:3;;;;;;;;:::i;38935:230::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;38935:230:3;;;;;;;;:::i;13603:847::-;;;;;;;;;:::i;1400:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1400:21:3;;;:::i;8607:92::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8607:92:3;;;:::i;1511:26::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1511:26:3;;;:::i;9617:305::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9617:305:3;;;:::i;25613:152::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25613:152:3;;;;;;;;:::i;10702:806::-;;;;;;;;;:::i;25141:253::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25141:253:3;;;;;;;;:::i;1373:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1373:21:3;;;:::i;22902:403::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22902:403:3;;;;;;;;:::i;:::-;;;;;;;;1989:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1989:32:3;;;:::i;:::-;;;;;;;;8414:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8414:105:3;;;;;;;;:::i;9318:78::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9318:78:3;;;:::i;26183:840::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;26183:840:3;;;;;;;;:::i;2074:87:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2074:87:8;;;:::i;14553:899:3:-;;;;;;;;;:::i;28844:304::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28844:304:3;;;;;;;;:::i;22448:330::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22448:330:3;;;;;;;;:::i;1642:41::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1642:41:3;;;:::i;8787:94::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8787:94:3;;;:::i;32527:945::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;32527:945:3;;;;;;;;:::i;8177:144::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8177:144:3;;;;;;;;:::i;18232:231::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18232:231:3;;;;;;;;:::i;7855:169::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7855:169:3;;;;;;;;:::i;21154:874::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;21154:874:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7679:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7679:169:3;;;;;;;;:::i;29487:185::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;29487:185:3;;;;;;;;:::i;917:133:2:-;-1:-1:-1;;;;;;1010:33:2;;987:4;1010:33;;;;;;;;;;;;;917:133;;;;:::o;1882:83:8:-;1953:5;1946:12;;;;;;;;-1:-1:-1;;1946:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1921:13;;1946:12;;1953:5;;1946:12;;1953:5;1946:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:83;;:::o;28315:236:3:-;28374:7;28415:16;28423:7;28415;:16::i;:::-;28394:107;;;;-1:-1:-1;;;28394:107:3;;;;;;;;;;;;;;;;;-1:-1:-1;28519:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;28519:24:3;;28315:236::o;27485:545::-;10458:8;;-1:-1:-1;;;;;10458:8:3;:17;10476:12;:10;:12::i;:::-;10458:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10458:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10458:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10458:31:3;;;;;;;;;10437:130;;;;-1:-1:-1;;;10437:130:3;;;;;;;;;9076:6;;-1:-1:-1;;;9076:6:3;;;;9075:7;9067:16;;;;;;27602:18;27623:16;27631:7;27623;:16::i;:::-;27602:37;;27677:10;-1:-1:-1;;;;;27671:16:3;:2;-1:-1:-1;;;;;27671:16:3;;;27650:92;;;;-1:-1:-1;;;27650:92:3;;;;;;;;;27790:10;-1:-1:-1;;;;;27774:26:3;:12;:10;:12::i;:::-;-1:-1:-1;;;;;27774:26:3;;:72;;;;27804:42;27821:10;27833:12;:10;:12::i;27804:42::-;27753:181;;;;-1:-1:-1;;;27753:181:3;;;;;;;;;27945:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;27945:29:3;-1:-1:-1;;;;;27945:29:3;;;;;;;;;27989:33;;27945:24;;27989:33;;;;;;;9093:1;27485:545;;:::o;1771:40::-;;;;:::o;2649:54::-;;;;;;;;;;;;;;;:::o;24834:98::-;24878:7;24905:19;:9;:17;:19::i;:::-;24898:26;;24834:98;:::o;12628:814::-;10153:8;;12945:7;;-1:-1:-1;;;;;10153:8:3;:17;10171:12;:10;:12::i;:::-;10153:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10153:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10153:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10153:31:3;;;;;;;;;10132:130;;;;-1:-1:-1;;;10132:130:3;;;;;;;;;9076:6;;-1:-1:-1;;;9076:6:3;;;;9075:7;9067:16;;;;;;12990:7;;12977:9;:20;;12969:29;;;;;;13032:1;13017:12;:16;;;13009:50;;;;-1:-1:-1;;;13009:50:3;;;;;;;;;13091:63;13108:9;13119;13130:7;13139:14;13091:16;:63::i;:::-;13070:127;;;;-1:-1:-1;;;13070:127:3;;;;;;;;;13208:15;13226:23;13236:12;:10;:12::i;:::-;13226:9;:23::i;:::-;13208:41;;13259:97;13277:7;13286:9;13297:12;13311:9;13322:7;13331:14;13347:8;13259:17;:97::i;:::-;13366:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;13366:43:3;;;;;;13386:7;-1:-1:-1;12628:814:3;;;;;;;;;:::o;30109:913::-;9076:6;;-1:-1:-1;;;9076:6:3;;;;9075:7;9067:16;;;;;;30247:8;;;:52;;-1:-1:-1;;;30247:52:3;;-1:-1:-1;;;;;30247:8:3;;;;:33;;:52;;30281:4;;30287:2;;30291:7;;30247:52;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30247:52:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30247:52:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;30247:52:3;;;;;;;;;30226:127;;;;-1:-1:-1;;;30226:127:3;;;;;;;;;30385:41;30404:12;:10;:12::i;:::-;30418:7;30385:18;:41::i;:::-;30364:137;;;;-1:-1:-1;;;30364:137:3;;;;;;;;;30516:21;;-1:-1:-1;;;30516:21:3;;;;30512:460;;30588:33;30603:4;30609:2;30613:7;30588:14;:33::i;:::-;:42;30563:148;;;;-1:-1:-1;;;30563:148:3;;;;;;;;;30512:460;;;30748:33;30763:4;30769:2;30773:7;30748:14;:33::i;:::-;30744:218;;;30831:8;;;:46;;-1:-1:-1;;;30831:46:3;;-1:-1:-1;;;;;30831:8:3;;;;:27;;:46;;30859:4;;30865:2;;30869:7;;30831:46;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30831:46:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30831:46:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;30831:46:3;;;;;;;;;30802:144;;;;-1:-1:-1;;;30802:144:3;;;;;;;;;30982:32;30996:4;31002:2;31006:7;30982:13;:32::i;:::-;30109:913;;;:::o;23715:985::-;23778:16;-1:-1:-1;;;;;23828:20:3;;23807:104;;;;-1:-1:-1;;;23807:104:3;;;;;;;;;-1:-1:-1;;;;;23943:26:3;;23922:18;23943:26;;;:18;:26;;;;;:36;;:34;:36::i;:::-;23922:57;-1:-1:-1;23993:15:3;23989:704;;24068:16;;;24082:1;24068:16;;;;;;;;;;;;24061:23;;;;;23989:704;24115:23;24155:10;24141:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;24141:25:3;;24115:51;;24180:19;24202:13;:11;:13::i;:::-;24180:35;-1:-1:-1;24229:19:3;24432:1;24417:238;24446:11;24435:7;:22;24417:238;;24492:25;;;;:16;:25;;;;;:32;-1:-1:-1;;;;;24492:42:3;;;:32;;:42;24488:153;;;24580:7;24558:6;24565:11;24558:19;;;;;;;;;;;;;;;;;:29;24609:13;;;;;24488:153;24459:9;;24417:238;;;24676:6;24669:13;;;;;;;;;11648:891;10153:8;;12005:7;;-1:-1:-1;;;;;10153:8:3;:17;10171:12;:10;:12::i;:::-;10153:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10153:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10153:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10153:31:3;;;;;;;;;10132:130;;;;-1:-1:-1;;;10132:130:3;;;;;;;;;9076:6;;-1:-1:-1;;;9076:6:3;;;;9075:7;9067:16;;;;;;12050:7;;12037:9;:20;;12029:29;;;;;;12092:1;12077:12;:16;;;12069:50;;;;-1:-1:-1;;;12069:50:3;;;;;;;;;12151:63;12168:9;12179;12190:7;12199:14;12151:16;:63::i;:::-;12130:127;;;;-1:-1:-1;;;12130:127:3;;;;;;;;;12268:15;12286:19;12292:12;:10;:12::i;:::-;12286:5;:19::i;:::-;12268:37;;12315:97;12333:7;12342:9;12353:12;12367:9;12378:7;12387:14;12403:8;12315:17;:97::i;:::-;12422:31;12435:7;12444:8;12422:12;:31::i;:::-;12463:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;12463:43:3;;;;;;12483:7;-1:-1:-1;11648:891:3;;;;;;;;;;:::o;9474:78::-;7424:6;;-1:-1:-1;;;;;7424:6:3;7408:12;:10;:12::i;:::-;-1:-1:-1;;;;;7408:22:3;;7407:52;;;-1:-1:-1;7452:6:3;;-1:-1:-1;;;;;7452:6:3;7436:12;:10;:12::i;:::-;-1:-1:-1;;;;;7436:22:3;;7407:52;7386:126;;;;-1:-1:-1;;;7386:126:3;;;;;;;;;9217:6;;-1:-1:-1;;;9217:6:3;;;;9209:15;;;;;;9531:6;:14;;-1:-1:-1;;;;9531:14:3;;;9474:78::o;31671:134::-;31758:39;31775:4;31781:2;31785:7;31758:39;;;;;;;;;;;;:16;:39::i;38935:230::-;9076:6;;-1:-1:-1;;;9076:6:3;;;;9075:7;9067:16;;;;;;39019:41;39038:12;:10;:12::i;39019:41::-;38998:134;;;;-1:-1:-1;;;38998:134:3;;;;;;;;;39143:14;39149:7;39143:5;:14::i;:::-;38935:230;:::o;13603:847::-;10153:8;;13947:7;;-1:-1:-1;;;;;10153:8:3;:17;10171:12;:10;:12::i;:::-;10153:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10153:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10153:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10153:31:3;;;;;;;;;10132:130;;;;-1:-1:-1;;;10132:130:3;;;;;;;;;9076:6;;-1:-1:-1;;;9076:6:3;;;;9075:7;9067:16;;;;;;13992:7;;13979:9;:20;;13971:29;;;;;;14034:1;14019:12;:16;;;14011:50;;;;-1:-1:-1;;;14011:50:3;;;;;;;;;14093:63;14110:9;14121;14132:7;14141:14;14093:16;:63::i;:::-;14072:127;;;;-1:-1:-1;;;14072:127:3;;;;;;;;;14210:15;14228:29;14238:12;:10;:12::i;:::-;14252:4;14228:9;:29::i;:::-;14210:47;;14267:97;14285:7;14294:9;14305:12;14319:9;14330:7;14339:14;14355:8;14267:17;:97::i;1400:21::-;;;-1:-1:-1;;;;;1400:21:3;;:::o;8607:92::-;7424:6;;-1:-1:-1;;;;;7424:6:3;7408:12;:10;:12::i;:::-;-1:-1:-1;;;;;7408:22:3;;7407:52;;;-1:-1:-1;7452:6:3;;-1:-1:-1;;;;;7452:6:3;7436:12;:10;:12::i;:::-;-1:-1:-1;;;;;7436:22:3;;7407:52;7386:126;;;;-1:-1:-1;;;7386:126:3;;;;;;;;;8664:21;:28;;-1:-1:-1;;;;8664:28:3;-1:-1:-1;;;8664:28:3;;;8607:92::o;1511:26::-;;;-1:-1:-1;;;1511:26:3;;;;;:::o;9617:305::-;7424:6;;-1:-1:-1;;;;;7424:6:3;7408:12;:10;:12::i;:::-;-1:-1:-1;;;;;7408:22:3;;7407:52;;;-1:-1:-1;7452:6:3;;-1:-1:-1;;;;;7452:6:3;7436:12;:10;:12::i;:::-;-1:-1:-1;;;;;7436:22:3;;7407:52;7386:126;;;;-1:-1:-1;;;7386:126:3;;;;;;;;;9835:34;;9793:4;9785:21;;9770:12;;9835:10;;9785:21;;9835:34;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;9816:53:3;;;9887:7;9879:35;;;;-1:-1:-1;;;9879:35:3;;;;;;;;;7522:1;;9617:305::o;25613:152::-;25668:7;25709:20;;;:11;:20;;;;;;-1:-1:-1;;;;;25709:20:3;;25613:152::o;10702:806::-;10153:8;;11015:7;;-1:-1:-1;;;;;10153:8:3;:17;10171:12;:10;:12::i;:::-;10153:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10153:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10153:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10153:31:3;;;;;;;;;10132:130;;;;-1:-1:-1;;;10132:130:3;;;;;;;;;9076:6;;-1:-1:-1;;;9076:6:3;;;;9075:7;9067:16;;;;;;11060:7;;11047:9;:20;;11039:29;;;;;;11102:1;11087:12;:16;;;11079:50;;;;-1:-1:-1;;;11079:50:3;;;;;;;;;11161:63;11178:9;11189;11200:7;11209:14;11161:16;:63::i;:::-;11140:127;;;;-1:-1:-1;;;11140:127:3;;;;;;;;;11278:15;11296:19;11302:12;:10;:12::i;25141:253::-;25201:7;-1:-1:-1;;;;;25242:24:3;;25221:108;;;;-1:-1:-1;;;25221:108:3;;;;;;;;;-1:-1:-1;;;;;25347:29:3;;;;;;:17;:29;;;;;:39;;:37;:39::i;:::-;25340:46;25141:253;-1:-1:-1;;25141:253:3:o;1373:21::-;;;-1:-1:-1;;;;;1373:21:3;;:::o;22902:403::-;-1:-1:-1;;;;;23084:35:3;;;;;;:27;:35;;;;;;;:46;;23024:15;;;;23084:46;;23120:9;;;;23084:46;;;;;;;;;;;;;;;23052:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23052:78:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23140:17;23173:1;:8;23160:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23140:42:3;-1:-1:-1;23198:6:3;23193:86;23214:1;:8;23210:1;:12;23193:86;;;23251:1;23253;23251:4;;;;;;;;;;;;;;:17;;;23243:1;23245;23243:4;;;;;;;;;;;;;;;;;:25;23224:3;;23193:86;;;-1:-1:-1;23296:1:3;-1:-1:-1;;22902:403:3;;;;;;:::o;1989:32::-;;;-1:-1:-1;;;;;1989:32:3;;:::o;8414:105::-;7424:6;;-1:-1:-1;;;;;7424:6:3;7408:12;:10;:12::i;:::-;-1:-1:-1;;;;;7408:22:3;;7407:52;;;-1:-1:-1;7452:6:3;;-1:-1:-1;;;;;7452:6:3;7436:12;:10;:12::i;:::-;-1:-1:-1;;;;;7436:22:3;;7407:52;7386:126;;;;-1:-1:-1;;;7386:126:3;;;;;;;;;8498:7;:13;8414:105::o;9318:78::-;7424:6;;-1:-1:-1;;;;;7424:6:3;7408:12;:10;:12::i;:::-;-1:-1:-1;;;;;7408:22:3;;7407:52;;;-1:-1:-1;7452:6:3;;-1:-1:-1;;;;;7452:6:3;7436:12;:10;:12::i;:::-;-1:-1:-1;;;;;7436:22:3;;7407:52;7386:126;;;;-1:-1:-1;;;7386:126:3;;;;;;;;;9076:6;;-1:-1:-1;;;9076:6:3;;;;9075:7;9067:16;;;;;;9376:6;:13;;-1:-1:-1;;;;9376:13:3;-1:-1:-1;;;9376:13:3;;;9318:78::o;26183:840::-;26248:16;26276:18;26297:21;26307:10;26297:9;:21::i;:::-;26276:42;-1:-1:-1;26332:15:3;26328:689;;26407:16;;;26421:1;26407:16;;;;;;;;;;;;26328:689;26454:23;26494:10;26480:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;26480:25:3;;26454:51;;26519:19;26541:13;:11;:13::i;:::-;26519:35;-1:-1:-1;26568:19:3;26764:1;26749:230;26778:11;26767:7;:22;26749:230;;26824:20;;;;:11;:20;;;;;;-1:-1:-1;;;;;26824:34:3;;;:20;;:34;26820:145;;;26904:7;26882:6;26889:11;26882:19;;;;;;;;;;;;;;;;;:29;26933:13;;;;;26820:145;26791:9;;26749:230;;2074:87:8;2147:7;2140:14;;;;;;;;-1:-1:-1;;2140:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2115:13;;2140:14;;2147:7;;2140:14;;2147:7;2140:14;;;;;;;;;;;;;;;;;;;;;;;;14553:899:3;10153:8;;14914:7;;-1:-1:-1;;;;;10153:8:3;:17;10171:12;:10;:12::i;:::-;10153:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10153:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10153:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10153:31:3;;;;;;;;;10132:130;;;;-1:-1:-1;;;10132:130:3;;;;;;;;;9076:6;;-1:-1:-1;;;9076:6:3;;;;9075:7;9067:16;;;;;;14959:7;;14946:9;:20;;14938:29;;;;;;15001:1;14986:12;:16;;;14978:50;;;;-1:-1:-1;;;14978:50:3;;;;;;;;;15060:63;15077:9;15088;15099:7;15108:14;15060:16;:63::i;:::-;15039:127;;;;-1:-1:-1;;;15039:127:3;;;;;;;;;15177:15;15195:23;15205:12;:10;:12::i;28844:304::-;10458:8;;-1:-1:-1;;;;;10458:8:3;:17;10476:12;:10;:12::i;:::-;10458:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10458:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10458:31:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10458:31:3;;;;;;;;;10437:130;;;;-1:-1:-1;;;10437:130:3;;;;;;;;;9076:6;;-1:-1:-1;;;9076:6:3;;;;9075:7;9067:16;;;;;;28983:12;:10;:12::i;:::-;-1:-1:-1;;;;;28977:18:3;:2;-1:-1:-1;;;;;28977:18:3;;;28969:56;;;;-1:-1:-1;;;28969:56:3;;;;;;;;;29075:8;29036:18;:32;29055:12;:10;:12::i;:::-;-1:-1:-1;;;;;29036:32:3;;;;;;;;;;;;;;;;;-1:-1:-1;29036:32:3;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;29036:47:3;;;;;;;;;;;29113:12;:10;:12::i;:::-;-1:-1:-1;;;;;29098:42:3;;29131:8;29098:42;;;;;;;;;;;;;;;28844:304;;:::o;22448:330::-;-1:-1:-1;;;;;22575:32:3;;;;;;:24;:32;;;;;;;;22546:61;;;;;;;;;;;;;;;;;22518:15;;;;22546:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22546:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22617:17;22650:1;:8;22637:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22617:42:3;-1:-1:-1;22675:6:3;22670:82;22691:1;:8;22687:1;:12;22670:82;;;22727:1;22729;22727:4;;;;;;;;;;;;;;:14;;;22720:1;22722;22720:4;;;;;;;;;;;;;;;;;:21;22701:3;;22670:82;;;-1:-1:-1;22769:1:3;22448:330;-1:-1:-1;;;22448:330:3:o;1642:41::-;;;-1:-1:-1;;;1642:41:3;;;;;:::o;8787:94::-;7424:6;;-1:-1:-1;;;;;7424:6:3;7408:12;:10;:12::i;:::-;-1:-1:-1;;;;;7408:22:3;;7407:52;;;-1:-1:-1;7452:6:3;;-1:-1:-1;;;;;7452:6:3;7436:12;:10;:12::i;:::-;-1:-1:-1;;;;;7436:22:3;;7407:52;7386:126;;;;-1:-1:-1;;;7386:126:3;;;;;;;;;8845:21;:29;;-1:-1:-1;;;;8845:29:3;;;8787:94::o;32527:945::-;9076:6;;-1:-1:-1;;;9076:6:3;;;;9075:7;9067:16;;;;;;32688:8;;;:52;;-1:-1:-1;;;32688:52:3;;-1:-1:-1;;;;;32688:8:3;;;;:33;;:52;;32722:4;;32728:2;;32732:7;;32688:52;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32688:52:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32688:52:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;32688:52:3;;;;;;;;;32667:128;;;;-1:-1:-1;;;32667:128:3;;;;;;;;;32827:41;32846:12;:10;:12::i;:::-;32860:7;32827:18;:41::i;:::-;32806:137;;;;-1:-1:-1;;;32806:137:3;;;;;;;;;32958:21;;-1:-1:-1;;;32958:21:3;;;;32954:458;;33030:33;33045:4;33051:2;33055:7;33030:14;:33::i;:::-;:42;33005:148;;;;-1:-1:-1;;;33005:148:3;;;;;;;;;32954:458;;;33190:33;33205:4;33211:2;33215:7;33190:14;:33::i;:::-;33186:216;;;33272:8;;;:46;;-1:-1:-1;;;33272:46:3;;-1:-1:-1;;;;;33272:8:3;;;;:27;;:46;;33300:4;;33306:2;;33310:7;;33272:46;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33272:46:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33272:46:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;33272:46:3;;;;;;;;;33243:144;;;;-1:-1:-1;;;33243:144:3;;;;;;;;;33422:42;33440:4;33446:2;33450:7;33459:4;33422:17;:42::i;:::-;32527:945;;;;:::o;8177:144::-;7424:6;;-1:-1:-1;;;;;7424:6:3;7408:12;:10;:12::i;:::-;-1:-1:-1;;;;;7408:22:3;;7407:52;;;-1:-1:-1;7452:6:3;;-1:-1:-1;;;;;7452:6:3;7436:12;:10;:12::i;:::-;-1:-1:-1;;;;;7436:22:3;;7407:52;7386:126;;;;-1:-1:-1;;;7386:126:3;;;;;;;;;8275:8;:39;;-1:-1:-1;;;;;;8275:39:3;-1:-1:-1;;;;;8275:39:3;;;;;;;;;;8177:144::o;18232:231::-;18290:13;18337:16;18345:7;18337;:16::i;:::-;18316:102;;;;-1:-1:-1;;;18316:102:3;;;;;;;;;18436:19;;;;:10;:19;;;;;;;;;18429:26;;;;;;-1:-1:-1;;18429:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18436:19;;18429:26;;18436:19;18429:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18232:231;;;:::o;7855:169::-;7424:6;;-1:-1:-1;;;;;7424:6:3;7408:12;:10;:12::i;:::-;-1:-1:-1;;;;;7408:22:3;;7407:52;;;-1:-1:-1;7452:6:3;;-1:-1:-1;;;;;7452:6:3;7436:12;:10;:12::i;:::-;-1:-1:-1;;;;;7436:22:3;;7407:52;7386:126;;;;-1:-1:-1;;;7386:126:3;;;;;;;;;-1:-1:-1;;;;;7952:22:3;;;7948:70;;7990:6;:17;;-1:-1:-1;;;;;7990:17:3;;-1:-1:-1;;;;;;7990:17:3;;;;;;7855:169;:::o;21154:874::-;21226:14;21250:13;21273:23;21306:26;21342:16;21368:14;21392:21;21423:15;21448:19;21506:16;21514:7;21506;:16::i;:::-;21485:92;;;;-1:-1:-1;;;21485:92:3;;;;;;;;;21588:25;;:::i;:::-;21616;;;;:16;:25;;;;;;;;;21588:53;;;;;;;;;-1:-1:-1;;;;;21588:53:3;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21588:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;21616:25;;21588:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21588:53:3;;;-1:-1:-1;;21588:53:3;;;;;;;;;;;;;;;;-1:-1:-1;;21588:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21588:53:3;;;-1:-1:-1;;21588:53:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21588:53:3;;;;;;;;;;;;-1:-1:-1;;;21588:53:3;;;;;;;;;-1:-1:-1;;;21588:53:3;;;;;;;;;;;;;-1:-1:-1;21674:28:3;;;:19;:28;;;;;21734:16;;;;-1:-1:-1;21674:28:3;;;21764:16;21674:28;21764:7;:16::i;:::-;21794:9;:19;;;21827:9;:22;;;21863:9;:19;;;21896:9;:17;;;21927:9;:24;;;21965:9;:18;;;21997:13;21713:307;;;;;;;;;;;;;;;;;;;;;;;;;;21154:874;;;;;;;;;;;:::o;7679:169::-;7424:6;;-1:-1:-1;;;;;7424:6:3;7408:12;:10;:12::i;:::-;-1:-1:-1;;;;;7408:22:3;;7407:52;;;-1:-1:-1;7452:6:3;;-1:-1:-1;;;;;7452:6:3;7436:12;:10;:12::i;:::-;-1:-1:-1;;;;;7436:22:3;;7407:52;7386:126;;;;-1:-1:-1;;;7386:126:3;;;;;;;;;-1:-1:-1;;;;;7776:22:3;;;7772:70;;7814:6;:17;;-1:-1:-1;;;;;7814:17:3;;-1:-1:-1;;;;;;7814:17:3;;;;;;7679:169;:::o;29487:185::-;-1:-1:-1;;;;;29624:30:3;;;29596:4;29624:30;;;:18;:30;;;;;;;;:40;;;;;;;;;;;;;;;29487:185::o;34687:165::-;34744:4;34782:20;;;:11;:20;;;;;;-1:-1:-1;;;;;34782:20:3;34820:24;;;34687:165::o;6843:90::-;6915:10;6843:90;:::o;1061:112:1:-;1152:14;;1061:112::o;18521:614:3:-;18728:8;;;:49;;-1:-1:-1;;;18728:49:3;;18690:4;;-1:-1:-1;;;;;18728:8:3;;;;:38;;:49;;18767:9;;18728:49;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18728:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18728:49:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18728:49:3;;;;;;;;;18707:142;;;;-1:-1:-1;;;18707:142:3;;;;;;;;;18893:14;18881:26;;:9;:26;;;18860:126;;;;-1:-1:-1;;;18860:126:3;;;;;;;;;19028:9;19018:19;;:7;:19;;;18997:108;;;;-1:-1:-1;;;18997:108:3;;;;;;;;;-1:-1:-1;19123:4:3;18521:614;;;;;;;:::o;15945:136::-;15994:7;16014:15;16032:17;16042:2;16032:17;;;;;;;;;;;;:9;:17::i;20044:1103::-;20318:16;20326:7;20318;:16::i;:::-;20297:89;;;;-1:-1:-1;;;20297:89:3;;;;;;;;;20397:25;;:::i;:::-;20425:325;;;;;;;;20464:12;:10;:12::i;:::-;-1:-1:-1;;;;;20425:325:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20761:25:3;;;:16;:25;;;;;;:37;;;;-1:-1:-1;;;;;;20761:37:3;;;;;;;;;;;;;;;;;-1:-1:-1;20761:37:3;;:25;;:37;;-1:-1:-1;20761:37:3;;;;;;;;:::i;:::-;-1:-1:-1;20761:37:3;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20761:37:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20761:37:3;-1:-1:-1;;;;20761:37:3;;;;-1:-1:-1;;;20761:37:3;-1:-1:-1;;;;20761:37:3;;;-1:-1:-1;;;20761:37:3;-1:-1:-1;;20761:37:3;;;;-1:-1:-1;;20761:37:3;;;;;;;;;;;;;;;;;;;;;;;;20814;20841:9;20814:26;:37::i;:::-;20809:142;;20867:24;:38;20892:12;:10;:12::i;:::-;-1:-1:-1;;;;;20867:38:3;;;;;;;;;;;;;;;-1:-1:-1;20867:38:3;;;20912:26;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;20867:73:3;;;;;;;;;;;23:18:-1;;20867:73:3;;;;;;;;;;;;;;;:::i;:::-;;;;;20809:142;20966:54;20996:9;21007:12;20966:29;:54::i;:::-;20961:179;;21036:27;:41;21064:12;:10;:12::i;:::-;-1:-1:-1;;;;;21036:41:3;-1:-1:-1;;;;;21036:41:3;;;;;;;;;;;;21078:9;21036:52;;;;;;;;;;;;;;;;;;;;;;;;21095:32;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;-1:-1;21036:93:3;;;;;;;;;;;23:18:-1;;21036:52:3;:93;;;;;;;;;;;;;:::i;:::-;;;;;20961:179;20044:1103;;;;;;;;:::o;35213:411::-;35322:4;35364:16;35372:7;35364;:16::i;:::-;35343:107;;;;-1:-1:-1;;;35343:107:3;;;;;;;;;35461:18;35482:16;35490:7;35482;:16::i;:::-;35461:37;;35529:10;-1:-1:-1;;;;;35518:21:3;:7;-1:-1:-1;;;;;35518:21:3;;:56;;;;35567:7;-1:-1:-1;;;;;35543:31:3;:20;35555:7;35543:11;:20::i;:::-;-1:-1:-1;;;;;35543:31:3;;35518:56;:97;;;;35578:37;35595:10;35607:7;35578:16;:37::i;36026:361::-;36140:4;36161:22;;:::i;:::-;36186:25;;;;:16;:25;;;;;;;;;36161:50;;;;;;;;;-1:-1:-1;;;;;36161:50:3;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36161:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;36186:25;;36161:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;36161:50:3;;;-1:-1:-1;;36161:50:3;;;;;;;;;;;;;;;;-1:-1:-1;;36161:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;36161:50:3;;;-1:-1:-1;;36161:50:3;;;;;;;;;;;;;;-1:-1:-1;;;36161:50:3;;;;;;;;-1:-1:-1;;;36161:50:3;;;;;;;;-1:-1:-1;;;36161:50:3;;;;;;;;;36234:13;;36161:50;;-1:-1:-1;;;;;;36226:21:3;;;;;;36222:64;;;36270:5;36263:12;;;;;36222:64;36306:13;;-1:-1:-1;;;;;36300:19:3;;;;;;36296:62;;;36342:5;36335:12;;;;;36768:518;36895:4;-1:-1:-1;;;;;36875:24:3;:16;36883:7;36875;:16::i;:::-;-1:-1:-1;;;;;36875:24:3;;36854:112;;;;-1:-1:-1;;;36854:112:3;;;;;;;;;-1:-1:-1;;;;;36998:16:3;;36977:99;;;;-1:-1:-1;;;36977:99:3;;;;;;;;;37087:23;37102:7;37087:14;:23::i;:::-;-1:-1:-1;;;;;37121:23:3;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;37166:21:3;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;37210:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;37210:25:3;-1:-1:-1;;;;;37210:25:3;;;;;;;;;37251:27;;37210:20;;37251:27;;;;;;;36768:518;;;:::o;17140:410::-;17185:7;-1:-1:-1;;;;;17213:16:3;;17205:61;;;;-1:-1:-1;;;17205:61:3;;;;;;;;;17277:21;:9;:19;:21::i;:::-;17308:15;17326:19;:9;:17;:19::i;:::-;17356:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;17356:25:3;-1:-1:-1;;;;;17356:25:3;;;;;;;;17391:21;;:17;:21;;;;;17356:20;;-1:-1:-1;17391:33:3;;:31;:33::i;:::-;-1:-1:-1;;;;;17434:22:3;;;;;;:18;:22;;;;;:34;;:32;:34::i;:::-;17484:33;;17509:7;;-1:-1:-1;;;;;17484:33:3;;;17501:1;;17484:33;;17501:1;;17484:33;17535:7;17140:410;-1:-1:-1;;17140:410:3:o;17819:221::-;17918:16;17926:7;17918;:16::i;:::-;17897:99;;;;-1:-1:-1;;;17897:99:3;;;;;;;;;18007:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;40217:92::-;40269:32;40275:16;40283:7;40275;:16::i;:::-;40293:7;40269:5;:32::i;16645:309::-;16713:7;16733:15;16751:9;16757:2;16751:5;:9::i;:::-;16733:27;;16792:53;16823:1;16827:2;16831:7;16840:4;16792:22;:53::i;:::-;16771:150;;;;-1:-1:-1;;;16771:150:3;;;;;;;;34176:316;34297:32;34311:4;34317:2;34321:7;34297:13;:32::i;:::-;34361:47;34384:4;34390:2;34394:7;34403:4;34361:22;:47::i;:::-;34340:144;;;;-1:-1:-1;;;34340:144:3;;;;;;;;19142:413;19312:10;19241:4;19287:36;;;:24;:36;;;;;;;;19258:65;;;;;;;;;;;;;;;;;:26;;19241:4;;19258:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19258:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19258:65:3;;-1:-1:-1;19333:15:3;;-1:-1:-1;19333:15:3;;-1:-1:-1;;19366:155:3;19387:1;:8;19383:1;:12;19366:155;;;19420:39;19433:9;19444:1;19446;19444:4;;;;;;;;;;;;;;:14;;;19420:12;:39::i;:::-;19416:95;;;19492:4;19479:17;;19416:95;19397:3;;19366:155;;19562:475;19777:10;19700:4;19749:39;;;:27;:39;;;;;;:50;;19717:29;;19749:39;:50;;19789:9;;19749:50;;;;;;;;;;;;;;;19717:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19717:82:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19717:82:3;;-1:-1:-1;19809:15:3;;-1:-1:-1;19809:15:3;;-1:-1:-1;;19842:161:3;19863:1;:8;19859:1;:12;19842:161;;;19896:45;19909:12;19923:1;19925;19923:4;;;;;;;19896:45;19892:101;;;19974:4;19961:17;;19892:101;19873:3;;19842:161;;;-1:-1:-1;20020:10:3;19562:475;-1:-1:-1;;;;19562:475:3:o;38393:173::-;38493:1;38457:24;;;:15;:24;;;;;;-1:-1:-1;;;;;38457:24:3;:38;38453:106;;38546:1;38511:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;38511:37:3;;;38393:173::o;1274:108:1:-;1354:14;;:21;;1373:1;1354:21;:18;:21;:::i;:::-;1337:38;;1274:108::o;1179:89::-;1242:19;;1260:1;1242:19;;;1179:89::o;39439:597:3:-;39552:10;-1:-1:-1;;;;;39532:30:3;:16;39540:7;39532;:16::i;:::-;-1:-1:-1;;;;;39532:30:3;;39511:114;;;;-1:-1:-1;;;39511:114:3;;;;;;;;;39636:23;39651:7;39636:14;:23::i;:::-;-1:-1:-1;;;;;39670:29:3;;;;;;:17;:29;;;;;:41;;:39;:41::i;:::-;39752:1;39721:20;;;:11;:20;;;;;;;;:33;;-1:-1:-1;;;;;;39721:33:3;;;39812:10;:19;;;;;39806:33;;-1:-1:-1;;39721:33:3;39806;;;39721;39806;;;;;;:38;39802:95;;39867:19;;;;:10;:19;;;;;39860:26;;;:::i;:::-;39946:25;;;;:16;:25;;;;;39939:32;;-1:-1:-1;;;;;;39939:32:3;;;39946:25;39939:32;;;;39946:25;39939:32;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;39939:32:3;;;;-1:-1:-1;;;;;;39939:32:3;;;39987:41;;40020:7;;39939:32;;-1:-1:-1;;;;;39987:41:3;;;;;39939:32;;39987:41;39439:597;;:::o;37874:357::-;38002:4;38028:15;:2;-1:-1:-1;;;;;38028:13:3;;:15::i;:::-;38023:58;;-1:-1:-1;38066:4:3;38059:11;;38023:58;38091:13;38123:2;-1:-1:-1;;;;;38107:36:3;;38144:12;:10;:12::i;:::-;38158:4;38164:7;38173:4;38107:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38107:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38107:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;38107:71:3;;;;;;;;;-1:-1:-1;;;;;;38196:26:3;-1:-1:-1;;;38196:26:3;;-1:-1:-1;;37874:357:3;;;;;;:::o;40343:230::-;40468:4;40560:1;40542:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;40542:21:3;;;40532:32;;;;;;40524:1;40506:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;40506:21:3;;;40496:32;;;;;;:68;40488:78;;40343:230;;;;:::o;1276:134:10:-;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;559:797:0:-;619:4;1267:20;;1112:66;1306:15;;;;;:42;;-1:-1:-1;1325:23:0;;;1298:51;-1:-1:-1;;559:797:0:o;1846:187:10:-;1932:7;1967:12;1959:6;;;;1951:29;;;;-1:-1:-1;;;1951:29:10;;;;;;;;;;-1:-1:-1;;;2002:5:10;;;1846:187::o;925:1239:8:-;;;;;;;;;-1:-1:-1;925:1239:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;925:1239:8;;;-1:-1:-1;925:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;348:13;;366:30;348:13;366:30;;408:128;474:20;;499:32;474:20;499:32;;543:132;620:13;;638:32;620:13;638:32;;683:440;;784:3;777:4;769:6;765:17;761:27;751:2;;802:1;799;792:12;751:2;839:6;826:20;861:64;876:48;917:6;876:48;;;861:64;;;852:73;;945:6;938:5;931:21;981:4;973:6;969:17;1014:4;1007:5;1003:16;1049:3;1040:6;1035:3;1031:16;1028:25;1025:2;;;1066:1;1063;1056:12;1025:2;1076:41;1110:6;1105:3;1100;1076:41;;;744:379;;;;;;;;1146:336;;;1261:3;1254:4;1246:6;1242:17;1238:27;1228:2;;1279:1;1276;1269:12;1228:2;-1:-1;1299:20;;1339:18;1328:30;;1325:2;;;1371:1;1368;1361:12;1325:2;1405:4;1397:6;1393:17;1381:29;;1455:3;1448;1440:6;1436:16;1426:8;1422:31;1419:40;1416:2;;;1472:1;1469;1462:12;1416:2;1221:261;;;;;;1941:128;2007:20;;2032:32;2007:20;2032:32;;2076:130;2143:20;;2168:33;2143:20;2168:33;;2213:128;2279:20;;2304:32;2279:20;2304:32;;2348:128;2414:20;;2439:32;2414:20;2439:32;;2483:241;;2587:2;2575:9;2566:7;2562:23;2558:32;2555:2;;;2603:1;2600;2593:12;2555:2;2638:1;2655:53;2700:7;2680:9;2655:53;;2731:366;;;2852:2;2840:9;2831:7;2827:23;2823:32;2820:2;;;2868:1;2865;2858:12;2820:2;2903:1;2920:53;2965:7;2945:9;2920:53;;;2910:63;;2882:97;3010:2;3028:53;3073:7;3064:6;3053:9;3049:22;3028:53;;;3018:63;;2989:98;2814:283;;;;;;3104:491;;;;3242:2;3230:9;3221:7;3217:23;3213:32;3210:2;;;3258:1;3255;3248:12;3210:2;3293:1;3310:53;3355:7;3335:9;3310:53;;;3300:63;;3272:97;3400:2;3418:53;3463:7;3454:6;3443:9;3439:22;3418:53;;;3408:63;;3379:98;3508:2;3526:53;3571:7;3562:6;3551:9;3547:22;3526:53;;;3516:63;;3487:98;3204:391;;;;;;3602:721;;;;;3766:3;3754:9;3745:7;3741:23;3737:33;3734:2;;;3783:1;3780;3773:12;3734:2;3818:1;3835:53;3880:7;3860:9;3835:53;;;3825:63;;3797:97;3925:2;3943:53;3988:7;3979:6;3968:9;3964:22;3943:53;;;3933:63;;3904:98;4033:2;4051:53;4096:7;4087:6;4076:9;4072:22;4051:53;;;4041:63;;4012:98;4169:2;4158:9;4154:18;4141:32;4193:18;4185:6;4182:30;4179:2;;;4225:1;4222;4215:12;4179:2;4245:62;4299:7;4290:6;4279:9;4275:22;4245:62;;;4235:72;;4120:193;3728:595;;;;;;;;4330:360;;;4448:2;4436:9;4427:7;4423:23;4419:32;4416:2;;;4464:1;4461;4454:12;4416:2;4499:1;4516:53;4561:7;4541:9;4516:53;;;4506:63;;4478:97;4606:2;4624:50;4666:7;4657:6;4646:9;4642:22;4624:50;;4697:492;;;;4838:2;4826:9;4817:7;4813:23;4809:32;4806:2;;;4854:1;4851;4844:12;4806:2;4889:1;4906:53;4951:7;4931:9;4906:53;;;4896:63;;4868:97;5024:2;5013:9;5009:18;4996:32;5048:18;5040:6;5037:30;5034:2;;;5080:1;5077;5070:12;5034:2;5108:65;5165:7;5156:6;5145:9;5141:22;5108:65;;;5098:75;;;;4975:204;4800:389;;;;;;5196:366;;;5317:2;5305:9;5296:7;5292:23;5288:32;5285:2;;;5333:1;5330;5323:12;5285:2;5368:1;5385:53;5430:7;5410:9;5385:53;;;5375:63;;5347:97;5475:2;5493:53;5538:7;5529:6;5518:9;5514:22;5493:53;;5569:257;;5681:2;5669:9;5660:7;5656:23;5652:32;5649:2;;;5697:1;5694;5687:12;5649:2;5732:1;5749:61;5802:7;5782:9;5749:61;;5833:239;;5936:2;5924:9;5915:7;5911:23;5907:32;5904:2;;;5952:1;5949;5942:12;5904:2;5987:1;6004:52;6048:7;6028:9;6004:52;;6079:261;;6193:2;6181:9;6172:7;6168:23;6164:32;6161:2;;;6209:1;6206;6199:12;6161:2;6244:1;6261:63;6316:7;6296:9;6261:63;;6347:1197;;;;;;;;6568:3;6556:9;6547:7;6543:23;6539:33;6536:2;;;6585:1;6582;6575:12;6536:2;6620:31;;6671:18;6660:30;;6657:2;;;6703:1;6700;6693:12;6657:2;6723:63;6778:7;6769:6;6758:9;6754:22;6723:63;;;6713:73;;6599:193;6851:2;6840:9;6836:18;6823:32;6875:18;6867:6;6864:30;6861:2;;;6907:1;6904;6897:12;6861:2;6927:63;6982:7;6973:6;6962:9;6958:22;6927:63;;;6917:73;;6802:194;7027:2;7045:52;7089:7;7080:6;7069:9;7065:22;7045:52;;;7035:62;;7006:97;7134:2;7152:52;7196:7;7187:6;7176:9;7172:22;7152:52;;;7142:62;;7113:97;7241:3;7260:52;7304:7;7295:6;7284:9;7280:22;7260:52;;;7250:62;;7220:98;7349:3;7368:52;7412:7;7403:6;7392:9;7388:22;7368:52;;;7358:62;;7328:98;7457:3;7476:52;7520:7;7511:6;7500:9;7496:22;7476:52;;;7466:62;;7436:98;6530:1014;;;;;;;;;;;7551:1427;;;;;;;;;7798:3;7786:9;7777:7;7773:23;7769:33;7766:2;;;7815:1;7812;7805:12;7766:2;7850:31;;7901:18;7890:30;;7887:2;;;7933:1;7930;7923:12;7887:2;7953:63;8008:7;7999:6;7988:9;7984:22;7953:63;;;7943:73;;7829:193;8081:2;8070:9;8066:18;8053:32;8105:18;8097:6;8094:30;8091:2;;;8137:1;8134;8127:12;8091:2;8157:63;8212:7;8203:6;8192:9;8188:22;8157:63;;;8147:73;;8032:194;8257:2;8275:52;8319:7;8310:6;8299:9;8295:22;8275:52;;;8265:62;;8236:97;8364:2;8382:52;8426:7;8417:6;8406:9;8402:22;8382:52;;;8372:62;;8343:97;8471:3;8490:52;8534:7;8525:6;8514:9;8510:22;8490:52;;;8480:62;;8450:98;8579:3;8598:52;8642:7;8633:6;8622:9;8618:22;8598:52;;;8588:62;;8558:98;8687:3;8706:52;8750:7;8741:6;8730:9;8726:22;8706:52;;;8696:62;;8666:98;8823:3;8812:9;8808:19;8795:33;8848:18;8840:6;8837:30;8834:2;;;8880:1;8877;8870:12;8834:2;8900:62;8954:7;8945:6;8934:9;8930:22;8900:62;;;8890:72;;8774:194;7760:1218;;;;;;;;;;;;10421:241;;10525:2;10513:9;10504:7;10500:23;10496:32;10493:2;;;10541:1;10538;10531:12;10493:2;10576:1;10593:53;10638:7;10618:9;10593:53;;10670:181;;10783:62;10841:3;10833:6;10783:62;;10860:173;;10947:46;10989:3;10981:6;10947:46;;;-1:-1;;11022:4;11013:14;;10940:93;11041:113;11124:24;11142:5;11124:24;;;11119:3;11112:37;11106:48;;;11190:896;;11347:60;11401:5;11347:60;;;11420:92;11505:6;11500:3;11420:92;;;11413:99;;11535:3;11577:4;11569:6;11565:17;11560:3;11556:27;11604:62;11660:5;11604:62;;;11686:7;11714:1;11699:348;11724:6;11721:1;11718:13;11699:348;;;11786:9;11780:4;11776:20;11771:3;11764:33;11831:6;11825:13;11853:76;11924:4;11909:13;11853:76;;;11845:84;;11946:66;12005:6;11946:66;;;12035:4;12026:14;;;;;11936:76;-1:-1;;11746:1;11739:9;11699:348;;;-1:-1;12060:4;;11326:760;-1:-1;;;;;;;11326:760;12125:690;;12270:54;12318:5;12270:54;;;12337:86;12416:6;12411:3;12337:86;;;12330:93;;12444:56;12494:5;12444:56;;;12520:7;12548:1;12533:260;12558:6;12555:1;12552:13;12533:260;;;12625:6;12619:13;12646:63;12705:3;12690:13;12646:63;;;12639:70;;12726:60;12779:6;12726:60;;;12716:70;-1:-1;;12580:1;12573:9;12533:260;;;-1:-1;12806:3;;12249:566;-1:-1;;;;;12249:566;12823:104;12900:21;12915:5;12900:21;;12934:343;;13044:38;13076:5;13044:38;;;13094:70;13157:6;13152:3;13094:70;;;13087:77;;13169:52;13214:6;13209:3;13202:4;13195:5;13191:16;13169:52;;;13242:29;13264:6;13242:29;;;13233:39;;;;13024:253;-1:-1;;;13024:253;13284:174;13391:61;13446:5;13391:61;;13490:313;;13624:89;13706:6;13701:3;13624:89;;;13617:96;;13725:43;13761:6;13756:3;13749:5;13725:43;;;-1:-1;;13781:16;;13610:193;14165:360;;14295:39;14328:5;14295:39;;;14346:89;14428:6;14423:3;14346:89;;;14339:96;;14440:52;14485:6;14480:3;14473:4;14466:5;14462:16;14440:52;;;14504:16;;;;;14275:250;-1:-1;;14275:250;14859:364;;15019:67;15083:2;15078:3;15019:67;;;15119:66;15099:87;;15214:2;15205:12;;15005:218;-1:-1;;15005:218;15232:465;;15392:67;15456:2;15451:3;15392:67;;;15492:66;15472:87;;-1:-1;;;15588:2;15579:12;;15572:88;15688:2;15679:12;;15378:319;-1:-1;;15378:319;15706:364;;15866:67;15930:2;15925:3;15866:67;;;-1:-1;;;15946:87;;16061:2;16052:12;;15852:218;-1:-1;;15852:218;16079:465;;16239:67;16303:2;16298:3;16239:67;;;16339:66;16319:87;;-1:-1;;;16435:2;16426:12;;16419:88;16535:2;16526:12;;16225:319;-1:-1;;16225:319;16553:465;;16713:67;16777:2;16772:3;16713:67;;;16813:66;16793:87;;-1:-1;;;16909:2;16900:12;;16893:88;17009:2;17000:12;;16699:319;-1:-1;;16699:319;17027:364;;17187:67;17251:2;17246:3;17187:67;;;17287:66;17267:87;;17382:2;17373:12;;17173:218;-1:-1;;17173:218;17400:465;;17560:67;17624:2;17619:3;17560:67;;;17660:66;17640:87;;-1:-1;;;17756:2;17747:12;;17740:88;17856:2;17847:12;;17546:319;-1:-1;;17546:319;17874:364;;18034:67;18098:2;18093:3;18034:67;;;18134:66;18114:87;;18229:2;18220:12;;18020:218;-1:-1;;18020:218;18247:465;;18407:67;18471:2;18466:3;18407:67;;;18507:66;18487:87;;-1:-1;;;18603:2;18594:12;;18587:88;18703:2;18694:12;;18393:319;-1:-1;;18393:319;18721:465;;18881:67;18945:2;18940:3;18881:67;;;18981:66;18961:87;;-1:-1;;;19077:2;19068:12;;19061:88;19177:2;19168:12;;18867:319;-1:-1;;18867:319;19195:465;;19355:67;19419:2;19414:3;19355:67;;;19455:66;19435:87;;-1:-1;;;19551:2;19542:12;;19535:88;19651:2;19642:12;;19341:319;-1:-1;;19341:319;19669:465;;19829:67;19893:2;19888:3;19829:67;;;19929:66;19909:87;;-1:-1;;;20025:2;20016:12;;20009:88;20125:2;20116:12;;19815:319;-1:-1;;19815:319;20143:364;;20303:67;20367:2;20362:3;20303:67;;;20403:66;20383:87;;20498:2;20489:12;;20289:218;-1:-1;;20289:218;20516:465;;20676:67;20740:2;20735:3;20676:67;;;20776:66;20756:87;;20877:66;20872:2;20863:12;;20856:88;20972:2;20963:12;;20662:319;-1:-1;;20662:319;20990:364;;21150:67;21214:2;21209:3;21150:67;;;21250:66;21230:87;;21345:2;21336:12;;21136:218;-1:-1;;21136:218;21363:465;;21523:67;21587:2;21582:3;21523:67;;;21623:66;21603:87;;-1:-1;;;21719:2;21710:12;;21703:88;21819:2;21810:12;;21509:319;-1:-1;;21509:319;21837:465;;21997:67;22061:2;22056:3;21997:67;;;22097:66;22077:87;;-1:-1;;;22193:2;22184:12;;22177:88;22293:2;22284:12;;21983:319;-1:-1;;21983:319;22311:364;;22471:67;22535:2;22530:3;22471:67;;;-1:-1;;;22551:87;;22666:2;22657:12;;22457:218;-1:-1;;22457:218;22684:465;;22844:67;22908:2;22903:3;22844:67;;;22944:66;22924:87;;-1:-1;;;23040:2;23031:12;;23024:88;23140:2;23131:12;;22830:319;-1:-1;;22830:319;23158:364;;23318:67;23382:2;23377:3;23318:67;;;23418:66;23398:87;;23513:2;23504:12;;23304:218;-1:-1;;23304:218;23531:296;;23708:83;23789:1;23784:3;23708:83;;23836:465;;23996:67;24060:2;24055:3;23996:67;;;24096:66;24076:87;;-1:-1;;;24192:2;24183:12;;24176:88;24292:2;24283:12;;23982:319;-1:-1;;23982:319;24310:364;;24470:67;24534:2;24529:3;24470:67;;;-1:-1;;;24550:87;;24665:2;24656:12;;24456:218;-1:-1;;24456:218;24683:465;;24843:67;24907:2;24902:3;24843:67;;;24943:66;24923:87;;-1:-1;;;25039:2;25030:12;;25023:88;25139:2;25130:12;;24829:319;-1:-1;;24829:319;25157:465;;25317:67;25381:2;25376:3;25317:67;;;25417:66;25397:87;;-1:-1;;;25513:2;25504:12;;25497:88;25613:2;25604:12;;25303:319;-1:-1;;25303:319;25631:364;;25791:67;25855:2;25850:3;25791:67;;;25891:66;25871:87;;25986:2;25977:12;;25777:218;-1:-1;;25777:218;26004:364;;26164:67;26228:2;26223:3;26164:67;;;26264:66;26244:87;;26359:2;26350:12;;26150:218;-1:-1;;26150:218;26377:465;;26537:67;26601:2;26596:3;26537:67;;;26637:66;26617:87;;-1:-1;;;26733:2;26724:12;;26717:88;26833:2;26824:12;;26523:319;-1:-1;;26523:319;26851:465;;27011:67;27075:2;27070:3;27011:67;;;27111:66;27091:87;;-1:-1;;;27207:2;27198:12;;27191:88;27307:2;27298:12;;26997:319;-1:-1;;26997:319;27325:465;;27485:67;27549:2;27544:3;27485:67;;;27585:66;27565:87;;-1:-1;;;27681:2;27672:12;;27665:88;27781:2;27772:12;;27471:319;-1:-1;;27471:319;27799:364;;27959:67;28023:2;28018:3;27959:67;;;28059:66;28039:87;;28154:2;28145:12;;27945:218;-1:-1;;27945:218;28171:110;28252:23;28269:5;28252:23;;28288:103;28361:24;28379:5;28361:24;;28518:110;28599:23;28616:5;28599:23;;28635:110;28716:23;28733:5;28716:23;;28752:286;;28908:105;29009:3;29000:6;28992;28908:105;;29045:266;;29191:95;29282:3;29273:6;29191:95;;29318:370;;29516:147;29659:3;29516:147;;29695:213;29813:2;29798:18;;29827:71;29802:9;29871:6;29827:71;;29915:1263;30287:3;30272:19;;30302:71;30276:9;30346:6;30302:71;;;30384:72;30452:2;30441:9;30437:18;30428:6;30384:72;;;30504:9;30498:4;30494:20;30489:2;30478:9;30474:18;30467:48;30529:78;30602:4;30593:6;30529:78;;;30521:86;;30655:9;30649:4;30645:20;30640:2;30629:9;30625:18;30618:48;30680:78;30753:4;30744:6;30680:78;;;30672:86;;30769:71;30835:3;30824:9;30820:19;30811:6;30769:71;;;30851;30917:3;30906:9;30902:19;30893:6;30851:71;;;30933;30999:3;30988:9;30984:19;30975:6;30933:71;;;31015;31081:3;31070:9;31066:19;31057:6;31015:71;;;31097;31163:3;31152:9;31148:19;31139:6;31097:71;;;30258:920;;;;;;;;;;;;;31185:435;31359:2;31344:18;;31373:71;31348:9;31417:6;31373:71;;;31455:72;31523:2;31512:9;31508:18;31499:6;31455:72;;;31538;31606:2;31595:9;31591:18;31582:6;31538:72;;31627:631;31847:3;31832:19;;31862:71;31836:9;31906:6;31862:71;;;31944:72;32012:2;32001:9;31997:18;31988:6;31944:72;;;32027;32095:2;32084:9;32080:18;32071:6;32027:72;;;32147:9;32141:4;32137:20;32132:2;32121:9;32117:18;32110:48;32172:76;32243:4;32234:6;32172:76;;;32164:84;31818:440;-1:-1;;;;;;31818:440;32265:385;32445:2;32459:47;;;32430:18;;32520:120;32430:18;32626:6;32520:120;;32657:361;32825:2;32839:47;;;32810:18;;32900:108;32810:18;32994:6;32900:108;;33025:201;33137:2;33122:18;;33151:65;33126:9;33189:6;33151:65;;33233:261;33375:2;33360:18;;33389:95;33364:9;33457:6;33389:95;;33501:301;33639:2;33653:47;;;33624:18;;33714:78;33624:18;33778:6;33714:78;;33809:407;34000:2;34014:47;;;33985:18;;34075:131;33985:18;34075:131;;34223:407;34414:2;34428:47;;;34399:18;;34489:131;34399:18;34489:131;;34637:407;34828:2;34842:47;;;34813:18;;34903:131;34813:18;34903:131;;35051:407;35242:2;35256:47;;;35227:18;;35317:131;35227:18;35317:131;;35465:407;35656:2;35670:47;;;35641:18;;35731:131;35641:18;35731:131;;35879:407;36070:2;36084:47;;;36055:18;;36145:131;36055:18;36145:131;;36293:407;36484:2;36498:47;;;36469:18;;36559:131;36469:18;36559:131;;36707:407;36898:2;36912:47;;;36883:18;;36973:131;36883:18;36973:131;;37121:407;37312:2;37326:47;;;37297:18;;37387:131;37297:18;37387:131;;37535:407;37726:2;37740:47;;;37711:18;;37801:131;37711:18;37801:131;;37949:407;38140:2;38154:47;;;38125:18;;38215:131;38125:18;38215:131;;38363:407;38554:2;38568:47;;;38539:18;;38629:131;38539:18;38629:131;;38777:407;38968:2;38982:47;;;38953:18;;39043:131;38953:18;39043:131;;39191:407;39382:2;39396:47;;;39367:18;;39457:131;39367:18;39457:131;;39605:407;39796:2;39810:47;;;39781:18;;39871:131;39781:18;39871:131;;40019:407;40210:2;40224:47;;;40195:18;;40285:131;40195:18;40285:131;;40433:407;40624:2;40638:47;;;40609:18;;40699:131;40609:18;40699:131;;40847:407;41038:2;41052:47;;;41023:18;;41113:131;41023:18;41113:131;;41261:407;41452:2;41466:47;;;41437:18;;41527:131;41437:18;41527:131;;41675:407;41866:2;41880:47;;;41851:18;;41941:131;41851:18;41941:131;;42089:407;42280:2;42294:47;;;42265:18;;42355:131;42265:18;42355:131;;42503:407;42694:2;42708:47;;;42679:18;;42769:131;42679:18;42769:131;;42917:407;43108:2;43122:47;;;43093:18;;43183:131;43093:18;43183:131;;43331:407;43522:2;43536:47;;;43507:18;;43597:131;43507:18;43597:131;;43745:407;43936:2;43950:47;;;43921:18;;44011:131;43921:18;44011:131;;44159:407;44350:2;44364:47;;;44335:18;;44425:131;44335:18;44425:131;;44573:407;44764:2;44778:47;;;44749:18;;44839:131;44749:18;44839:131;;44987:407;45178:2;45192:47;;;45163:18;;45253:131;45163:18;45253:131;;45401:407;45592:2;45606:47;;;45577:18;;45667:131;45577:18;45667:131;;45815:407;46006:2;46020:47;;;45991:18;;46081:131;45991:18;46081:131;;46229:213;46347:2;46332:18;;46361:71;46336:9;46405:6;46361:71;;46449:209;46565:2;46550:18;;46579:69;46554:9;46621:6;46579:69;;46665:256;46727:2;46721:9;46753:17;;;46828:18;46813:34;;46849:22;;;46810:62;46807:2;;;46885:1;46882;46875:12;46807:2;46901;46894:22;46705:216;;-1:-1;46705:216;46928:321;;47071:18;47063:6;47060:30;47057:2;;;47103:1;47100;47093:12;47057:2;-1:-1;47234:4;47170;47147:17;;;;-1:-1;;47143:33;47224:15;;46994:255;47585:157;47715:4;47706:14;;47663:79;47907:143;48016:12;;47987:63;48820:184;48944:19;;;48993:4;48984:14;;48937:67;50011:91;;50073:24;50091:5;50073:24;;50109:85;50175:13;50168:21;;50151:43;50201:144;-1:-1;;;;;;50262:78;;50245:100;50352:84;50424:6;50413:18;;50396:40;50443:121;-1:-1;;;;;50505:54;;50488:76;50650:88;50722:10;50711:22;;50694:44;50745:92;50817:14;50806:26;;50789:48;50844:169;;50947:61;51002:5;50947:61;;51160:145;51241:6;51236:3;51231;51218:30;-1:-1;51297:1;51279:16;;51272:27;51211:94;51314:268;51379:1;51386:101;51400:6;51397:1;51394:13;51386:101;;;51467:11;;;51461:18;51448:11;;;51441:39;51422:2;51415:10;51386:101;;;51502:6;51499:1;51496:13;51493:2;;;-1:-1;;51567:1;51549:16;;51542:27;51363:219;51590:97;51678:2;51658:14;-1:-1;;51654:28;;51638:49;51695:117;51764:24;51782:5;51764:24;;;51757:5;51754:35;51744:2;;51803:1;51800;51793:12;51819:111;51885:21;51900:5;51885:21;;51937:115;52005:23;52022:5;52005:23;;52059:115;52127:23;52144:5;52127:23;;52181:117;52250:24;52268:5;52250:24;;52305:115;52373:23;52390:5;52373:23;;52427:115;52495:23;52512:5;52495:23;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n\n\n  Copyright 2020 Niche Networks, Inc. (owns & operates Microsponsors.io)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2544
      ]
    },
    "id": 2545,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2488,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2489,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2490,
        "nodeType": "ImportDirective",
        "scope": 2545,
        "sourceUnit": 2335,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2491,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2334,
              "src": "951:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2334",
                "typeString": "contract ERC721"
              }
            },
            "id": 2492,
            "nodeType": "InheritanceSpecifier",
            "src": "951:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2334,
          2344,
          2447
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nCopyright 2020 Niche Networks, Inc. (owns & operates Microsponsors.io)\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2544,
        "linearizedBaseContracts": [
          2544,
          2334,
          2447,
          142,
          2344
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2494,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2544,
            "src": "983:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2493,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "983:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2496,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2544,
            "src": "1030:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2495,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2499,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2544,
            "src": "1319:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2497,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1319:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2498,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1375:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2526,
              "nodeType": "Block",
              "src": "1528:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2508,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2494,
                      "src": "1539:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2509,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2501,
                      "src": "1547:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1539:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2511,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2512,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2496,
                      "src": "1561:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2513,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2503,
                      "src": "1571:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1561:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2515,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2517,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "1684:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2516,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1665:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2519,
                  "nodeType": "ExpressionStatement",
                  "src": "1665:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2523,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2505,
                        "src": "1753:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2520,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2838,
                        "src": "1725:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2544",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 407,
                      "src": "1725:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2525,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2527,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2501,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2527,
                  "src": "1454:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2500,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2503,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2527,
                  "src": "1474:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2502,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2505,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2527,
                  "src": "1496:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1453:67:8"
            },
            "returnParameters": {
              "id": 2507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1528:0:8"
            },
            "scope": 2544,
            "src": "1441:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2534,
              "nodeType": "Block",
              "src": "1936:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2532,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2494,
                    "src": "1953:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2531,
                  "id": 2533,
                  "nodeType": "Return",
                  "src": "1946:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1895:2:8"
            },
            "returnParameters": {
              "id": 2531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2530,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2535,
                  "src": "1921:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2529,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1920:15:8"
            },
            "scope": 2544,
            "src": "1882:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2542,
              "nodeType": "Block",
              "src": "2130:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2540,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2496,
                    "src": "2147:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2539,
                  "id": 2541,
                  "nodeType": "Return",
                  "src": "2140:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:2:8"
            },
            "returnParameters": {
              "id": 2539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2538,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "2115:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2537,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2114:15:8"
            },
            "scope": 2544,
            "src": "2074:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2545,
        "src": "925:1239:8"
      }
    ],
    "src": "0:2165:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2544
      ]
    },
    "id": 2545,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2488,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2489,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2490,
        "nodeType": "ImportDirective",
        "scope": 2545,
        "sourceUnit": 2335,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2491,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2334,
              "src": "951:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2334",
                "typeString": "contract ERC721"
              }
            },
            "id": 2492,
            "nodeType": "InheritanceSpecifier",
            "src": "951:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2334,
          2344,
          2447
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nCopyright 2020 Niche Networks, Inc. (owns & operates Microsponsors.io)\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2544,
        "linearizedBaseContracts": [
          2544,
          2334,
          2447,
          142,
          2344
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2494,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2544,
            "src": "983:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2493,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "983:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2496,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2544,
            "src": "1030:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2495,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2499,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2544,
            "src": "1319:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2497,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1319:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2498,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1375:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2526,
              "nodeType": "Block",
              "src": "1528:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2508,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2494,
                      "src": "1539:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2509,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2501,
                      "src": "1547:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1539:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2511,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2512,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2496,
                      "src": "1561:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2513,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2503,
                      "src": "1571:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1561:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2515,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2517,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "1684:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2516,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1665:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2519,
                  "nodeType": "ExpressionStatement",
                  "src": "1665:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2523,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2505,
                        "src": "1753:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2520,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2838,
                        "src": "1725:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2544",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 407,
                      "src": "1725:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2525,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2527,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2501,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2527,
                  "src": "1454:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2500,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2503,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2527,
                  "src": "1474:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2502,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2505,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2527,
                  "src": "1496:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1453:67:8"
            },
            "returnParameters": {
              "id": 2507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1528:0:8"
            },
            "scope": 2544,
            "src": "1441:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2534,
              "nodeType": "Block",
              "src": "1936:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2532,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2494,
                    "src": "1953:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2531,
                  "id": 2533,
                  "nodeType": "Return",
                  "src": "1946:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1895:2:8"
            },
            "returnParameters": {
              "id": 2531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2530,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2535,
                  "src": "1921:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2529,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1920:15:8"
            },
            "scope": 2544,
            "src": "1882:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2542,
              "nodeType": "Block",
              "src": "2130:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2540,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2496,
                    "src": "2147:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2539,
                  "id": 2541,
                  "nodeType": "Return",
                  "src": "2140:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:2:8"
            },
            "returnParameters": {
              "id": 2539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2538,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "2115:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2537,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2114:15:8"
            },
            "scope": 2544,
            "src": "2074:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2545,
        "src": "925:1239:8"
      }
    ],
    "src": "0:2165:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {
    "1578017975680": {
      "events": {},
      "links": {},
      "address": "0x58f563070385e87f2235E0870D46D2689A23b456",
      "transactionHash": "0x2878d3d5922d6d93eef0fcd79b17c58556ad93348d66ce83e6b3e1bb7929647f"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2020-01-03T02:22:35.778Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Customized for MicrosponsorsBurns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned"
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "disableGlobalResale()": {
        "details": "Called by contract owner to disable token tranfer (resale) by buyer."
      },
      "enableGlobalResale()": {
        "details": "Called by contract owner to enable token transfer (resale) by buyer."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "mint(string,string,uint48,uint48,uint48,uint16,uint32)": {
        "details": "Function to mint tokens.",
        "return": "tokenId"
      },
      "mintWithTokenURI(string,string,uint48,uint48,uint48,uint16,uint32,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause minting and transfers."
      },
      "safeMint(string,string,uint48,uint48,uint48,uint16,uint32)": {
        "details": "Function to safely mint tokens.",
        "return": "tokenId"
      },
      "safeMint(string,string,uint48,uint48,uint48,uint16,uint32,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check."
        },
        "return": "tokenId"
      },
      "safeMintWithTokenURI(string,string,uint48,uint48,uint48,uint16,uint32,string)": {
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations."
      },
      "tokenMinterPropertyNames(address,string)": {
        "details": "Look up all Property Names a Minter has created Time Slots for      with a particular Content ID"
      },
      "tokenURI(uint256)": {
        "params": {
          "tokenId": "uint256 ID of the token to query"
        },
        "return": "URI for a given token ID."
      },
      "tokensMintedBy(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time)."
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership1(address)": {
        "details": "Transfer owner (admin) functions to another address",
        "params": {
          "newOwner": "Address of new owner/ admin of contract"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause minting and transfers."
      },
      "updateMintFee(uint256)": {
        "details": "Update the fee (in wei) charged for minting a single token"
      },
      "updateRegistryAddress(address)": {
        "details": "Update contract address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      },
      "withdrawBalance()": {
        "details": "Admin withdraws entire balance from contract."
      }
    }
  },
  "userdoc": {
    "methods": {
      "tokenURI(uint256)": {
        "notice": "Throws if the token ID does not exist. May return an empty string."
      },
      "tokensMintedBy(address)": {
        "notice": "Return all the Token IDs minted by a given account."
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Copyright 2020 Niche Networks, Inc. (owns & operates Microsponsors.io) Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  }
}